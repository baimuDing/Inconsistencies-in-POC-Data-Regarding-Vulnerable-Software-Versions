{
    "text": "vul_url : ， vul_name : number_to_currency XSS Vulnerability ， vul_date : 2013.12.04 ， vul_credit_name : Aaron ， vul_risk : Low ， vul_local : No ， vul_remote : Yes ， vul_cve : CVE-2013-6415 ， vul_cwe : CWE-79 ， vul_poc : XSS Vulnerability in number_to_currency ， There is an XSS vulnerability in the number_to_currency helper in Ruby on Raile. This vulnerability has been assigned the CVE identifier CVE-2013-6415. ， Versions Affected: All. ， Fixed Versions: 4.0.2, 3.2.16. ， Impact ， The number_to_currency helper allows users to nicely format a numeric value. One of the parameters to the helper (unit) is not escaped correctly. Application which pass user controlled data as the unit parameter are vulnerable to an XSS attack. ， All users passing user controlled data as number_to_currency's unit parameters should either upgrade or use one of the workarounds immediately. ， Releases ， The 4.0.2 and 3.2.16 releases are available at the normal locations. ， Workarounds ， The workaround for this issue is to escape the value passed to the :unit parameter. For example, replace code like this: ， <%= number_to_currency(1.02, unit: params[:currency]) %> ， With code like this ， <%= number_to_currency(1.02, unit: h(params[:currency]) %> ， Patches ， To aid users who aren't able to upgrade immediately we have provided patches for the two supported release series. They are in git-am format and consist of a single changeset. ， * 4-0-number_to_currency_xss.patch - Patch for 4.0 series ， * 3-2-number_to_currency_xss.patch - Patch for 3.2 series ， Please note that only the 4.0.x and 3.2.x series are supported at present. Users of earlier unsupported releases are advised to upgrade as soon as possible as we cannot guarantee the continued availability of security fixes for unsupported releases. ， Credits ， Thanks to Ankit Gupta for reporting the issue to us and working with us on a fix. ， - Aaron Patterson ， 3-2-number_to_currency_xss.patch ， From 015fab69f597de2ff909ec7a7a07f7fa0007f4d9 Mon Sep 17 00:00:00 2001 ， From: Michael Koziarski <michael@koziarski.com> ， Date: Wed, 13 Nov 2013 16:14:07 +1300 ， Subject: [PATCH] Escape the unit value provided to number_to_currency ， Fixes CVE-2013-6415 ， Previously the values were trusted blindly allowing for potential XSS attacks. ， actionpack/lib/action_view/helpers/number_helper.rb | 2 +- ， actionpack/test/template/number_helper_test.rb | 7 +- ， 2 files changed, 5 insertions(+), 4 deletions(-) ， diff -git a/actionpack/lib/action_view/helpers/number_helper.rb b/actionpack/lib/action_view/helpers/number_helper.rb ， index ad86d13.eee9e59 100644 ， - a/actionpack/lib/action_view/helpers/number_helper.rb ， + b/actionpack/lib/action_view/helpers/number_helper.rb ， -156,7 +156,7 module ActionView ， begin ， value = number_with_precision(number, options.merge(:raise => true) ， - format.gsub(/%n/, value).gsub(/%u/, unit).html_safe ， + format.gsub(/%n/, ERB:Util.html_escape(value).gsub(/%u/, ERB:Util.html_escape(unit).html_safe ， rescue InvalidNumberError => e ， raise ， diff -git a/actionpack/test/template/number_helper_test.rb b/actionpack/test/template/number_helper_test.rb ， index 37ce3cf.22da7e2 100644 ， - a/actionpack/test/template/number_helper_test.rb ， + b/actionpack/test/template/number_helper_test.rb ， -43,10 +43,11 class NumberHelperTest < ActionView:TestCase ， assert_equal(\"($1,234,567,890.50)\", number_to_currency(-1234567890.50, {:negative_format => \"(%u%n)\"}) ， assert_equal(\"$1,234,567,892\", number_to_currency(1234567891.50, {:precision => 0}) ， assert_equal(\"$1,234,567,890.5\", number_to_currency(1234567890.50, {:precision => 1}) ， - assert_equal(\"&pound;1234567890,50\", number_to_currency(1234567890.50, {:unit => \"&pound;\", :separator => \",\", :delimiter => \"}) ， + assert_equal(\"&pound;1234567890,50\", number_to_currency(1234567890.50, {:unit => raw(\"&pound;\"), :separator => \",\", :delimiter => \"}) ， + assert_equal(\"&amp;pound;1234567890,50\", number_to_currency(1234567890.50, {:unit => \"&pound;\", :separator => \",\", :delimiter => \"}) ， assert_equal(\"$1,234,567,890.50\", number_to_currency(\"1234567890.50\") ， - assert_equal(\"1,234,567,890.50 K&#269;\", number_to_currency(\"1234567890.50\", {:unit => \"K&#269;\", :format => \"%n %u\"}) ， - assert_equal(\"1,234,567,890.50 - K&#269;\", number_to_currency(\"-1234567890.50\", {:unit => \"K&#269;\", :format => \"%n %u\", :negative_format => \"%n - %u\"}) ， + assert_equal(\"1,234,567,890.50 K&#269;\", number_to_currency(\"1234567890.50\", {:unit => raw(\"K&#269;\"), :format => \"%n %u\"}) ， + assert_equal(\"1,234,567,890.50 - K&#269;\", number_to_currency(\"-1234567890.50\", {:unit => raw(\"K&#269;\"), :format => \"%n %u\", :negative_format => \"%n - %u\"}) ， end ， def test_number_to_percentage ， - 1.8.3.4 ， 4-0-number_to_currency_xss.patch ， From b6640db0b69b3f3ee4d029abf05754cbe6097c41 Mon Sep 17 00:00:00 2001 ， From: Michael Koziarski <michael@koziarski.com> ， Date: Mon, 2 Dec 2013 10:12:47 +1300 ， Subject: [PATCH] Escape the unit value provided to number_to_currency ， Previously the unit values were trusted leading to potential XSS vulnerabilities. ， Fixes: CVE-2013-6415 ， actionpack/lib/action_view/helpers/number_helper.rb | 1 + ， actionpack/test/template/number_helper_test.rb | 3 +- ， 2 files changed, 3 insertions(+), 1 deletion(-) ， diff -git a/actionpack/lib/action_view/helpers/number_helper.rb b/actionpack/lib/action_view/helpers/number_helper.rb ， index fda7038.f3914e4 100644 ， - a/actionpack/lib/action_view/helpers/number_helper.rb ， + b/actionpack/lib/action_view/helpers/number_helper.rb ， -411,6 +411,7 module ActionView ， options[:separator] = ERB:Util.html_escape(options[:separator]) if options[:separator] !options[:separator].html_safe? ， options[:delimiter] = ERB:Util.html_escape(options[:delimiter]) if options[:delimiter] !options[:delimiter].html_safe? ， + options[:unit] = ERB:Util.html_escape(options[:unit]) if options[:unit] !options[:unit].html_safe? ， options ， end ， diff -git a/actionpack/test/template/number_helper_test.rb b/actionpack/test/template/number_helper_test.rb ， index 6e64088.be336ea 100644 ， - a/actionpack/test/template/number_helper_test.rb ， + b/actionpack/test/template/number_helper_test.rb ， -14,7 +14,8 class NumberHelperTest < ActionView:TestCase ， assert_equal nil, number_to_currency(nil) ， assert_equal \"$1,234,567,890.50\", number_to_currency(1234567890.50) ， assert_equal \"$1,234,567,892\", number_to_currency(1234567891.50, precision: 0) ， - assert_equal \"1,234,567,890.50 - K&#269;\", number_to_currency(\"-1234567890.50\", unit: \"K&#269;\", format: \"%n %u\", negative_format: \"%n - %u\") ， + assert_equal \"1,234,567,890.50 - K&#269;\", number_to_currency(\"-1234567890.50\", unit: raw(\"K&#269;\"), format: \"%n %u\", negative_format: \"%n - %u\") ， + assert_equal \"&amp;pound;1,234,567,890.50\", number_to_currency(\"1234567890.50\", unit: \"&pound;\") ， end ， def test_number_to_percentage ， - 1.8.3.4"
}