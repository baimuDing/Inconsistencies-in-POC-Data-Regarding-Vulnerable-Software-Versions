{
    "text": "vul_name : Nagios Core Curl Command Injection / Code Execution ， vul_cve : CVE-2016-9565 , CVE-2008-4796 , CVE-2016-9566 ， vul_poc : _ _ _ _ _ ， / / _ _ _ _/ / / / / /_ _/ /_ _ ， / / / _ \\/ _ `/ _ `/ / / /_/ / _ `/ _/ /_/ _ \\/ _/ _/ ， / /_/ _/ /_/ / /_/ / / / _ / /_/ / /_/ , < / _/ / ( _ )  ， /_/\\_/\\_ , /\\_ , _/_/ /_/ /_/\\_ , _/\\_/_/ | _ | \\_/_/ /_/ ， /_/ ， - Discovered by : Dawid Golunski ， - dawid [ at ] legalhackers.com ， - CVE-2016-9565 ， - Release date : 13.12.2016 ， - Revision 2.0 ， - Severity : High / Critical ， I. VULNERABILITY ， Nagios Core < 4.2.2 Curl Command Injection / Remote Code Execution ， II. BACKGROUND ， \"Nagios Is The Industry Standard In IT Infrastructure Monitoring ， Achieve instant awareness of IT infrastructure problems , so downtime doesn't ， adversely affect your business. ， Nagios offers complete monitoring and alerting for servers , switches ,  ， applications , and services.\" ， III. INTRODUCTION ， Nagios Core comes with a PHP/CGI front-end which allows to view status ， of the monitored hosts. ， This front-end contained a Command Injection vulnerability in a RSS feed reader ， class that loads ( via insecure clear-text HTTP or HTTPS accepting self-signed ， certificates ) the latest Nagios news from a remote RSS feed ( located on the ， vendor's server on the Internet ) upon log-in to the Nagios front-end. ， The vulnerability could potentially enable remote unauthenticated attackers who ， managed to impersonate the feed server ( via DNS poisoning , domain hijacking ,  ， ARP spoofing etc. )  , to provide a malicious response that injects parameters to ， curl command used by the affected RSS client class and effectively ， read/write arbitrary files on the vulnerable Nagios server. ， This could lead to Remote Code Execution in the context of www-data/nagios user ， on default Nagios installs that follow the official setup guidelines. ， IV. DESCRIPTION ， Vulnerability ， The vulnerability was caused by the use of a vulnerable component for handling ， RSS news feeds - MagpieRSS in Nagios Core control panel / front-end. ， The component was used by Nagios front-end to load news feeds from remote ， feed source upon log-in. ， The component was found vulnerable to CVE-2008-4796. ， Below are relevant parts of code from the vulnerable RSS class :  ， { ， . ， case \"https\" :  ， . ，  $ path = $ URI_PARTS [ \"path\" ] . (  $ URI_PARTS [ \"query\" ] ? \"?\". $ URI_PARTS [ \"query\" ]  : \" )  ;  ，  $ this->_httpsrequest (  $ path ,  $ URI ,  $ this->_httpmethod )  ;  ， . ， } ， . ， { ，  # accept self-signed certs ，  $ cmdline_params .= \" -k\" ;  ， exec (  $ this->curl_path.\" -D \\\"/tmp/ $ headerfile\\\".escapeshellcmd (  $ cmdline_params ) .\" \".escapeshellcmd (  $ URI )  ,  $ results ,  $ return )  ;  ， As can be seen , the _httpsrequest function uses a curl command to handle HTTPS ， requests. The sanitization used to escape $ URI did not prevent injection of ， additional parameters to curl command which made it possible to , for example , get ， curl to write out the https response to an arbitrary file with the $ URI :  ， -o /tmp/result_file ， The vulnerability was reported to Nagios security team. ， Nagios 4.2.0 was released which contained the following fix for CVE-2008-4796 :  ，  # accept self-signed certs ，  $ cmdline_params .= \" -k\" ;  ， exec (  $ this->curl_path.\" -D \\\"/tmp/ $ headerfile\\\". $ cmdline_params.\" \\\".escapeshellcmd (  $ URI ) .\"\\\" ,  $ results ,  $ return )  ;  ， Further research found the fix to be incomplete as the extra sanitization ， by the above patch could be bypassed by adding extra quote characters in ， the $ URI variable e.g :  ， -o /tmp/nagioshackedagain \" ， This vulnerability has been assigned CVE-2016-9565 and was addressed by Nagios ， team in the new release of Nagios 4.2.2 by removing the vulnerable class. ， Injection Point / Controling $ URI var ， The affected versions of Nagios Core front-end contain three files that trigger ， the _httpsrequest (  ) function with the injectable curl command shown above :  ， - rss-corefeed.php ， - rss-corebanner.php ， - rss-newsfeed.php ， These are used to fetch news via an RSS feed from www.nagios.org website via ， HTTP or HTTPS ( see the notes below ) protocols. ， The news are displayed on the Home page of the Nagios front-end upon log-in. ， All 3 scripts call fetch_rss (  ) as follows :  ， - [ rss-corefeed.php ] -",
    "time": "2016.12.16"
}