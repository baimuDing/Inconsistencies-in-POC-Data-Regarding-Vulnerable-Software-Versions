{
    "text": "vul_name : Linux Kernel 3.15.1 mm/shmem.c denial of service ， vul_cve : CVE-2014-4171 ， vul_poc : From : Hugh Dickins <hughd @ google.com> ， Subject : shmem : fix faulting into a hole while it's punched ， Trinity finds that mmap access to a hole while it's punched from shmem can ， prevent the madvise ( MADV_REMOVE ) or fallocate ( FALLOC_FL_PUNCH_HOLE ) from ， completing , until the reader chooses to stop ; with the puncher's hold on ， i_mutex locking out all other writers until it can complete. ， It appears that the tmpfs fault path is too light in comparison with its ， hole-punching path , lacking an i_data_sem to obstruct it ; but we don't ， want to slow down the common case. ， Extend shmem_fallocate (  ) 's existing range notification mechanism , so ， shmem_fault (  ) can refrain from faulting pages into the hole while it's ， punched , waiting instead on i_mutex ( when safe to sleep ; or repeatedly ， faulting when not ) . ， Signed-off-by : Hugh Dickins <hughd @ google.com> ， Reported-by : Sasha Levin <sasha.levin @ oracle.com> ， Tested-by : Sasha Levin <sasha.levin @ oracle.com> ， Cc : Dave Jones <davej @ redhat.com> ， Signed-off-by : Andrew Morton <akpm @ linux-foundation.org> ， mm/shmem.c | 55 +- ， 1 file changed , 51 insertions ( + )  , 4 deletions ( - )  ， diff -puN mm/shmem.c ~ shmem-fix-faulting-into-a-hole-while-its-punched mm/shmem.c ， - a/mm/shmem.c ~ shmem-fix-faulting-into-a-hole-while-its-punched ， + a/mm/shmem.c ， -80 , 11 +80 , 12 static struct vfsmount * shm_mnt ; ",
    "time": "2014-06-18 / 2014-06-23"
}