{
    "text": "vul_name : Linux Kernel 3.4+ arbitrary write with CONFIG_X86_X32 ， vul_cve : CVE-2014-0038 ， vul_poc : This issue was brought to linux-distros and security (  ) k o 2 days ago via ， the message quoted below , and it was just made public at 22 : 00 UTC today ，  ( two hours ago ) via grsecurity and PaX ( who were the ones to find the ， issue ) . Normally , the person who brought this to linux-distros would be ， the one responsible to bring the issue to oss-security as soon as the ， issue is public , but Kees does not appear to be around at the moment and ， the issue is critical enough that I find it inappropriate to delay this ， posting by a few hours more , hence I am doing Kees' job by posting this ， in here. ， This is CVE-2014-0038 ( assigned shortly after Kees sent the message ， below ) . I will also include PaX Team's revised patch below. ， - Forwarded message from Kees Cook <keescook (  ) chromium org> - ， From : Kees Cook <keescook (  ) chromium org> ， Subject : 3.4+ : arbitrary write with CONFIG_X86_X32 ， Date : Tue , 28 Jan 2014 15 : 52 : 58 -0800 ， This appears to be a serious bug , so I'd like to make sure distros ， have time to prepare updates but PaX Team really wants to get this ， fixes ASAP. When is the soonest Coordinated Release Date distros can ， handle? ，  ( I have no CVE assigned for this since I'm still waiting for my 2014 ， allocation. )  ， Reported by pageexec at ， which is ， restricted , so here's the full report :  ， asmlinkage long compat_sys_recvmmsg ( int fd , struct compat_mmsghdr _user * mmsg ,  ， unsigned int vlen , unsigned int flags ,  ， struct compat_timespec _user * timeout )  ， { ， int datagrams ;  ， struct timespec ktspec ;  ， flags | MSG_CMSG_COMPAT ,  ，  ( struct timespec *  ) timeout )  ;  ， / * . * / ， The timeout pointer parameter is provided by userland ( hence the ， _user annotation ) but for x32 syscalls it's simply cast to a kernel ， pointer and is passed to _sys_recvmmsg which will eventually directly ， dereference it for both reading and writing. Other callers to ， _sys_recvmmsg properly copy from userland to the kernel first. ， The impact is a sort of arbitrary kernel write-where-what primitive by ， unprivileged users where the to-be-written area must contain valid ， timespec data initially ( the first 64 bit long field must be positive ， and the second one must be < 1G ) . ， The bug was introduced by commit ，  ( other uses of ， COMPAT_USE_64BIT_TIME seem fine ) and should affect all kernels since ， 3.4 ( and perhaps vendor kernels if they backported x32 support along ， with this code ) . Note that CONFIG_X86_X32_ABI gets enabled at build ， time and only if CONFIG_X86_X32 is enabled and ld can build x32 ， executables. ， Suggested fix :  ， Signed-off-by : PaX Team <pageexec (  ) freemail hu> ， - a/net/compat.c 2014-01-20 12 : 36 : 54.372997752 +0100 ， + b/net/compat.c 2014-01-28 02 : 06 : 59.265506171 +0100 ， -780 , 22 +780 , 25 ， - if ( COMPAT_USE_64BIT_TIME )  ， - return _sys_recvmmsg ( fd ,  ( struct mmsghdr _user *  ) mmsg , vlen ,  ， - flags | MSG_CMSG_COMPAT ,  ， - ( struct timespec *  ) timeout )  ;  ， flags | MSG_CMSG_COMPAT , NULL )  ;  ， - if ( get_compat_timespec ( &ktspec , timeout )  ， + if ( COMPAT_USE_64BIT_TIME ) { ， + if ( copy_from_user ( &ktspec , timeout , sizeof ( ktspec )  ， + return -EFAULT ;  ， + } else if ( get_compat_timespec ( &ktspec , timeout )  ， datagrams = _sys_recvmmsg ( fd ,  ( struct mmsghdr _user *  ) mmsg , vlen ,  ， flags | MSG_CMSG_COMPAT , &ktspec )  ;  ， - if ( datagrams > 0 put_compat_timespec ( &ktspec , timeout )  ， - datagrams = -EFAULT ;  ， + if ( datagrams > 0 ) { ， + if ( COMPAT_USE_64BIT_TIME ) { ， + if ( copy_to_user ( timeout , &ktspec , sizeof ( ktspec )  ， + datagrams = -EFAULT ;  ， + } else if ( put_compat_timespec ( &ktspec , timeout )  ， + datagrams = -EFAULT ;  ， + } ， } ， So I couldn't help it and created a simple PoC trigger based on the ， example in the manpage. As it is , it'll just trigger a null-deref oops ， on the read side :  ， BUG : unable to handle kernel NULL pointer dereference at 0000000000000009 ， IP :  [ <ffffffff82a333cb> ] _sys_recvmmsg+0x3b/0x310 ， By passing an appropriate value for the timeout pointer one can ， trigger the write side too. By the way , this also allows scanning the ， kernel address space and even reveal KASLR ( try every 2MB , if no oops ， -> found the kernel )  , no doubt to Kees' delight :  ) . ，  * PoC trigger for the linux 3.4+ recvmmsg x32 compat bug , based on the manpage ，  *  $ while true ; do echo $ RANDOM > /dev/udp/127.0.0.1/1234 ; sleep 0.25 ; done",
    "time": "2014-01-31 / 2014-02-02"
}