{
    "text": "vul_name : JamRoom <= 3.3.8 Authentication Bypass ， vul_cve : CVE-2008-3375 ， vul_poc :  ，  # GulfTech Security Research July 28 , 2008 ，  # Vendor : Talldude Networks , LLC ，  # URL :  ，  # Version : Jamroom <= 3.3.8 ，  # Risk : Authentication Bypass ， Description :  ， Jamroom is a popular online social media cms used to host artist sites ， and create music communities. It is vulnerable to a flaw in datatype ， comparison that allows for an attacker to bypass the authentication ， process completely and gain access to any account with only a username. ， This vulnerability has been patched in the latest version of JamRoom and ， all users are encouraged to upgrade as soon as possible. ， Authentication Bypass :  ， There is a serious flaw in the Jamroom authentication mechanism that ， allows for an attacker to completely bypass the authentication process ， with a specially crafted cookie. The vulnerable code in question can ， be found in /includes/jamroom-misc.inc.php @ lines 3667-3681 within ， the jrCookie (  ) function ， list (  $ user ,  $ hash ) = unserialize ( stripslashes (  $ _val )  ;  ，  $ user = trim ( genc ( 'get' ,  $ user )  ;  ，  $ req = \"SELECT user_nickname , user_password ， FROM { $ jamroom_db [ 'user' ] } ， WHERE user_nickname = '\". dbEscapeString (  $ user ) .\"' ， LIMIT 1\" ;  ，  $ _rt = dbQuery (  $ req , 'SINGLE' )  ;  ， } ， print_r (  $ rt )  ;  ， } ， The problem with the above code is that $ _val is a user supplied value ， taken from $ _COOKIE [ 'JMU_Cookie' ] . Since the cookie data is serialized ， an attacker can specify data types such as boolean values , and bypass ， the password check , and authenticate with only a username. If the first ， byte of the password hash stored in the database is numerical then a ， boolean value of true can be used in place of an actual password , and",
    "time": "2008.08.02"
}