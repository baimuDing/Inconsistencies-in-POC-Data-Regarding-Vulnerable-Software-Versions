{
    "text": "vul_name : libc : fts_ *  (  ) Multiple Denial of Service ， vul_cve : CVE-2009-0537 ， vul_poc :  [ libc : fts_ *  (  ) Multiple Denial of Service ]  ， Author : Maksymilian Arciemowicz ， Date :  ， - - Dis. : 03.08.2009 ， - - Pub. : 02.10.2009 ， We are going inform all vendors , about this problem. ， Affected Software ( official )  :  ， - - OpenBSD 4.5 ( fix available )  ， - - NetBSD 5.0.1 ( fix available )  ， probably more. ， - - 0.Description - ， The fts functions are provided for traversing UNIX file hierarchies. The fts_open (  ) function returns a \"handle\" on a file hierarchy , which is then supplied to the other fts functions. The function fts_read (  ) returns a pointer to a structure describing one of the files in the file hierarchy. The function fts_children (  ) returns a pointer to a linked list of structures , each of which describes one of the files contained in a directory within the hierarchy. ， typedef struct _ftsent { ， unsigned short fts_info ; / * flags for FTSENT structure ， char * fts_accpath ; / * access path * / ， char * fts_path ; / * root path * / ， size_t fts_pathlen ; / * strlen ( fts_path )  * / ， char * fts_name ; / * file name * / ， size_t fts_namelen ; / * strlen ( fts_name )  * / ， short fts_level ; / * depth ( -1 to N )  * / ， int fts_errno ; / * file errno * / ， long fts_number ; / * local numeric value * / ， void * fts_pointer ; / * local address value * / ， struct _ftsent * fts_parent ; / * parent directory * / ， struct _ftsent * fts_link ; / * next file structure * / ， struct _ftsent * fts_cycle ; / * cycle structure * / ， struct stat * fts_statp ; / * stat ( 2 ) information * / ， } FTSENT ;  ， - - 1. libc : fts_ *  (  ) Multiple Denial of Service - ， In March 2009 , we have reported an issue ( SREASONRES : 20090304 ) in libc ( fts.c ) . Now we want to present the conclusions and show the usefulness of this vulnerabality. Fix provided by OpenBSD Team will protect us by crash but we think , not for all cases , that are showed in this advisory. ， Index : fts.c ， RCS file : /cvs/src/lib/libc/gen/fts.c , v ， retrieving revision 1.41 ， diff -u -p -r1.41 fts.c ， - - - fts.c 27 Dec 2008 12 : 30 : 13 -0000 1.41 ， + fts.c 10 Feb 2009 09 : 00 : 24 -0000 ， -633 , 6 +633 , 14 fts_build ( FTS * sp , int type )  ， len+ ;  ， maxlen = sp->fts_pathlen - len ;  ， + if ( cur->fts_level = SHRT_MAX ) { ， + ( void ) closedir ( dirp )  ;  ， + cur->fts_info = FTS_ERR ;  ， + SET ( FTS_STOP )  ;  ， + errno = ENAMETOOLONG ;  ， + return ( NULL )  ;  ， + } ， + ， level = cur->fts_level + 1 ;  ， / * Read the directory , attaching each entry to the `link' pointer. * / ， So let`s see /etc/rc.d/cleartmp ( NetBSD 5.0.1 ) . This script use rm ( 1 ) with rf args. ， Line 40-41 :  ， find -x . ! -name . ! -name lost+found ! -name quota.user \\ ，  ! -name quota.group -exec rm -rf - {} \\ ; -type d -prune )  ， here daemon will come to tmp_dir ( /tmp ) and wants clean it with the sequence \" [ a-km-pr-zA-Z ]  * \". It will kill this script anytime when they will be started. So if we create directory \"A\" in /tmp , all other files and directories in alphabetical order , will not be delete.",
    "time": "2009.10.02"
}