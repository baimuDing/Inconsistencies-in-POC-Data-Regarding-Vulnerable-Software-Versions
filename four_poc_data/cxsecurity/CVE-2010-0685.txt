{
    "text": "vul_name : Dialplan 2.5.3 injection vulnerability ， vul_cve : CVE-2010-0685 ， vul_poc : Asterisk Project Security Advisory - AST-2010-002 ， +- ， -+ ，  | Product | Asterisk |  ，  | -+- ，  | Summary | Dialplan injection vulnerability |  ，  | -+- ，  | Nature of Advisory | Data injection vulnerability |  ，  | -+- ，  | Susceptibility | Remote Unauthenticated Sessions |  ，  | -+- ，  | Severity | Critical |  ，  | -+- ，  | Exploits Known | Yes |  ，  | -+- ，  | Reported On | 10/02/10 |  ，  | -+- ，  | Reported By | Hans Petter Selasky |  ，  | -+- ，  | Posted On | 16/02/10 |  ，  | -+- ，  | Last Updated On | February 18 , 2010 |  ，  | -+- ，  | Advisory Contact | Leif Madsen < lmadsen AT digium DOT com > |  ，  | -+- ，  | CVE Name |  |  ， +- ， -+ ， +- ， -+ ，  | Description | A common usage of the $ {EXTEN} channel variable in a |  ，  |  | dialplan with wildcard pattern matches can lead to a |  ，  |  | possible string injection vulnerability. By having a |  ，  |  | wildcard match in a dialplan , it is possible to allow |  ，  |  | unintended calls to be executed , such as in this |  ，  |  | example :  |  ，  |  | exten => _X. , 1 , Dial ( SIP/ $ {EXTEN} )  |  ，  |  | If you have a channel technology which can accept |  ，  |  | characters other than numbers and letters ( such as SIP )  |  ，  |  | it may be possible to craft an INVITE which sends data |  ，  |  | such as 300&Zap/g1/4165551212 which would create an |  ，  |  | additional outgoing channel leg that was not originally |  ，  |  | intentioned by the dialplan programmer. |  ，  |  | Usage of the wildcard character is common in dialplans | ",
    "time": "2010.02.26"
}