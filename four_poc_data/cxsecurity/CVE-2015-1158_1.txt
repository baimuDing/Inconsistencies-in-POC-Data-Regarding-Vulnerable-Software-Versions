{
    "text": "vul_name : CUPS < 2.0.3 - Multiple Vulnerabilities ， vul_cve : CVE-2015-1158 ， vul_poc : Source :  ， Abstract ， Modern exploit mitigations draw attackers into a game of diminishing marginal returns. With each additional mitigation added , a subset of software bugs become unexploitable , and others become difficult to exploit , requiring application or even bug-specific knowledge that cannot be reused. The practical effect of exploit mitigations against any given bug or class of bugs is the subject of great debate amongst security researchers. ， Despite mitigations , skilled and determined attackers alike remain undeterred. They cope by finding more bugs , and by crafting increasingly complex exploit chains. Attackers treat these exploits as closely-guarded , increasingly valuable secrets , and it's rare to see publicly-available full-fledged exploit chains. This visibility problem contributes to an attacker's advantage in the short term , but hinders broader innovation. ， In this blog post , I describe an exploit chain for several bugs I discovered in CUPS , an open-source printing suite. I start by analyzing a relatively-subtle bug in CUPS string handling ( CVE-2015-1158 )  , an exploit primitive. I discuss key design and implementation choices that contributed to this bug. I then discuss how to build an exploit using the primitive. Next , I describe a second implementation error ( CVE-2015-1159 ) that compounds the effect of the first , exposing otherwise unreachable instances of CUPS. Finally , I discuss the specific features and configuration options of CUPS that either helped or hindered exploitation. ， By publishing this analysis , I hope to encourage transparent discourse on the state of exploits and mitigations , and inspire other researchers to do the same. ， Summary",
    "time": "2015.06.23"
}