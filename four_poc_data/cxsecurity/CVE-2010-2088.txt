{
    "text": "vul_name : Multiplatform View State Tampering Vulnerabilities ， vul_cve : CVE-2010-2085 , CVE-2010-2086 , CVE-2010-2087 , CVE-2010-2088 ， vul_poc : Trustwave's SpiderLabs Security Advisory TWSL2010-001 :  ， Multiplatform View State Tampering Vulnerabilities ， Published : 2010-02-08 Version : 1.1 ， SpiderLabs has documented view state tampering ， vulnerabilities in three products from separate vendors. ， View states are used by some web application frameworks to ， store the state of HTML GUI controls. View states are ， typically stored in hidden client-side input fields ,  ， although server-side storage is widely supported. ， The affected vendors generally recommend that client-side ， view states are cryptographically signed and/or encrypted ,  ， but specific exploits have not been previously documented. ， These vulnerabilities show that unsigned client-side view ， states will ALWAYS result in a vulnerability in the affected ， products. ， Credit : David Byrne of Trustwave's SpiderLabs ， Vendor : Microsoft (  ， Product : ASP.Net (  ， Versions affected : .Net 3.5 is confirmed vulnerable ;  ， previous versions are likely to be vulnerable as well. ， Description :  ， ASP.Net is a web-application development framework that ， provides for both user interfaces , and back-end ， functionality. ， The ASP.Net view state is typically stored in a hidden field ， named \"_VIEWSTATE\". When a page's view state is not ， cryptographically signed , many standard .Net controls are ， vulnerable to Cross-Site Scripting ( XSS ) through the view ， state. ， It is well documented that using an unsigned view state is ， \"bad\" , but most previous advisories focus on vaguely ， described threats or vulnerabilities introduced by custom ， use of the view state. To the best of Trustwave's knowledge ,  ， this is the first time a proof of concept attack of this ， nature has been demonstrated against the view state. A ， vulnerability was alluded to in a 2004 Microsoft article on ， troubleshooting view state problems [ 1 ] . However , other ， Microsoft documents recommend disabling view state signing ， \"if performance is a key consideration , \" [ 2 , 3 , 4 ] or for ， various other reasons [ 5 , 6 ] . Realistically , unsigned view ， states should never be used in a production environment. ， The following code is vulnerable to a XSS attack against the ， form control. Note that the \"ValidateRequest\" setting does ， not prevent the attack. ， <% @ Page EnableViewStateMac=\"False\" ， ValidateRequest=\"True\" %>",
    "time": "2010.05.30"
}