{
    "text": "vul_name : Critical SQL Injection PHPNuke <= 7.8 - Your_Account module ， vul_cve : CVE-2006-0679 ， vul_poc : -BEGIN PGP SIGNED MESSAGE- ， Hash : SHA1 ， SecurityAlert SA032 ， Author : sp3x ， CVE : CVE-2006-0679 ， Date : 16. February 2006 ， Affected software :  ， PHPNuke version : 7.8 with all security fixes/patches ， Not Affected software :  ， PHPNuke version : 7.9 + patch 3.1 ， Description :  ， PHP-Nuke is a Web Portal System , storytelling software , News system , online community or whatever you want to call it. The goal of PHP-Nuke is to have an automated web site to distribute news and articles with users system. Each user can submit comments to discuss the articles , just similar to Slashdot and many others. Main features include : web based admin , surveys , top page , access stats page with counter , user customizable box , themes manager for registered users , friendly administration GUI with graphic topic manager , option to edit or delete stories , option to delete comments , moderation system , Referers page to know who link us , sections manager , customizable HTML blocks , user and authors edit , an integrated Banners Ads system , search engine , backend/headlines generation ( RSS/RDF format )  , and many , many more friendly functions. PHP-Nuke is written 100% in PHP and requires Apache Web server , PHP and a SQL ( MySQL , mSQL , PostgreSQL , ODBC , ODBC_Adabas , Sybase or Interbase ) . Support for 25 languages , Yahoo like search engine , Comments option in Polls , lot of themes , Ephemerids manager , File Manager , Headlines , download manager , faq manager , advanced blocks systems , reviews system , newsletter , categorized articles , multilanguage content management , phpBB Forums included and a lot more. ， Vulnerabilities :  ， Critical SQL injection :  ， IN module called \"Your_Account\" there exists SQL Injection bug , which can lead to stealing admin`s username and password md5 and also some sensitive data from database. ， The problem exist in index.php so first let's see the source code of this file. ， Original code from index.php :  ， . ， global $ stop ,  $ EditedMessage ,  $ sitename ,  $ module_name ,  $ minpass ;  ， include ( \"header.php\" )  ;  ， include ( \"config.php\" )  ;  ， filter_text (  $ username )  ;  ，  $ username = $ EditedMessage ;  ，  $ user_viewemail = \"0\" ;  ， userCheck (  $ username ,  $ user_email )  ;  ，  $ user_email = validate_mail (  $ user_email )  ;  ， . ， Here we can see that there is filter_text (  ) used on $ query variable and later we have userCheck (  $ username ,  $ user_email )  ;  ,  ， Ok lets see function filter_text (  )  ; . ， Orginal code from mainfile.php :  ， global $ EditedMessage ;  ， check_words (  $ Message )  ;  ，  $ EditedMessage=check_html (  $ EditedMessage ,  $ strip )  ;  ， } ， Here we have another function check_words (  $ Message )  ;  , lets check this also :  ， Orginal code from mainfile.php :  ， / * The core of this code has been lifted from phpslash * / ， / * which is licenced under the GPL. * / ， include ( \"config.php\" )  ;  ， global $ AllowableHTML ;  ，  $ str = stripslashes (  $ str )  ;  ，  $ str = eregi_replace ( \"< [  : space :  ]  *  (  [ ^> ]  *  )  [  : space :  ]  * >\" , '<\\1>' ,  $ str )  ;  ， / Delete all spaces from html tags . ，  $ str = eregi_replace ( \"<a [ ^> ]  * href [  : space :  ]  * = [  : space :  ]  * \\\"? [  : space :  ]  *  (  [ ^\\\" > ]  *  )  [  : space :  ]  * \\\"? [ ^> ]  * >\" , '<a href=\"\\1\">' ,  $ str )  ;  ， / Delete all attribs from Anchor , except an href , double quoted. ，  $ str = eregi_replace ( \"< [  : space :  ]  * img [  : space :  ]  *  (  [ ^> ]  *  )  [  : space :  ]  * >\" , ' ,  $ str )  ;  ， / Delete all img tags ，  $ str = eregi_replace ( \"<a [ ^> ]  * href [  : space :  ]  * = [  : space :  ]  * \\\"?javascript [  : punct :  ]  * \\\"? [ ^> ]  * >\" , ' ,  $ str )  ;  ， / Delete javascript code from a href tags - Zhen-Xjell @  ，  $ tmp = \" ;  ，  $ i = strpos (  $ str ,  $ reg [ 0 ]  )  ;  ，  $ l = strlen (  $ reg [ 0 ]  )  ;  ， elseif (  $ a = 1 )  |  ( empty (  $ reg [ 2 ]  )  $ tag = \"< $ tag>\" ;  ，  # Place here the double quote fix function. ，  $ attrb_list=delQuotes (  $ reg [ 2 ]  )  ;  ， / A VER ，  $ attrb_list = str_replace ( \"&\" , \"&amp ; \" ,  $ attrb_list )  ;  ，  $ tag = \"< $ tag\" . $ attrb_list . \">\" ;  ， } # Attribs in tag allowed ，  $ tmp .= substr (  $ str , 0 ,  $ i ) . $ tag ;  ，  $ str = substr (  $ str ,  $ i+ $ l )  ;  ， } ，  $ str = $ tmp . $ str ;  ， exit ;  ， / * Squash PHP tags unconditionally * / ，  $ str = str_replace ( \"<?\" , \" ,  $ str )  ;  ， } ， This function return $ str variable but at the beginning of this function we can see ，  $ str = stripslashes (  $ str )  ; . ， So when we have in index.php :  ， filter_text (  $ username )  ;  ， this mean that on variable $ username is used stripslashes (  )  ;  ， Lower in index.php we can see :  ， userCheck (  $ username ,  $ user_email )  ;  ， So another function userCheck (  )  ; that uses $ username variable , lets see the code :  ， Orginal code from index.php :  ， . ， global $ stop ,  $ user_prefix ,  $ db ;  ， . ， In this function we see two sql queries :  ， SELECT username FROM \". $ user_prefix.\"_users WHERE username=' $ username' ， SELECT username FROM \". $ user_prefix.\"_users_temp WHERE username=' $ username' ， At last here now we can say : \"Critical SQL injection \" ， Time to exploit this issue :  ， Go to :  ， And fill in all Fields but in Nickname : field enter : ' or 1=1/ *  ， The Result is :  ， ERROR : Nickname already taken ， So the SQl injection is working but we can't see the results . ， It doesn't metter we can all our results write to file . ， To do this i wrote a little exploit . ， Exploit :  ， How to fix :  ， Download the new version of the script or update. ， Greets :  ， Special greets : cXIb8O3 ， And the rest : pkw , p_e_a , pi3 , LordDav and alkeniu ， Contact :  ， sp3x [ at ] securityreason [ dot ] com ， GPG :  ， www.securityreason.com",
    "time": "2006.02.16"
}