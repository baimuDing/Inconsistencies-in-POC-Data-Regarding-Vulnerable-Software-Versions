{
    "text": "vul_name : Microsoft Visual C+ ( .RC ) resource files buffer overflow vulnerability ， vul_cve : CVE-2007-0468 ， vul_poc : Advisory :  ， Microsoft Visual C+ 6.0 is prone to stack based memory corruption vulnerability ， during processing .RC resource files , caused by the lack of input data boundary check. ， Vulnerable software :  ， Microsoft Visual Studio 6.0 SP6 ， Impact :  ， Remote code execution ， Attack vector :  ， An attacker must construct malformed .RC file and induce victim to ， open it either as a part of attacker provided Visual Studio project ， or as a standalone resource file component. ， Technical Details :  ， The stack based buffer overflow occurs in Microsoft Visual C+ ， MSDEV.EXE process within the resource compiler RCDLL.DLL module ， The problem lies in bad processing of the file name fields. ， In the followinig example :  ， 1 TYPELIB MOVEABLE PURE \"FilePath01\" ， the FilePath01 string , if too long , will cause stack based overflow. ， It is caused by the file name parsing procedure within the resource compiler ， DLL , which checks for the validity of the file path. ， It also excludes all characters codes below 20h , plus codes 22h and 2fh , thus ， the payload has to be limited by this ASCII pool. ， The EIP overwrite value offset relative to the beginning of the payload ，  ( FilePath01 string ) is not constant and depends from the OS enviroment. ， For the Windows 2000 ENG SP4 it is equal 224 bytes counting from the beggining ， of the FilePath01 string. ， Also it should be mentioned that when the length of the string exceeds 259 bytes ， the resource compiler parsing procedure enters infinite loop ,  ， writing the FilePath01 string repeatidly up to the top of the process stack memory area ,  ， then continues entering the heap area and destroying the process heap structure ， and finally causes writing access violation exception.",
    "time": "2007.01.24"
}