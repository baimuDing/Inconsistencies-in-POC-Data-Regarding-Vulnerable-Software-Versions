{
    "text": "vul_name : WordPress Cart66 1.5.1.14 Cross Site Request Forgery / Cross Site Scripting ， vul_cve : CVE-2013-5977 , CVE-2013-5978 ， vul_poc :  # Exploit Title : Wordpress Cart66 Plugin 1.5.1.14 Multiple Vulnerabilities ，  # Exploit Author : absane ，  # Blog :  ，  # Discovery date : September 29th 2013 ，  # Vendor notified : September 29th 2013 ，  # Vendor fixed : October 2 2013 ，  # Vendor Homepage :  ，  # Software Link :  ，  # Tested on : Wordpress 3.6.1 ，  # Google-dork : inurl : /wp-content/plugins/cart66 ，  # CVE ( CSRF )  : CVE-2013-5977 ，  # CVE ( XSS )  : CVE-2013-5978 ， Two vulnerabilities were discovered in the Wordpress plugin Cart66 version 1.5.1.14. ， Vulnerabilities :  ， 1 ) XSS ( Stored )  ， 2 ) CSRF ， VULNERABILITY # 1 ， Stored XSS ， Page affected : in the following input fields :  ，  * Product name ，  * Price description ， Proof of Concept ， In the vulnerable fields add <script>alert ( 0 ) </script> ， The product name XSS vuln is particiularly dangerous because an attacker can use the CSRF vulnerability to add a product whose ， name is a malicious script. All the admin user needs to do is view the product to be attacked. ， VULNERABILITY # 2 ， CSRF ， Page affected :  ， If the Wordpress admin were logged in and clicked on a link hosting code similar to the one in the PoC , then the admin may ， unknowingly add a product to his site or have an existing product altered. Other possibilities include , but are not limited ， to , injecting code into a field vulnerable to stored XSS ( see the second vulnerability ) . ， Proof of Concept ， Host this code on a remote wesbserver different from the Wordpress site that uses Cart66. As an authenticated Wordpress admin ， user visit the page and add what you will to the fields. A new product is added. In a live attack , the fields will be hidden ,  ， prefilled , and some javascript code will auto submit the fields.",
    "time": "2013.10.12"
}