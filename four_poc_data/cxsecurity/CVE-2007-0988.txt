{
    "text": "vul_name : PHP unserialize (  ) 64 bit Array Creation Denial of Service Vulnerability ， vul_cve : CVE-2007-0988 ， vul_poc : A user supplied serialized string might trigger on 64 bit systems a tight endless loop within zend_hash_init (  ) exhausting CPU ressources. ， Before PHP 4.3.11 was released it was discovered that there is a problem in the unserialize (  ) function that could be exploited to produce a tight endless loop inside zend_hash_init (  ) through a negative array element count stored inside the serialized string. ， This was fixed by raising an error when a negative integer value was found before it was passed to the zend_hash_init (  ) function. When such a value was passed down to that function is resulted in a shift left integer overflow that caused a tight endless loop. ， A while later there were troubles with unserialize (  ) on 64bit systems which resulted in several variables being changed from the 'int' to 'long' type. Unfortunately zend_hash_init (  ) still works with 'int's and therefore only the lower 32 bit of the number are passed from unserialize (  ) to zend_hash_init (  ) . ， Therefore the protection against negative element counts was no longer working , because on a 64bit system a 32bit number inside a signed 'long' can still be positive. ， Proof of concept , exploit or instructions to reproduce",
    "time": "2007.03.03"
}