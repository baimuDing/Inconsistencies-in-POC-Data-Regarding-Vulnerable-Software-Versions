{
    "text": "vul_name : Microsoft Windows 'nt ! NtNotifyChangeDirectoryFile' Kernel Pool Memory Disclosure ， vul_cve : CVE-2017-0299 ， vul_poc : / *  ， We have discovered that the nt ! NtNotifyChangeDirectoryFile system call discloses portions of uninitialized pool memory to user-mode clients , due to output structure alignment holes. ， On our test Windows 10 32-bit workstation , an example layout of the output buffer is as follows :  ， - cut - ， 00000000 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ff ff . ， 00000010 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ? ? . ， - cut - ， Where 00 denote bytes which are properly initialized , while ff indicate uninitialized values copied back to user-mode. The output data is returned in a list of FILE_NOTIFY_INFORMATION structures [ 1 ] . If we map the above shadow bytes to the structure definition , it turns out that the uninitialized bytes correspond to the alignment hole between the end of the FileName string and the beginning of the adjacent FILE_NOTIFY_INFORMATION structure , if that string is of an odd length ( and therefore not 4-byte aligned ) . ， The issue can be reproduced by running the attached proof-of-concept program on a system with the Special Pools mechanism enabled for ntoskrnl.exe. Then , it is clearly visible that bytes at the aforementioned offsets are equal to the markers inserted by Special Pools , and would otherwise contain leftover data that was previously stored in that memory region :  ， - cut - ， 00000000 : 10 00 00 00 04 00 00 00 02 00 00 00 62 00 [ 91 91 ] .b. ， 00000010 : 00 00 00 00 05 00 00 00 02 00 00 00 63 00 ? ? .c. ， - cut - ， 00000000 : 10 00 00 00 04 00 00 00 02 00 00 00 62 00 [ 3d 3d ] .b.= ， 00000010 : 00 00 00 00 05 00 00 00 02 00 00 00 63 00 ? ? .c. ， - cut - ， Repeatedly triggering the vulnerability could allow local authenticated attackers to defeat certain exploit mitigations ( kernel ASLR ) or read other secrets stored in the kernel address space.",
    "time": "2017.06.22"
}