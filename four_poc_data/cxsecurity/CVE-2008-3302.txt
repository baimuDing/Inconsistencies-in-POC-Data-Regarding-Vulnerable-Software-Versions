{
    "text": "vul_name : Bilboblog 2.1 Multiple Remote Vulnerabilities ， vul_cve : CVE-2008-3302 , CVE-2008-3303 ， vul_poc : - ， Name : Bilboblog 2.1 Multiples Vulnerabilities ， Description : Bilboblog is a small application of micro-blogging in Php / MySQL ， Link :  ， Vuln. types : Login Bypass - Cross Site Scripting - SQL Injection - Full Path Disclosure ， Conditions : - SQL Injection : Magic Quotes Off ， - Login Bypass , XSS : Register Globals On ， Credits : Black_H <bl4ck.h @ gmail.com> ， . : I. Login Bypass ， This vulnerability need register_global on. ， The file \"admin/index.php\" ( and most of the admin files ) includes the file 'login.php' ( at line 23 ) which contains :  ， 22 | session_start (  )  ;  ， 23 |  $ checkLogin = false ;  ， 24 |  # echo \"toto\". $ _SESSION [ 'admin_login' ]  ; / note : wtf ? ， 25 | if (  ! isset (  $ _SESSION [ 'admin_login' ]  ) { ， 26 |  ， 27 |  # Check form values ， 28 | if ( isset (  $ _POST )  (  ! empty (  $ _POST [ 'admin_login' ]  )  (  ! empty (  $ _POST [ 'admin_passwd' ]  )  ) { ， 29 |  ， 30 |  # Get Session vriables ， 31 |  $ admin_login = trim (  $ _POST [ 'admin_login' ]  )  ;  ， 32 |  $ admin_passwd = trim (  $ _POST [ 'admin_passwd' ]  )  ;  ， 33 |  ， 34 |  # Check login ， 35 | if (  $ admin_login = $ login $ admin_passwd = $ password ) { ， 36 |  $ checkLogin = true ;  ， 37 |  $ _SESSION [ 'admin_login' ] = $ admin_login ;  ， 38 |  $ _SESSION [ 'admin_passwd' ] = $ admin_passwd ;  ， 39 | } ， 40 | } ， 41 |  ， 42 | } else { ， 43 |  $ checkLogin = true ;  ， 44 | } ， 45 |  ， 46 | 22 | if (  !  $ checkLogin ) { ， 47 |  ， 48 |  # Print login form ，  [ . ]  ， 58 | exit ( 0 )  ;  ， 59 | } ， So , we need the session 'admin_login' (  $ _SESSION [ 'admin_login' ]  ) to have admin rights in all files. The script checks ， the $ login and $ password variable are not defined. We can set them with register_globals on , valid the form with ， the same value and so set $ _SESSION [ 'admin_login' ] . ， In facts , go on the page and fill the forms with '1' value ， and submit. Because checkLogin is true nothing is printed and you're admin :  )  ， . : II. Cross Site Scripting ， 1 ) Permanent XSS ， When an admin ( legitim or not :  )  ) post an article , the enCode function is applied to the content :  ， - 'admin/update.php' ， 25 |  # Check values ， 26 | if ( isset (  $ _POST [ 'content' ]  )  $ _POST [ 'content' ]  ! = \" ) { ， 27 |  $ content = enCode ( substr ( trim (  $ _POST [ 'content' ]  )  , 0 ,  $ limit_post )  ;  ，  [ . ]  ， 36 |  # Insert new content ， 37 |  $ sql = \"INSERT INTO $ db_table VALUES ( ' , '\".time (  ) .\"' , ' $ content' )  ; \" ;  ， 38 |  $ result = mysql_query (  $ sql )  ;  ， - 'admin/function.php' ， 141 | function enCode (  $ chaine ) { ， 142 |  ，  [ . ] / # Youtube & Dailymotion encode url ， 145 |  ， 146 |  # Detect string encoding ， 147 |  $ encodage = mb_detect_encoding (  $ chaine )  ;  ， 148 | if (  $ encodage = \"ASCII\" )  $ encodage = \"iso-8859-1\" ;  # Htmlentities unknown ASCII ， 149 |  ， 150 |  # Convert special char to html code ， 151 |  $ chaine = htmlentities (  $ chaine , ENT_QUOTES ,  $ encodage )  ;  ， 152 |  $ chaine = addslashes (  $ chaine )  ;  ， 153 |  ， 154 |  # Return result ， 155 | return $ chaine ;  ， 156 | } ， The function clean all html chars in the content that we've submit. ， It protects the user against XSS in all pages of the blog but in the 'widget.php' file stripslashes (  )  ， and html_entity_decode (  ) functions is applied to the content which is printed !  ， So je just need to get admin rights ( see upper ) post malicious code and share widget.php's url to the victim. ， 2 ) Unpermanents XSS ， The file \"index.php\" includes the file 'head.php' ( at line 21 ) which contains :  ， 44 | if (  $ _SERVER [ 'QUERY_STRING' ]  ! = \" intval (  $ _SERVER [ 'QUERY_STRING' ]  )  ! = \" ) { ，  [ . ]  ， 55 |  $ titleId = str2Url (  $ liste [ 2 ]  , 100 , 0 ) .' - '. $ title ;  ， 56 | }",
    "time": "2008.07.26"
}