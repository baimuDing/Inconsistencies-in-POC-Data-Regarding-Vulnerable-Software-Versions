{
    "text": "vul_name : Xaraya 2.4.0-b1 Cross Site Scripting ， vul_cve : CVE-2013-3639 ， vul_poc : Advisory ID : HTB23156 ， Product : Xaraya ， Vendor : Xaraya Development Group ， Vulnerable Version ( s )  : 2.4.0-b1 and probably prior ， Tested Version : 2.4.0-b1 ， Vendor Notification : May 15 , 2013 ， Public Disclosure : June 26 , 2013 ， Vulnerability Type : Cross-Site Scripting [ CWE-79 ]  ， CVE ， Risk Level : Low ， CVSSv2 Base Score : 2.6 ( AV : N/AC : H/Au : N/C : N/I : P/A : N )  ， Solution Status : Solution Available ， Discovered and Provided : High-Tech Bridge Security Research Lab (  )  ， Advisory Details :  ， High-Tech Bridge Security Research Lab discovered four XSS vulnerabilities in Xaraya , which can be exploited to perform cross-site scripting attacks against administrators of vulnerable application. ， 1 ) Multiple Cross-Site Scripting ( XSS ) in Xaraya : CVE-2013-3639 ， 1.1 The vulnerability exists due to insufficient sanitisation of user-supplied data passed via the \"id\" HTTP GET parameter to \"/index.php\" script. A remote attacker can trick a logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website. ， The exploitation example below uses the \"alert (  ) \" JavaScript function to display administrator's cookies :  ， 1.2 The vulnerability exists due to insufficient filtration of user-supplied data passed via the \"interface\" HTTP GET parameter to \"/index.php\" script. A remote attacker can trick a logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website. ， The exploitation example below uses the \"alert (  ) \" JavaScript function to display administrator's cookies :  ， 1.3 The vulnerability exists due to insufficient sanitisation of user-supplied data passed via the \"name\" HTTP GET parameter to \"/index.php\" script. A remote attacker can trick a logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website. ， The exploitation example below uses the \"alert (  ) \" JavaScript function to display administrator's cookies :  ， 1.4 The vulnerability exists due to insufficient filtration of user-supplied data passed via the \"tabmodule\" HTTP GET parameter to \"/index.php\" script. A remote attacker can trick a logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website. ， The exploitation example below uses the \"alert (  ) \" JavaScript function to display administrator's cookies : ",
    "time": "2013.06.27"
}