{
    "text": "vul_name : Sierra Wireless AirLink ES450 ACEManager ping_result.cgi Cross Site Scripting ， vul_cve : CVE-2018-4065 ， vul_poc : Talos Vulnerability Report ， TALOS-2018-0750 ， Sierra Wireless AirLink ES450 ACEManager ping_result.cgi Cross-Site Scripting Vulnerability ， April 25 , 2019 ， CVE Number ， CVE-2018-4065 ， Summary ， An exploitable cross-site scripting vulnerability exists in the ACEManager ping_result.cgi functionality of Sierra Wireless AirLink ES450 FW 4.9.3. A specially crafted HTTP ping request can cause reflected javascript code execution , resulting in the execution of javascript code running on the victim's browser. An attacker can get a victim to click a link , or embedded URL , that redirects to the reflected cross-site scripting vulnerability to trigger this vulnerability. ， Tested Versions ， Sierra Wireless AirLink ES450 FW 4.9.3 ， Product URLs ， CVSSv3 Score ， 6.1 - CVSS : 3.0/AV : N/AC : L/PR : N/UI : R/S : C/C : L/I : L/A : N ， CWE ， CWE-79 : Improper Neutralization of Input During Web Page Generation ( 'Cross-site Scripting' )  ， Details ， Sierra Wireless is a wireless communications equipement designer and manufacturer. They provide both embedded solutions as well as wireless hardware solutions , including both the ES450 and GX450 devices. The AirLink ES450 is a LTE gateway designed for distributed enterprise. The ES450 is typically seen connecting Point-of-sale devices , remote SCADA equipment , or other business critical equipment. The AirLink ES450 also provides a terminal server for remote out-of-band administration. ， ACEManager is the web server included with the AirLink ES450. This web server is responsible for the majority of interactions in the device. Some specific capabilities of the web server are routing , device reconfiguration , user authentication and certificate management. The vendor has stated that the ACEManager web application is not accessible by default from the Cellular WAN. ， The ping_result.cgi binary does not properly filter input before reflecting it back to the client. This improper filtering allows javascript to be injected into the response to the client. This can be used to run code on the client's browser , such as making requests on behalf of the user , or disclosing confidential tokens. ， POST Request ， POST /admin/tools/ping_result.cgi HTTP/1.1 ， Host : 192.168.13.31 : 9191 ， User-Agent : Mozilla/5.0 ( X11 ; Linux x86_64 ; rv : 52.0 ) Gecko/20100101 Firefox/52.0 ， Accept :  * / *  ， Accept-Language : en-US , en ; q=0.5 ， Accept-Encoding : gzip , deflate ， Referer :  ， Content-Type : application/x-www-form-urlencoded ; charset=UTF-8 ， X-Requested-With : XMLHttpRequest ， Content-Length : 61 ， Cookie : token=5a412d6dbc3618b3e4ffd7219460f942 ， Connection : close ， host=192.168.13.31<script>alert ( 'xss' ) </script> ， GET Request ， GET /admin/tools/ping_result.cgi?host=1.1.1.1%27%3Cscript%3Ealert ( %27xss%27 ) %3C/script%3E HTTP/1.1 ， Host : 192.168.13.31 : 9191 ， User-Agent : Mozilla/5.0 ( X11 ; Linux x86_64 ; rv : 52.0 ) Gecko/20100101 Firefox/52.0",
    "time": "2019.04.28"
}