{
    "text": "vul_name : PHP 5.5.6/5.4.22 openssl_x509_parse (  ) Memory Corruption ， vul_cve : CVE-2013-6420 ， vul_poc :  ， SektionEins GmbH ， www.sektioneins.de ， -= Security Advisory =- ， Advisory : PHP openssl_x509_parse (  ) Memory Corruption Vulnerability ， Release Date : 2013/12/13 ， Last Modified : 2013/12/13 ， Author : Stefan Esser [ stefan.esser [ at ] sektioneins.de ]  ， Application : PHP 4.0.6 - PHP 4.4.9 ， PHP 5.0.x ， PHP 5.1.x ， PHP 5.2.x ， PHP 5.3.0 - PHP 5.3.27 ， PHP 5.4.0 - PHP 5.4.22 ， PHP 5.5.0 - PHP 5.5.6 ， Severity : PHP applications using openssl_x509_parse (  ) to parse a ， malicious x509 certificate might trigger a memory ， corruption that might result in arbitrary code execution ， Risk : Critical ， Vendor Status : Vendor has released PHP 5.5.7 , PHP 5.4.23 and PHP 5.3.28 ， that contain a fix for this vulnerability ， Overview :  ， Quote from ， \"PHP is a widely-used general-purpose scripting language that ， is especially suited for Web development and can be embedded ， into HTML.\" ， The PHP function openssl_x509_parse (  ) uses a helper function ， called asn1_time_to_time_t (  ) to convert timestamps from ASN1 ， string format into integer timestamp values. The parser within ， this helper function is not binary safe and can therefore be ， tricked to write up to five NUL bytes outside of an allocated ， buffer. ， This problem can be triggered by x509 certificates that contain ， NUL bytes in their notBefore and notAfter timestamp fields and ， leads to a memory corruption that might result in arbitrary ， code execution. ， Depending on how openssl_x509_parse (  ) is used within a PHP ， application the attack requires either a malicious cert signed ， by a compromised/malicious CA or can be carried out with a ， self-signed cert. ， Details :  ， The PHP function openssl_x509_parse (  ) is used by PHP applications ， to parse additional information out of x509 certificates , usually ， to harden SSL encrypted communication channels against MITM ， attacks. In the wild we have seen the following use cases for this ， function :  ，  * output certificate debugging information ，  ( e.g. cacert.org/analyse.php )  ，  * webmail application with SMIME support ，  * client certificate handling ，  * certificate pinning ，  * verification of other certificate properties ，  ( e.g. a default Wordpress install if ext/curl is not loaded )  ， When we backported security fixes for some previous security ， vulnerabilities in PHP's openssl to PHP 4.4.9 as part of our ， PHP security backport services that we provide to customers ,  ， we performed a quick audit of openssl_x509_parse (  ) and all the ， functions it calls , which led to the discovery of a memory ， corruption vulnerability. ， Within the function openssl_x509_parse (  ) the helper function ， asn1_time_to_time_t (  ) is called two times to parse the ， notBefore and notAfter ASN1 string timestamps from the cert ， into integer time_t values as you can see below :  ， add_assoc_long ( return_value , \"validFrom_time_t\" ,  ， asn1_time_to_time_t ( X509_get_notBefore ( cert ) TSRMLS_CC )  ;  ， add_assoc_long ( return_value , \"validTo_time_t\" ,  ， asn1_time_to_time_t ( X509_get_notAfter ( cert ) TSRMLS_CC )  ;  ， When you take a look into this helper function you will see ， that it only contains a quickly hacked parser that was never ， really improved since its introduction in PHP 4.0.6. The author ， of this parser was even aware of its hackishness as you can see",
    "time": "2013.12.16"
}