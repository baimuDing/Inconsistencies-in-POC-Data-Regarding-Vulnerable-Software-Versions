{
    "text": "vul_name : PHP 5.5.8 imagecrop (  ) Heap Overflow Vulnerability ， vul_cve : CVE-2013-7226 , CVE-2013-7327 , CVE-2013-7328 , CVE-2014-2020 ， vul_poc : Description :  ， The imagecrop (  ) function can be used to crop an image with the following call :  ，  $ dimensions = array ( \"x\" => 10 , \"y\" => 10 , \"width\" => 50 , \"height\" => 50 )  ;  ，  $ new_image = image (  $ image ,  $ dimensions )  ;  ， The implementation of imagecrop (  ) in ext/gd/gd.c performs very little checking of the supplied dimensions :  ， gdRect rect ;  ， . ， rect.x = Z_LVAL_PP ( tmp )  ;  ， } else { ， . ， One issue here is that there is no check of tmp's type nor a conversion. This means that if the dimensions array contains the key \"x\" , its zval's value will be treated as an integer even if it's really a string or an array. This can be used as an information leak vulnerability , because strings and array contain pointers which can be used for subsequent exploits. See POC # 1. ， The \"rect\" variable is then used in a call to \"gdImageCrop\" :  ， im_crop = gdImageCrop ( im , &rect )  ;  ， This function then uses the user-supplied dimensions for various calculations :  ， dst = gdImageCreateTrueColor ( crop->width , crop->height )  ;  ， gdImageSaveAlpha ( dst , 1 )  ;  ， } else { ， dst = gdImageCreate ( crop->width , crop->height )  ;  ， gdImagePaletteCopy ( dst , src )  ;  ， } ， dst->transparent = src->transparent ;  ， The gdImageCreateTrueColor (  ) and gdImageCreate (  ) functions are smart enough to block any attempt to overflow the width and height parameters , returning a NULL pointer when this happens. However , this code has an issue of not checking the return value of these functions , using the \"dst\" variable for memory writes unconditionally. This means it can cause a NULL pointer ( or a close-to-NULL pointer ) write , which is probably just crash the process , but since the gd image structure is very large , it could happen to even touch allocated memory. See POC # 2. ， The function then performs some bounds checks :  ， crop->width = src->sx - crop->x + 1 ;  ， } ， crop->height = src->sy - crop->y + 1 ;  ， }",
    "time": "2014.02.18"
}