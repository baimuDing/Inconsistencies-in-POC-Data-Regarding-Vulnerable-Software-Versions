{
    "text": "vul_url : ， vul_name : Serendipity Weblog XSS Vulnerabilities ， vul_date : 2006.10.26 ， vul_credit_name : Stefan Esser (sesser hardened-php net) ， vul_risk : Low ， vul_local : No ， vul_remote : Yes ， vul_cve : CVE-2006-5499 ， vul_cwe : CWE-79 ， vul_poc : -BEGIN PGP SIGNED MESSAGE- ， Hash: SHA1 ， Hardened-PHP Project ， www.hardened-php.net ， -= Security Advisory =- ， Advisory: Serendipity Weblog XSS Vulnerabilities ， Release Date: 2006/10/19 ， Last Modified: 2006/10/19 ， Author: Stefan Esser [sesser (at) hardened-php (dot) net [email concealed] ， Application: Serendipity <= 1.0.1 ， Severity: Multiple XSS vulnerabilities within the administration ， interface allow Cross Site Scripting attacks against ， the blog admin ， Risk: Critical ， Vendor Status: Vendor has a released an updated version ， Overview: ， Quote from ， \"Serendipity is a PHP-powered weblog application which gives the ， user an easy way to maintain an online diary, weblog or even a ， complete homepage. While the default package is designed for ， the casual blogger, Serendipity offers a flexible, expandable ， and easy-to-use framework with the power for professional ， applications.\" ， During an quick audit of Serendipity it was discovered that ， multiple XSS vulnerabilities exist in the administration area. ， Because of this vulnerabilities it is possible for an attacker ， that tricks an admin into visiting a special prepared website ， to perform any administrative action in the blog. This includes ， posting entries or adding additional admin users. ， Tricking a blog admin to visit a certain website is usually as ， simple as mentioning an URL in the comments of his blog. ， Details: ， Serendipity failed to correctly sanitize user input on the ， media manager administration page. The content of GET variables ， were written into JavaScript strings. By using standard string ， evasion techniques it was possible to execute arbitrary ， JavaScript. ， Additionally Serendipity dynamically created a HTML form on ， the media manager administration page that contained all ， variables found in the URL as hidden fields. While the variable ， values were correctly escaped it was possible to break out ， by specifying strange variable names."
}