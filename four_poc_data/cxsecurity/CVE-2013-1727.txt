{
    "text": "vul_url : ， vul_name : Firefox for Android Same-origin bypass through ， vul_date : 2013-10-02 / 2013-10-03 ， vul_credit_name : Takeshi Terada ， vul_risk : Medium ， vul_local : No ， vul_remote : Yes ， vul_cve : CVE-2013-1727 ， vul_cwe : CWE-79 ， vul_poc : CVE Number: CVE-2013-1727 ， Vender Identifier: MFSA 2013-84 ， Title: Firefox for Android - Same-origin bypass through ， symbolic links ， Affected Software: Prior to v24 (confirmed on v14) ， Credit: Takeshi Terada of Mitsui Bussan Secure Directions, Inc. ， Issue Status: v24 was released which fixes this vulnerability ， Overview: ， Firefox for Android's Same-Origin Policy for local files (file: URI) can ， be bypassed by using symbolic links. It results in theft of Firefox's ， private files by malicious Android apps. ， Details: ， As described in MDN Document (*), Firefox allows a local file to read ， another file, only if the parent directory of the originating file is an ， ancestor directory of the target file. ， However, it is possible to circumvent the restriction by a trick using ， symbolic link. ， This issue enables malicious Android apps to steal Firefox's private ， files such as Cookie file. ， As an example, steps to steal Firefox's profiles.ini are described below: ， 1. An attacker's app creates a malicious HTML file, and makes Firefox load ， its URL with file scheme. The malicious HTML contains JavaScript code ， which, a few seconds later, tries to read the same URL with itself via ， XMLHttpRequest. ， <u>Wait a few seconds.</u> ， <script> ， var xhr = new XMLHttpRequest; ， xhr.onload = function() { ， alert(xhr.responseText); ， }; ， xhr.open('GET', document.URL); ， xhr.send(null); ， } ， setTimeout(doit, 8000); ， </script>\"; ， 2. Before XHR fires, the attacker's app replaces the malicious HTML with ， a symbolic link pointing to Firefox's profiles.ini file. ， 3. When XHR fires, Firefox follows the symlink and provides the content ， of the profiles.ini file to the malicious HTML. ， Through the steps above, the attacker's app can gain the path of the ， Firefox's private files such as Cookie file. The attacker's app can also ， get the contents of those private files in a similar manner. ， Note: ， It should be noted that this issue does not matter in Firefox for normal ， PC platform (such as Windows OS), in which all apps are regarded as ， reasonably trustworthy. However it does matter in Android platform with ， sandbox security model intended to segretate apps. In such platforms, ， app developers cannot regard other apps as trustworty. ， By this difference in platform security model, Android apps that are ， ported from PC often suffer from unexpected vulnerabilities. Obviously ， such vulnerabilities are not specific to Firefox. In reality, I ， discovered such vulnerabilities in Chrome for Android last year. ， Chrome for Android vulnerabilities: ， 1. ， 2. ， 3. ， 4. ， 5. ， (#4 is a quite similar issue as the issue described in this advisory)"
}