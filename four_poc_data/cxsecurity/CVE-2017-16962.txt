{
    "text": "vul_name : CommuniGatePro 6.1.16 Cross Site Scripting ， vul_cve : CVE-2017-16962 ， vul_poc :  # Exploit Title : CommuniGatePro webmails Multiple Stored XSS ，  # Date : 15/11/2017 ，  # Exploit Author : Boumediene KADDOUR ，  # Unit : Algerie Telecom R&D Unit ，  # Vendor Homepage :  ，  # Software Link :  ( paid product )  ，  # Version : 6.1.16< ，  # Tested on : production server on crystal , pronto and pronto4 webmails ， from gmail and hotmail. ， CommuniGatePro 6.1.16 webmails ( crystal , pronto and pronto4 ) suffer from ， multiple stored XSS vulnerabilities. The bellow details illustrate the ， impact of this vulnerability. ，  * Vulnerability Description :  *  ， XSS flaws occur whenever an application includes untrusted data in a new ， web page without proper validation or escaping , or updates an existing web ， page with user supplied data using a browser API that can create ， JavaScript. XSS allows attackers to execute scripts in the victimas browser ， which can hijack user sessions , deface web sites , or redirect the user to ， malicious sites. ，  * Vulnerability details ( Stored XSS )  :  *  ， This vulnerability allowed us to gain access to the following :  ， 1. Control the victim's mailbox by just reading my email ， 2. Control the victim's computer in case the person uses Internet Explorer 8 which is widely used in our company. ， 3. Send emails on behalf the victim ， 4. Deface the whole victim mailbox ， 5. Invoke the malicious piece of code each time an attachment's sent to the victim. ，  * Vulnerable sections :  *  ， 1. Calendar ， 2. Files ， 3. Tasks ， 4. Notes ， 5. Inbox ，  * Attack Narratives and Scenarios :  *  ， 1. * Calendar :  *  ，  * Source webmail :  * tested with gmail and hotmail ，  * Destination webmail :  * Crystal ， In order to deliver our PoC , we have taken the advantages of * google ， calendar * to achieve our goal. ，  * PoC :  *  ，  * POST /calendar/event HTTP/1.1 *  ，  * Host : calendar.google.com < ，  * User-Agent : Mozilla/5.0 ( X11 ; Linux x86_64 ; rv : 52.0 ) Gecko/20100101 ， Firefox/52.0 *  ，  * Accept :  * / ，  * Accept-Language : en-US , en ; q=0.5 *  ，  * Accept-Encoding : gzip , deflate *  ，  * Referer :  ， < ，  * X-If-No-Redirect : 1 *  ，  * X-Is-Xhr-Request : 1 *  ，  * Content-Type : application/x-www-form-urlencoded ; charset=utf-8 *  ，  * Content-Length : 634 *  ，  * Cookie : Mycookie *  ，  * Connection : close *  ，  * sf=true&output=js&action=CREATE&useproto=true&add=boumediene.k%40victim.dz ， < ， < ， < ， Once the victim receives the invitation , he/she will not be obliged to ， click on any link or download any file. The only condition for this PoC to ， work is a single click to read the email. Once the victim reads the email ,  ， the code gets executed on the victim's browser ending up sending sensitive ， data to the adversary. ，  * 2. Files :  *  ，  * Source webmail :  * pronto/pronto4/Crystal ，  * Destination webmail :  * Crystal ， In order to leverage this vulnerability , a victim must first acquire a ， local mailbox. What he/she will do is the following :  ， 1. Go to file section. ， 2. Create a directory ， 3. Name the directory with any JavaScript code , in our case ( <img src=X onerror=alert ( document.cookie ) > )  ， 4. Share or grant access to victim to be able to at least read the content of the directory ， 5. The victim then recieves the email of granting access to that directory ， 6. The vitim reads the email and then accesses the directory ending up executing the code within its scope of work ，  * 3. Notes :  *  ，  * Source webmail :  * Crystal ，  * Destination webmail :  * Crystal ， In order to leverage this vulnerability , a victim must first acquire a ， local mailbox. What he/she will do is the following :  ， 1. Create a note ， 2. Put the JavaScript code within it ， 3. Share it with the victim ，  * 4. Tasks :  *  ，  * Source webmail :  * pronto/pronto4 ，  * Destination webmail :  * Crystal ， In order to leverage this vulnerability , a victim must first acquire a ， local mailbox. What he/she will do is the following :  ， 1. Create a task ， 2. Put the JavaScript code within the task name ， 3. publish it ，  * 5. Inbox *  ，  * Source webmail :  * pronto/pronto4 ，  * Destination webmail :  * Crystal ， In order to leverage this vulnerability , a victim must first acquire a ， local mailbox. What he/she will do is the following :  ， 1. Create an html file with malicious JavaScript piece of code ， 2. Make use of Pronto to send the email to the victim ， 3. The victim reads the email using Crystal webmail and the code gets ， executed. ，  * Remediation :  *  ， Sanitize , escape and validate user supplied data accordingly",
    "time": "2017-11-26 / 2017-11-28"
}