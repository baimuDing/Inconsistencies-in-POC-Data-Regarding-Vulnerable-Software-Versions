{
    "text": "vul_name : Linux Kernel 3.x usb-midi Local Privilege Escalation ， vul_cve : CVE-2016-2384 ， vul_poc : This post describes an exploitable vulnerability ( CVE-2016-2384 - in the usb-midi Linux kernel driver. The vulnerability is present only if the usb-midi module is enabled , but as far as I can see many modern distributions do this. The bug has been fixed upstream (  ， The vulnerability can be exploited in two ways :  ， - Denial of service. Requires physical access ( ability to plug in a malicious USB device ) . All the kernel versions seem to be vulnerable to this attack. I managed to cause a kernel panic on real machines with the following kernels : Ubuntu 14.04 ( 3.19.0-49-generic )  , Linux Mint 17.3 ( 3.19.0-32-generic )  , Fedora 22 ( 4.1.5-200.fe22.x86_64 ) and CentOS 6 ( 2.6.32-584.12.2.e16.x86_64 ) . ， - Arbitrary code execution with ring 0 privileges ( and therefore a privilege escalation ) . Requires both physical and local access ( ability to plug in a malicious USB device and to execute a malicious binary as a non-privileged user ) . All the kernel versions starting from v3.0 seem to be vulnerable to this attack. I managed to gain root privileges on real machines with the following kernels : Ubuntu 14.04 ( 3.19.0-49-generic )  , Linux Mint 17.3 ( 3.19.0-32-generic ) and Fedora 22 ( 4.1.5-200.fe22.x86_64 ) . All machines had SMEP turned on , but didn't have SMAP. ， A proof-of-concept exploit ( poc.c - poc.py - is provided for both types of attacks. The provided exploit uses a Facedancer21 ( board to physically emulate the malicious USB device. The provided exploit bypasses SMEP , but doesn't bypass SMAP ( though it might be possible to do ) . It has about 50% success rate ( the kernel crashes on failure )  , but this can probably be improved. Check out the demo video (  ， It should actually be possible to make the entire exploit for the arbitrary code execution hardware only and therefore eliminate the local access requirement , but this approach wasn't thoroughly investigated. ， The vulnerability was found with KASAN (  ( KernelAddressSanitizer , a kernel memory error detector ) and vUSBf (  ( a virtual usb fuzzer ) . ， - poc.c - ， / A part of the proof-of-concept exploit for the vulnerability in the usb-midi ， / driver. Meant to be used in conjuction with a hardware usb emulator , which ， / emulates a particular malicious usb device ( a Facedancer21 for example ) . ， / Andrey Konovalov <andreyknvl @ gmail.com> ， / Usage :  ， / / Edit source to set addresses of the kernel symbols and the ROP gadgets. ， / $ gcc poc.c -masm=intel ， / / Run N instances of the binary with the argument increasing from 0 to N ,  ， / / where N is the number of cpus on your machine. ， / $ ./a.out 0 & ./a.out 1 & . ， / [ + ] starting as : uid=1000 , euid=1000 ， / [ + ] payload addr : 0x400b60 ， / [ + ] fake stack mmaped ， / [ + ] plug in the usb device. ， / / Now plug in the device a few times. ， / / In one of the instances you will get ( if the kernel doesn't crash )  :  ， / [ + ] got r00t : uid=0 , euid=0 ， / # id ， / uid=0 ( root ) gid=0 ( root ) groups=0 ( root ) ",
    "time": "2017.05.14"
}