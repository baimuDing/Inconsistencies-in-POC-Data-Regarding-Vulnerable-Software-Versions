{
    "text": "vul_name : IE 7 and Firefox Browsers Digest Authentication Request Splitting ， vul_cve : CVE-2007-2292 , CVE-2007-2291 ， vul_poc : Title IE 7 and Firefox Browsers Digest Authentication ， Request Splitting ， Systems Affected Internet Explorer 7.0.5730.11 ， FF 2.0.0.3 ， Severity Medium ， Vendor & ， Advisory ， Authors Stefano `Wisec` Di Paola ( stefano.dipaola ( at ) wisec ( dot ) it [ email concealed ]  )  ， Discovery Date 20070213 ， Release Date 20070425 ， I ) Short description ， Firefox and Internet Explorer are prone to Http Request Splitting when ， Digest Authentication occurs. If anyone wants to know about HTTP Request ， Splitting , HTTP Request Splitting attacks are described in various ， papers and advisories :  ， 1. ， 2. ， 3. ， 4. ，  ( About Auto Injection with Req.Split. )  ， II ) Long description ， As explained in Rfc2617 ( Digest ， Authentication is a more secure way to exchange user credentials. ， Rfc uses the following example :  ， -8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<- ， The first time the client requests the document , no Authorization ， header is sent , so the server responds with :  ， HTTP/1.1 401 Unauthorized ， WWW-Authenticate : Digest ， realm=\"testrealm ( at ) host ( dot ) com [ email concealed ] \" ,  ， qop=\"auth , auth-int\" ,  ， nonce=\"dcd98b7102dd2f0e8b11d0f600bfb0c093\" ,  ， opaque=\"5ccc069c403ebaf9f0171e9517f40e41\" ， The client may prompt the user for the username and password , after ， which it will respond with a new request , including the following ， Authorization header :  ， Authorization : Digest username=\"Mufasa\" ,  ， realm=\"testrealm ( at ) host ( dot ) com [ email concealed ] \" ,  ， nonce=\"dcd98b7102dd2f0e8b11d0f600bfb0c093\" ,  ， uri=\"/dir/index.html\" ,  ， qop=auth ,  ， nc=00000001 ,  ， cnonce=\"0a4f113b\" ,  ， response=\"6629fae49393a05397450978507c4ef1\" ,  ， opaque=\"5ccc069c403ebaf9f0171e9517f40e41\" ， -8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<-8<- ， So there's a response by the client ( browser ) with username in clear. ， There are two ways to send credentials in html/javascript :  ， XMLHttpRequest ( \"GET\" , \"page\" , async , \"user\" , \"pass\" )  ;  ， And with img/iframes or related :  ， <img src=\" ， But what if the username contains rn or urlencoded %0d%0a? ， Let's use an Evil page like this :  ， -8<- -8<-8<-8<-8<-8<-8<-8<-8<-8<-",
    "time": "2007.05.02"
}