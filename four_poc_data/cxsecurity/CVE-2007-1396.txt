{
    "text": "vul_name : PHP import_request_variables (  ) arbitrary variable overwrite ， vul_cve : CVE-2007-1396 ， vul_poc : PHP import_request_variables (  ) arbitrary variable overwrite ， Name Using import_request_variables (  ) you can overwrite ，  $ _ * and $  *  ( any php variable ) . ， Systems Affected PHP >= 4.0.7 <= 5.2.1 ， Severity High ， Vendor ， Advisory ， Authors Stefano `wisec` di Paola ( stefano.dipaola ( at ) wisec ( dot ) it [ email concealed ]  )  ， Francesco `ascii` Ongaro ( ascii ( at ) ush ( dot ) it [ email concealed ]  )  ， Date 20060307 ， I. BACKGROUND ， PHP is a scripting language. Since in the past PHP enabled by default ， GLOBALS programmers wrote applications using this input method , nowadays ， the globals on configuration has gone ( while still used by many web ， hosting companies ) and programmers instead rewriting their code wrote ， added patches to re implement superglobals their own. ， These codes gave developers more troubles than benefits so PHP ， developers wrote a function to securely import a part of the whole ， \"_REQUEST\" , this function is named import_request_variables (  ) and exists ， since PHP 4.0.7. ， II. DESCRIPTION ， >From the PHP manual :  ，  [ quote ]  ， Imports GET/POST/Cookie variables into the global scope. It is useful if ， you disable register_globals , but would like to see some variables in ， the global scope. ，  [ /quote ]  ， So import_request_variables (  ) emulate register globals on and is a bit ， different from extract (  ) . ，  [ quote ]  ， Note : Although the prefix parameter is optional , you will get an ， E_NOTICE level error if you specify no prefix , or specify an empty ， string as a prefix. This is a possible security hazard. Notice level ， errors are not displayed using the default error reporting level. ，  [ /quote ]  ， They warn you about the prefix thing , this is right for two reasons : the ， first is that without prefix you have the same problems of globals on ( but ， it's also true that if you code everything with the prefix you return to ， the starting point. ， The second is the one explained in this advisory : using the function ， import_request_variables (  ) enable people to overwrite the following ， arrays :  $ _GET $ _POST $ _COOKIE $ _FILES $ _SERVER $ _SESSION and all the ， others not mentioned. ， We are conducting further investigations on _FILES , it seems possible to ， overwrite the array but we are not sure that it could be used to trick ， file upload scripts. ， Given the specified entry points ( the first argument of the function is ， a case insensitive string of the input methods that will be imported ,  ， G for GET , P for POST and C for COOKIE ) a remote attacker will be able ， to overwrite any internal and protected array. ， The result is that if you use REGISTER GLOBALS ON you are MUCH MORE safe. ， There is a little bonus : as highlighted in the code snippets on the following ， ANALYSIS section the P char will enable both POST and FILES entry point ， so import_request_variables ( 'GPC' ) will give a global scope to ， everything specified in GET POST COOKIE and FILES. ， III. ANALYSIS ， import_request_variables (  ) is not new to vulnerabilities : consider this ， change log entry for 24 Nov 2005 , PHP 5.1. ，  [ quote ]  ， - Fixed potential GLOBALS overwrite via import_request_variables (  ) and ， possible crash and/or memory corruption. ( Ilia )  ，  [ /quote ]  ， Use the following test suite : run the script in a writable directory ， inside a document root then point your browser to the test.php files and ， make your tests. ， - >8 - >8 - >8 - >8 - testsuite.sh - >8 - >8 - >8 - >8 ，  #  ! /bin/bash ， mkdir hack-php_import_request_variables cd ， hack-php_import_request_variables ， echo \"Testing cli.\" ， echo \"register_globals = Off\" > php-ini-globals-off ， php -c php-ini-globals-off -r \"echo ( int ) ini_get ( \"register_globals\" )  ; \" ， echo \"register_globals = On\" > php-ini-globals-on ， php -c php-ini-globals-on -r \"echo ( int ) ini_get ( \"register_globals\" )  ; \" ， echo \"Testing mod.\" ， mkdir globals-on mkdir globals-off ， cat > globals-on/test.php TOKEN",
    "time": "2007.03.14"
}