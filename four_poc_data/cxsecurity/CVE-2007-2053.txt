{
    "text": "vul_name : AFFLIB ( TM )  : Multiple Buffer Overflows ， vul_cve : CVE-2007-2053 ， vul_poc : -BEGIN PGP SIGNED MESSAGE- ， Hash : SHA1 ， Virtual Security Research , LLC. ， Security Advisory ， Advisory Name : Multiple Buffer Overflows Discovered in AFFLIB ， Release Date : 2007-04-27 ， Application : AFFLIB ( TM )  ， Versions : 2.2.0 and likely earlier ， Severity : High ， Author : Timothy D. Morgan <tmorgan {at} vsecurity {dot} com> ， Vendor Status : Vendor Notified , Fix Available ， CVE Candidate : CVE-2007-2053 ， Product Description :  ， > From the forensicswiki.org website [ 1 ]  :  ， \"The Advanced Forensics Format ( AFF ) is an extensible open format for ， the storage of disk images and related forensic metadata. It was ， developed by Simson Garfinkel and Basis Technology.\" ， AFFLIB ( TM ) is the reference implementation of the AFF ( TM ) format ,  ， written primarily by Simson Garfinkel. It comes in the form of an open ， source library and a set of command line tools used to manipulate ， AFF ( TM ) files. ， Vulnerability Overview :  ， In mid-March , 2007 Virtual Security Research , LLC ( VSR ) performed a ， security code review of AFFLIB ( TM ) as a part of an internal tool ， assessment process. As a result , multiple vulnerabilities of varying ， severities were discovered. The most significant of these ， vulnerabilities are being announced publicly to raise awareness and help ， end-users secure themselves against potential attack. ， Multiple buffer overflows were found in AFFLIB ( TM ) which could allow an ， attacker to create a denial-of-service condition against a forensics ， examiner , or possibly to execute arbitrary code on the behalf of a ， victim. One such overflow may be triggered remotely and may be ， relatively easy to exploit. The other overflows identified appear to ， have medium to low severity , due to the low likelihood of an attacker ， having the ability to influence the vulnerable operations , at least in ， the typical use case scenarios. However , because AFFLIB ( TM ) is in part ， a library , other applications may utilize it in unanticipated ways ,  ， which may expose these attack vectors. ， All identified overflows were fixed in version 2.2.6. All line numbers ， listed below are from version 2.2.0. ， Vulnerability Details :  ， The following sections include detailed descriptions of the most severe ， overflows found during the assessment. ，  * Remote Stack-based Buffer Overflow Through Use of LastModified *  ， File : lib/s3.cpp ， Line : 113 ， The LastModified string is copied to a fixed-length buffer using ， strcpy ( 3 )  , but no length checking is apparently done when it is ， originally read from an XML response. This could allow a malicious ， Amazon S3 server or a man-in-the-middle to execute code on the S3 client ， system. ( See [ 2 ] for more details on the Amazon S3 protocol. ) Lines ， 111-115 illustrate the problem :  ， / * Make date nice * / ， char tstamp [ 64 ]  ;  ， strcpy ( tstamp ,  (  * i ) ->LastModified.c_str (  )  ;  ， tstamp [ 10 ] = ' ' ;  ， tstamp [ 19 ] = '& # 65533 ; 00' ;  ， Note that the (  * i ) ->LastModified string is drawn directly from an XML ， response in the endElement (  ) callback function ( lines 173-178 of ， lib/s3_glue.cpp )  :  ， case 3 :  ， ed = einfo->cbuf ; break ; }",
    "time": "2007.05.04"
}