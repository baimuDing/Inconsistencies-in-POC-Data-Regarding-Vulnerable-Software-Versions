{
    "text": "vul_name : X2CRM 3.4.1 Multiple Vulnerabilities ， vul_cve : CVE-2013-5692 , CVE-2013-5693 ， vul_poc : Advisory ID : HTB23172 ， Product : X2CRM ， Vendor : X2Engine Inc. ， Vulnerable Version ( s )  : 3.4.1 and probably prior ， Tested Version : 3.4.1 ， Advisory Published : September 4 , 2013 ， Vendor Notification : September 4 , 2013 ， Vendor Patch : September 10 , 2013 ， Public Disclosure : September 25 , 2013 ， Vulnerability Type : PHP File Inclusion [ CWE-98 ]  , Cross-Site Scripting [ CWE-79 ]  ， CVE ， Risk Level : High ， CVSSv2 Base Scores : 7.6 ( AV : N/AC : H/Au : N/C : C/I : C/A : C )  , 2.6 ( AV : N/AC : H/Au : N/C : N/I : P/A : N )  ， Solution Status : Fixed by Vendor ， Discovered and Provided : High-Tech Bridge Security Research Lab (  )  ， Advisory Details :  ， High-Tech Bridge Security Research Lab discovered multiple vulnerabilities in X2CRM , which can be exploited to include arbitrary local files and execute arbitrary PHP code , as well as to perform Cross-Site Sripting ( XSS ) attacks against users of vulnerable application. ， 1 ) PHP File Inclusion in X2CRM : CVE-2013-5692 ， The vulnerability exists due to insufficient filtration of the \"file\" HTTP GET parameter passed to \"/index.php/admin/translationManager\" URL before using it in PHP \"include (  ) \" function. A remote authenticated administrator can include and execute arbitrary local PHP files on the target system using directory traversal sequences. ， The following exploitation example displays content of \"/etc/passwd\" file :  ， /passwd ， Successful exploitation of this vulnerability requires administrative privileges , however it can be also exploited via CSRF vector to which the application is prone. ， Simple CSRF exploit below includes and executes \"/tmp/file.php\" script :  ， <img src=\" ， ./tmp/file.php\"> ， 2 ) Cross-Site Scripting ( XSS ) in X2CRM : CVE-2013-5693 ， The vulnerability exists due to insufficient sanitisation of user-supplied data in \"model\" HTTP GET parameter passed to \"/index.php/admin/editor\" URL. A remote attacker can trick a logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website. ， The exploitation example below uses JavaScript \"alert (  ) \" function to display administrator's cookies :  ， t%28document.cookie%29 ; %3C/script%3E",
    "time": "2013.09.25"
}