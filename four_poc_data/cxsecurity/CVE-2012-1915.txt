{
    "text": "vul_name : CodeIgniter <= 2.1.1 xss_clean (  ) Cross Site Scripting filter bypass ， vul_cve : CVE-2012-1915 ， vul_poc : This is a security advisory for popular PHP framework - CodeIgniter. ， I've found several bypasses in xss sanitization functions in the ， framework. These were responsibly disclosed to the vendor and are now ， fixed in version 2.1.2. ( CVE-2012-1915 ) . ， Affected products ， CodeIgniter <= 2.1.1 PHP framework and all CodeIgniter-based PHP ， applications using its built-in XSS filtering mechanism. ， CVE ， CVE-2012-1915 ， Introduction ， CodeIgniter ( is a powerful PHP framework with ， a very small footprint , built for PHP coders who need a simple and ， elegant toolkit to create full-featured web applications. CodeIgniter ， comes with a Cross Site Scripting Hack prevention filter which can ， either run automatically to filter all POST and COOKIE data that is ， encountered , or you can run it on a per item basis. Several vectors ， bypassing claimed XSS filter protections have been found in 2.1.0 ， version of the framework. In cooperation with vendor , these have been ， fixed in version 2.1.2. ， Description ， XSS filter of CodeIgniter framework is implemented in xss_clean (  )  ， function defined in system/core/Security.php file. It uses multiple ,  ， mostly blacklist-oriented methods to detect and remove XSS payloads ， from the passed input. As per documentation of the filter (  ，  ) the filter ， is supposed to be run on input passed to the application e.g. before ， saving data in the database i.e. it's not an output-escaping , but ， input sanitizing filter. ， There are multiple ways to bypass the current version of the filters ,  ， exemplary vectors are given below :  ， / Different attribute separators and invalid regexp detecting tag ， closure too early ， <img/src=\">\" onerror=alert ( 1 ) > ， <button/a=\">\" autofocus onfocus=alert& # 40 ; 1& # 40 ; ></button> ， <button a=\">\" autofocus onfocus=alert& # 40 ; 1& # 40 ; > ， / Opera 11 svg bypass ， <svg xmlns=\" ， xmlns : xlink=\" <set ， attributeName=\"xlink : href\" ， to=\"data : image/svg+xml ; charset=utf-8 ; base64 ,  ， PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPjxzY3JpcHQ%2BYWxlcnQoMSk8L3NjcmlwdD48L3N2Zz4NCg%3D%3D\"/> ， </feImage> </svg> ， / data : URI with base64 encoding bypass exploiting Firefox ， origin-inheritance for data : uris ， <a target=\"_blank\"",
    "time": "2012.07.21"
}