{
    "text": "vul_name : Kajona 3.4.1 Cross Site Scripting ， vul_cve : CVE-2012-3805 ， vul_poc : Advisory ID : HTB23097 ， Product : Kajona ， Vendor : www.kajona.de ， Vulnerable Version ( s )  : 3.4.1 and probably prior ， Tested Version : 3.4.1 ， Vendor Notification : 20 June 2012 ， Vendor Patch : 26 June 2012 ， Public Disclosure : 11 July 2012 ， Vulnerability Type : Cross-Site Scripting ( XSS )  ， CVE ， CVSSv2 Base Score : 4.3 ( AV : N/AC : M/Au : N/C : P/I : N/A : N )  ， Solution Status : Fixed by Vendor ， Risk Level : Medium ， Discovered and Provided : High-Tech Bridge Security Research Lab (  )  ， Advisory Details :  ， High-Tech Bridge Security Research Lab has discovered multiple Cross-Site Scripting ( XSS ) vulnerabilities in Kajona. ， 1 ) Multiple Cross-Site Scripting ( XSS ) in Kajona : CVE-2012-3805 ， 1.1 Input passed via the \"absender_name\" , \"absender_email\" and \"absender_nachricht\" GET parameters to /index.php ( when \"page\" is set to \"contact\" ) is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in user's browser session in context of affected website. ， The following PoC ( Proof of Concept ) demonstrate the vulnerabilities :  ， 1.2 Input passed via the \"comment_name\" , \"comment_subject\" and \"comment_message\" GET parameters to /index.php ( when \"page\" is set to \"postacomment\" ) is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in user's browser session in context of affected website. ， The following PoC demonstrate the vulnerabilities :  ， 1.3 Input passed via the \"module\" GET parameter to /index.php is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in user's browser session in context of affected website. ， The following PoC demonstrates the vulnerability :  ， 1.4 Input passed via the \"action\" GET parameter to /index.php ( when \"module\" is set to \"login\" and \"admin\" is set to \"1\" ) is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in user's browser session in context of affected website. ， The following PoC demonstrates the vulnerability :  ， 1.5 Input passed via the \"pv\" and \"pe\" GET parameters to /index.php ( when \"module\" is set to \"user\" , \"action\" is set to \"list\" and \"admin\" is set to \"1\" ) is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in administrator's browser session in context of affected website. ， The following PoC demonstrate the vulnerabilities :  ， 1.6 Input passed via the \"user_username\" , \"user_email\" , \"user_forename\" , \"user_name\" , \"user_street\" , \"user_postal\" , \"user_city\" , \"user_tel\" and \"user_mobile\" GET parameters to /index.php ( when \"module\" is set to \"user\" , \"action\" is set to \"newUser\" and \"admin\" is set to \"1\" ) is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in administrator's browser session in context of affected website. ， The following PoC demonstrate the vulnerabilities :  ， 1.7 Input passed via the \"group_name\" and \"group_desc\" GET parameters to /index.php ( when \"module\" is set to \"user\" , \"action\" is set to \"groupNew\" and \"admin\" is set to \"1\" ) is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in administrator's browser session in context of affected website. ， The following PoC demonstrate the vulnerabilities :  ， 1.8 Input passed via the \"name\" , \"browsername\" , \"seostring\" , \"keywords\" and \"folder_id\" GET parameters to /index.php ( when \"module\" is set to \"pages\" , \"action\" is set to \"newPage\" and \"admin\" is set to \"1\" ) is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in administrator's browser session in context of affected website. ， The following PoC demonstrate the vulnerabilities :  ， 1.9 Input passed via the \"element_name\" and \"element_cachetime\" GET parameters to /index.php ( when \"module\" is set to \"pages\" , \"action\" is set to \"newElement\" and \"admin\" is set to \"1\" ) is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in administrator's browser session in context of affected website. ， The following PoC demonstrate the vulnerabilities :  ， 1.10 Input passed via the \"aspect_name\" GET parameter to /index.php ( when \"module\" is set to \"system\" , \"action\" is set to \"newAspect\" and \"admin\" is set to \"1\" ) is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in administrator's browser session in context of affected website. ， The following PoC demonstrates the vulnerability :  ， 1.11 Input passed via the \"filemanager_name\" , \"filemanager_path\" , \"filemanager_upload_filter\" and \"filemanager_view_filter\" GET parameters to /index.php ( when \"module\" is set to \"filemanager\" , \"action\" is set to \"newRepo\" and \"admin\" is set to \"1\" ) is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in administrator's browser session in context of affected website. ， The following PoC demonstrate the vulnerabilities :  ， 1.12 Input passed via the \"archive_title\" and \"archive_path\" GET parameters to /index.php ( when \"module\" is set to \"downloads\" , \"action\" is set to \"newArchive\" and \"admin\" is set to \"1\" ) is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in administrator's browser session in context of affected website. ， The following PoC demonstrate the vulnerabilities : ",
    "time": "2012.07.12"
}