{
    "text": "vul_name : EON 5.0 SQL Injection ， vul_cve : CVE-2017-6088 ， vul_poc :  #  [ CVE-2017-6088 ] EON 5.0 Multiple SQL Injection ， Description ， EyesOfNetwork ( \"EON\" ) is an OpenSource network monitoring solution. ， SQL injection ( authenticated )  ， The Eonweb code does not correctly filter arguments , allowing ， authenticated users to inject arbitrary SQL requests. ， CVE ID : CVE-2017-6088 ， Access Vector : remote ， Security Risk : medium ， Vulnerability : CWE-89 ， CVSS Base Score : 6.0 ， CVSS Vector String : CVSS : 3.0/AV : N/AC : L/PR : H/UI : N/S : U/C : H/I : L/A : L ， Proof of Concept 1 ( root privileges )  ， The following HTTP request allows an attacker ( connected as ， administrator ) to dump the database contents using SQL injections inside ， either the `bp_name` or the `display` parameter. These requests are ， executed with MySQL root privileges. ， ` ， ` ， Vulnerable code ， The vulnerable code can be found inside the ， `module/monitoring_ged/ged_functions.php` file , line 114 :  ， ` ，  $ sql = \"select name from bp where is_define = 1 and name ! ='\". $ bp.\"' ， and priority = '\" . $ display . \"'\" ;  ，  $ req = $ bdd->query (  $ sql )  ;  ，  $ process = $ req->fetchall (  )  ;  ， echo json_encode (  $ process )  ;  ， } ， ` ， Proof of Concept 2 ， The following HTTP request allows an attacker to dump the database ， contents using SQL injections inside the `type` parameter :  ， ` ， ` ， Vulnerable code ， The vulnerable code can be found inside the ， `module/monitoring_ged/ajax.php` file , line 64 :  ， ` ，  $ ged_where = \"WHERE pkt_type_id ! ='0'\" ;  ， } else { ，  $ ged_where = \"WHERE pkt_type_id='\". $ _GET [ \"type\" ] .\"'\" ;  ， } ，  $ gedsql_result1=sqlrequest (  $ database_ged , \"SELECT ， pkt_type_id , pkt_type_name FROM pkt_type $ ged_where AND pkt_type_id<'100' ; \" )  ;  ， ` ， Proof of Concept 3 ， The following HTTP request allows an attacker to dump the database ， contents using SQL injections inside the `search` parameter :  ， ` ， ` ， Vulnerable code ， The vulnerable code can be found inside the ， `module/monitoring_ged/ged_functions.php` file , line 129. ， ` ，  $ like = \" ;  ，  $ like .= \"%\" ;  ， } ，  $ like .= trim (  $ search , ' * ' )  ;  ，  $ like .= \"%\" ;  ， } ，  $ where_clause .= \" AND $ filter LIKE ' $ like'\" ;  ， } ， ` ， Proof of Concept 4 ， The following HTTP request allows an attacker to dump the database ， contents using SQL injections inside the `equipment` parameter :  ， ` ， 1 ) &queue=history ， ` ， Vulnerable code ， The vulnerable code can be found inside the ， `module/monitoring_ged/ged_functions.php` file , line 493 :  ， ` ，  $ gedsql_result1=sqlrequest (  $ database_ged , \"SELECT ， pkt_type_id , pkt_type_name FROM pkt_type WHERE pkt_type_id ! ='0' AND ， pkt_type_id<'100' ; \" )  ;  ，  $ sql = \"SELECT DISTINCT $ filter FROM ， \". $ ged_type [ \"pkt_type_name\" ] .\"_queue_\". $ queue ;  ，  $ results = sqlrequest (  $ database_ged ,  $ sql )  ;  ， array_push (  $ datas ,  $ result [  $ filter ]  )  ;  ， } ， } ， } ， ` ， Timeline ( dd/mm/yyyy )  ，  * 01/10/2016 : Initial discovery. ，  * 09/10/2016 : Fisrt contact with vendor. ，  * 23/10/2016 : Technical details sent to the security contact. ，  * 27/10/2016 : Vendor akwnoledgement and first patching attempt. ，  * 16/02/2017 : New tests done on release candidate 5.1. Fix confirmed. ，  * 26/02/2017 : 5.1 release. Waiting for 2 weeks according to our ， repsonsible disclosure agreement. ，  * 14/03/2017 : Public disclosure. ， Thank you to EON for the fast response. ， Solution ， Update to version 5.1. ， Affected versions ，  * Version <= 5.0 ， Credits ，  * Nicolas SERRA <n.serra @ sysdream.com> ， SYSDREAM Labs <labs @ sysdream.com> ， GPG :  ， 47D1 E124 C43E F992 2A2E ， 1551 8EB4 8CD9 D5B2 59A1 ，  * Website :  ，  * Twitter :  @ sysdream",
    "time": "2017.03.24"
}