{
    "text": "vul_name : glibc 2.18 integer overflows in malloc ( heap corruption )  ， vul_cve : CVE-2013-4332 ， vul_poc : Multiple integer overflows in malloc/malloc.c in the GNU C Library ( aka glibc or libc6 ) 2.18 and earlier allow context-dependent attackers to cause a denial of service ( heap corruption ) via a large value to the ( 1 ) pvalloc ,  ( 2 ) valloc ,  ( 3 ) posix_memalign ,  ( 4 ) memalign , or ( 5 ) aligned_alloc functions. ， malloc : Check for integer overflow in memalign. ， A large bytes parameter to memalign could cause an integer overflow ， and corrupt allocator internals. Check the overflow does not occur ， before continuing with the allocation. ， diff -git a/malloc/malloc.c b/malloc/malloc.c ， index 3148c5f.f7718a9 100644 ( file )  ， - a/malloc/malloc.c ， + b/malloc/malloc.c ， -3015 , 6 +3015 , 13 _libc_memalign ( size_t alignment , size_t bytes )  ， / * Otherwise , ensure that it is at least a minimum chunk size * / ， + / * Check for overflow. * / ， + if ( bytes > SIZE_MAX - alignment - MINSIZE )  ， + { ， + _set_errno ( ENOMEM )  ;  ， + return 0 ;  ， + } ， + ， arena_get ( ar_ptr , bytes + alignment + MINSIZE )  ; ",
    "time": "2014.06.20"
}