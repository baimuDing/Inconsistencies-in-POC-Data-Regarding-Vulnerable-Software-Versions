{
    "text": "vul_name : Piwigo 2.3.3 Cross Site Scripting / Directory Traversal ， vul_cve : CVE-2012-2209 , CVE-2012-2208 ， vul_poc : Advisory ID : HTB23085 ， Product : Piwigo ， Vendor : Piwigo project ， Vulnerable Version ( s )  : 2.3.3 and probably prior ， Tested Version : 2.3.3 ， Vendor Notification : 4 April 2012 ， Vendor Patch : 8 April 2012 ， Public Disclosure : 25 April 2012 ， Vulnerability Type : Directory Path Traversal , Cross-Site Scripting ( XSS )  ， CVE ， Solution Status : Fixed by Vendor ， Risk Level : Medium ， Credit : High-Tech Bridge SA Security Research Lab (  )  ， Advisory Details :  ， High-Tech Bridge SA Security Research Lab has discovered multiple vulnerabilities in Piwigo , which can be exploited to perform Cross-Site Scripting ( XSS ) and Path Traversal attacks. ， 1 ) Directory Path Traversal in Piwigo : CVE-2012-2208 ， 1.1 Input passed via the \"language\" GET parameter to upgrade.php is vulnerable to directory path traversal. The directory path passed to the \"language\" parameter is later used in include (  ) function to include the following files : common.lang.php , admin.lang.php , install.lang.php and upgrade.lang.php. ， Under certain conditions this can be exploited to include malicious PHP file and execute arbitrary PHP code. To exploit this vulnerability the attacker should create a file with the name from the list above ( for example admin.lang.php ) in the file system ( for example in /tmp/ ) and try to include it via directory traversal. ， The following PoC ( Proof of Concept ) demonstrates the vulnerability :  ， /tmp/ directory should contain \"admin.lang.php\" file that will be used in include (  ) call. ， 2 ) Multiple Cross-Site Scripting ( XSS ) in Piwigo : CVE-2012-2209 ， 2.1 Input passed via the \"section\" GET parameter to admin.php is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in administrator's browser session in context of affected website. ， The following PoC ( Proof of Concept ) demonstrates the vulnerability :  ， 2.2 Input passed via the \"installstatus\" GET parameter to admin.php is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in administrator's browser session in context of affected website. ， The following PoC demonstrates the vulnerability :  ， 2.3 Input passed via the \"theme\" GET parameter to admin.php is not properly sanitised before being returned to the user. ， This can be exploited to execute arbitrary HTML and script code in administrator's browser session in context of affected website. ， The following PoC demonstrates the vulnerability : ",
    "time": "2012.04.26"
}