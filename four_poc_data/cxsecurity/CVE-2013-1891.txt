{
    "text": "vul_name : OpenCart 1.5.5.1 Directory Traversal ， vul_cve : CVE-2013-1891 ， vul_poc :  [ waraxe-2013-SA # 098 ] - Directory Traversal Vulnerabilities in OpenCart 1.5.5.1 ， Author : Janek Vind \"waraxe\" ， Date : 19. March 2013 ， Location : Estonia , Tartu ， Web :  ， Description of vulnerable software :  ， OpenCart is a turn-key ready \"out of the box\" shopping cart solution. ， You simply install , select your template , add products and your ready to start ， accepting orders. ， Affected are all OpenCart versions , from 1.4.7 to 1.5.5.1 , maybe older too. ， 1. Directory Traversal Vulnerabilities in \"filemanager.php\" ， Reason : insufficient sanitization of user-supplied data ， Attack vectors :  ， 1. user-supplied POST parameters \"directory\" , \"name\" , \"path\" , \"from\" , \"to\" ， Preconditions :  ， 1. Logged in as admin with filemanager access privileges ， Script \"filemanager.php\" offers for OpenCart admins various file related services :  ， directory listing and creation , image file listing , file copy/move/unlink , upload ,  ， image resize. By the design OpenCart admin can manage files and directories only ， inside specific subdirectory \"image/data/\". It means , that even if you have ， OpenCart admin privileges , you still are not suppose to get access to the files ， and directories below \"image/data/\". So far , so good. ， But what about directory traversal? Let's have a look at the source code. ， PHP script \"admin/controller/common/filemanager.php\" line 66 :  ， - [ source code start ] - ， public function directory (  ) { ，  $ json = array (  )  ;  ，  $ directories = glob ( rtrim ( DIR_IMAGE . 'data/' . ， str_replace ( './' , ' ,  $ this->request->post [ 'directory' ]  )  , '/' ) . ， '/ * ' , GLOB_ONLYDIR )  ;  ，  $ i = 0 ;  ， foreach (  $ directories as $ directory ) { ，  $ json [  $ i ]  [ 'data' ] = basename (  $ directory )  ;  ，  $ json [  $ i ]  [ 'attributes' ]  [ 'directory' ] = ， utf8_substr (  $ directory , strlen ( DIR_IMAGE . 'data/' )  ;  ， . ，  $ this->response->setOutput ( json_encode (  $ json )  ;  ， - [ source code end ] - ， We can see , that directory traversal is prevented by removing \"./\" substrings ， from user submitted parameters. At first look this seems to be secure enough - ， Deeper analysis shows couple of shortcomings in specific filtering method. ， First problem - if OpenCart is hosted on Windows platform , then it's possible ， to use \".\\\" substring for directory traversal. ， Test ( parameter \"token\" must be valid )  :  ， - [ test code start ] -",
    "time": "2013-03-20 / 2013-03-24"
}