{
    "text": "vul_name : macOS 10.12.1 Kernel Writable Privileged IOKit Registry Properties Code Execution ， vul_cve : CVE-2016-7617 ， vul_poc : / *  ， There are two ways for IOServices to define their IOUserClient classes : they can ， override IOService : newUserClient and allocate the correct type themselves ， or they can set the IOUserClientClass key in their registry entry. ， The default implementation of IOService : newUserClient does this :  ， IOReturn IOService : newUserClient ( task_t owningTask , void * securityID ,  ， UInt32 type , OSDictionary * properties ,  ， IOUserClient handler )  ， { ， const OSSymbol * userClientClass = 0 ;  ， IOUserClient * client ;  ， OSObject * temp ;  ， / First try my own properties for a user client class name ， temp = getProperty ( gIOUserClientClassKey )  ;  ， userClientClass = ( const OSSymbol *  ) temp ;  ， userClientClass = OSSymbol : withString ( OSString *  ) temp )  ;  ， setProperty ( kIOUserClientClassKey ,  ，  ( OSObject *  ) userClientClass )  ;  ， } ， } ， / Didn't find one so lets just bomb out now without further ado. ， / This reference is consumed by the IOServiceOpen call ， temp = OSMetaClass : allocClassWithName ( userClientClass )  ;  ， client = ( IOUserClient *  ) temp ;  ， temp->release (  )  ;  ， } ， . continue on and call client->start ( this ) to connect the client to the service ， This reads the \"IOUserClientClass\" entry in the services registry entry and uses the IOKit ， reflection API to allocate it. ， If an IOService doesn't want to have any IOUserClients then it has two options , either override ， newUserClient to return kIOReturnUnsupported or make sure that there is no IOUserClientClass ， entry in the service's registry entry. ， AppleBroadcomBluetoothHostController takes the second approach but inherits from IOBluetoothHostController ， which overrides : setProperties to allow an unprivileged user to set * all * registry entry properties ,  ， including IOUserClientClass. ， This leads to a very exploitable type confusion issue as plenty of IOUserClient subclasses don't expect ， to be connected to a different IOService provider. In this PoC I connect an IGAccelSharedUserClient to ， a AppleBroadcomBluetoothHostController which leads immediately to an invalid virtual call. With more ， investigation I'm sure you could build some very nice exploitation primitives with this bug. ， Tested on MacBookAir5 , 2 MacOS Sierra 10.12.1 ( 16B2555 )  ， / ianbeer ， / clang -o wrongclass wrongclass.c -framework IOKit -framework CoreFoundation ，  # if 0 ， MacOS kernel code execution due to writable privileged IOKit registry properties ， There are two ways for IOServices to define their IOUserClient classes : they can ， override IOService : newUserClient and allocate the correct type themselves ， or they can set the IOUserClientClass key in their registry entry. ， The default implementation of IOService : newUserClient does this :  ， IOReturn IOService : newUserClient ( task_t owningTask , void * securityID ,  ， UInt32 type , OSDictionary * properties ,  ， IOUserClient handler )  ， { ， const OSSymbol * userClientClass = 0 ;  ， IOUserClient * client ;  ， OSObject * temp ;  ， / First try my own properties for a user client class name ， temp = getProperty ( gIOUserClientClassKey )  ;  ， userClientClass = ( const OSSymbol *  ) temp ;  ， userClientClass = OSSymbol : withString ( OSString *  ) temp )  ;  ， setProperty ( kIOUserClientClassKey ,  ，  ( OSObject *  ) userClientClass )  ;  ， } ， } ， / Didn't find one so lets just bomb out now without further ado. ， / This reference is consumed by the IOServiceOpen call ， temp = OSMetaClass : allocClassWithName ( userClientClass )  ;  ， client = ( IOUserClient *  ) temp ;  ， temp->release (  )  ;  ， } ， . continue on and call client->start ( this ) to connect the client to the service ， This reads the \"IOUserClientClass\" entry in the services registry entry and uses the IOKit ， reflection API to allocate it. ， If an IOService doesn't want to have any IOUserClients then it has two options , either override ， newUserClient to return kIOReturnUnsupported or make sure that there is no IOUserClientClass ， entry in the service's registry entry. ， AppleBroadcomBluetoothHostController takes the second approach but inherits from IOBluetoothHostController ， which overrides : setProperties to allow an unprivileged user to set * all * registry entry properties ,  ， including IOUserClientClass. ， This leads to a very exploitable type confusion issue as plenty of IOUserClient subclasses don't expect ， to be connected to a different IOService provider. In this PoC I connect an IGAccelSharedUserClient to ， a AppleBroadcomBluetoothHostController which leads immediately to an invalid virtual call. With more ， investigation I'm sure you could build some very nice exploitation primitives with this bug. ， Tested on MacBookAir5 , 2 MacOS Sierra 10.12.1 ( 16B2555 )  ，  # endif",
    "time": "2016.12.23"
}