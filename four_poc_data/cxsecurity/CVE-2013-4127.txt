{
    "text": "vul_url : ， vul_name : Linux kernel vhost-net use-after-free in vhost_net_flush ， vul_date : 2013-07-15 / 2013-07-16 ， vul_credit_name : Michael S. Tsirkin ， vul_risk : Medium ， vul_local : No ， vul_remote : Yes ， vul_cve : CVE-2013-4127 ， vul_cwe : ， vul_poc : vhost_net_ubuf_put_and_wait has a confusing name: it will actually also ， free it's argument. vhost_net_flush tries to use the argument after ， passing it to vhost_net_ubuf_put_and_wait, this results in use after ， free. ， Upstream fix: ， Introduced by: ， Introduced in upstream version: ， v3.8-rc1 ， Petr Matousek / Red Hat Security Response Team ， diff -git a/drivers/vhost/net.c b/drivers/vhost/net.c ， index f80d3dd.8ca5ac7 100644 ， - a/drivers/vhost/net.c ， + b/drivers/vhost/net.c ， -150,6 +150,11 static void vhost_net_ubuf_put_and_wait(struct vhost_net_ubuf_ref *ubufs) ， { ， kref_put(&ubufs->kref, vhost_net_zerocopy_done_signal); ， wait_event(ubufs->wait, !atomic_read(&ubufs->kref.refcount); ， +} ， + ， +static void vhost_net_ubuf_put_wait_and_free(struct vhost_net_ubuf_ref *ubufs) ， +{ ， + vhost_net_ubuf_put_and_wait(ubufs); ， kfree(ubufs); ， } ， -948,7 +953,7 static long vhost_net_set_backend(struct vhost_net *n, unsigned index, int fd) ， mutex_unlock(&vq->mutex); ， - vhost_net_ubuf_put_and_wait(oldubufs); ， + vhost_net_ubuf_put_wait_and_free(oldubufs); ， mutex_lock(&vq->mutex); ， vhost_zerocopy_signal_used(n, vq); ， mutex_unlock(&vq->mutex); ， -966,7 +971,7 err_used: ， rcu_assign_pointer(vq->private_data, oldsock); ， vhost_net_enable_vq(n, vq); ， - vhost_net_ubuf_put_and_wait(ubufs); ， + vhost_net_ubuf_put_wait_and_free(ubufs); ， err_ubufs: ， fput(sock->file); ， err_vq:"
}