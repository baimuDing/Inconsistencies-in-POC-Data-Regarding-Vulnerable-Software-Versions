{
    "text": "vul_name : fts_ *  (  )  : multiple vendors , Denial-of-service ， vul_cve : CVE-2009-0537 ， vul_poc :  [ fts_ *  (  )  : multiple vendors , Denial-of-service ]  ， Author : Maksymilian Arciemowicz ， Date :  ， - - Dis. : 21.10.2008 ， - - Pub. : 04.03.2009 ， CVE : CVE-2009-0537 ， We are going informing all vendors , about this problem. ， Affected Software ( official )  :  ， - - OpenBSD 4.4 ， /usr/src/lib/libc/gen/fts.c ， - - Microsoft Interix ， 6.0 10.0.6030.0 x86 ， - - Microsft Vista Enterprise ， SearchIndexer.exe ， probably more. ， - - 0.Description - ， The fts functions are provided for traversing UNIX file hierarchies. ， The fts_open (  ) function returns a \"handle\" on a file hierarchy , which is then supplied to the other fts functions. ， The function fts_read (  ) returns a pointer to a structure describing one of the files in the file hierarchy. ， The function fts_children (  ) returns a pointer to a linked list of structures , each of which describes one of the files contained in a directory within the hierarchy. ， typedef struct _ftsent { ， unsigned short fts_info ; / * flags for FTSENT structure * / ， char * fts_accpath ; / * access path * / ， char * fts_path ; / * root path * / ， size_t fts_pathlen ; / * strlen ( fts_path )  * / ， char * fts_name ; / * file name * / ， size_t fts_namelen ; / * strlen ( fts_name )  * / ， short fts_level ; / * depth ( -1 to N )  * / ， int fts_errno ; / * file errno * / ， long fts_number ; / * local numeric value * / ， void * fts_pointer ; / * local address value * / ， struct _ftsent * fts_parent ; / * parent directory * / ， struct _ftsent * fts_link ; / * next file structure * / ， struct _ftsent * fts_cycle ; / * cycle structure * / ， struct stat * fts_statp ; / * stat ( 2 ) information * / ， } FTSENT ;  ， - - 1. libc : fts_ *  (  )  : multiple vendors , Denial-of-service - ， The main problem exist in fts_level from ftsent structure. Type of fts_level is short. ， let's see /usr/src/lib/libc/gen/fts.c ( OpenBSD )  ， - -line-616-625- ，  * Figure out the max file name length that can be stored in the ，  * current path - the inner loop allocates more path as necessary. ，  * We really wouldn't have to do the maxlen calculations here , we ，  * could do them in fts_read before returning the path , but it's a ，  * lot easier here since the length is part of the dirent structure. ，  * If not changing directories set a pointer so that can just append ，  * each new name into the path. ， - -line-616-625- ， \"We really wouldn't have to do the maxlen calculations here.\" ， Here should be some level or pathlen monitor. Should. ， short fts_level ; / * depth ( -1 to N )  * / ， fts_level is short type , no aleph zero ， - -line-247-249-",
    "time": "2009.03.04"
}