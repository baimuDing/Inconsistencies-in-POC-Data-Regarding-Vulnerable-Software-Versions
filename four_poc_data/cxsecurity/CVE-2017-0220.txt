{
    "text": "vul_name : Windows 7 Pool-Based Out-of-Bounds Reads Due to bind (  )  ( afd.sys and tcpip.sys )  ， vul_cve : CVE-2017-0175 , CVE-2017-0220 ， vul_poc : We have identified two related bugs in Windows kernel code responsible for implementing the bind (  ) socket function , specifically in the afd ! AfdBind and tcpip ! TcpBindEndpoint routines. They both can lead to reading beyond the allocated pool-based buffer memory area , potentially allowing user-mode applications to disclose kernel-mode secrets. They can also be exploited to trigger a blue screen of death and therefore a Denial of Service condition. ， The details are explained below. ， - [ Double-fetch in afd ! AfdBind ] - ， In the code of the afd ! AfdBind function of the up-to-date afd.sys module ( handler of the AFD_BIND IOCTL accessible from ring-3 ) on Windows 7 32-bit , we can find the following assembly code construct :  ， - cut - ， PAGE : 00024D71 push 0EC646641h ; Tag ， PAGE : 00024D76 push [ ebp+NumberOfBytes ]  ; NumberOfBytes ， PAGE : 00024D79 push 10h ; PoolType ， PAGE : 00024D7B call ds : _imp_ExAllocatePoolWithQuotaTag @ 12 ，  [ . ]  ， PAGE : 00024DD2 lea edi ,  [ eax+4 ]  ， PAGE : 00024DD5 push edi ; void *  ， PAGE : 00024DD6 push [ ebp+P ]  ; void *  ， PAGE : 00024DD9 call ds : _imp_memmove <- Fetch # 1 ， PAGE : 00024DDF add esp , 0Ch ， PAGE : 00024DE2 movzx eax , word ptr [ edi ] <- Fetch # 2 ， PAGE : 00024DE5 cmp ax , 22h ， PAGE : 00024DE9 jb short loc_24E01 ，  [ . ]  ， PAGE : 00024E01 ， PAGE : 00024E01 loc_24E01 :  ， PAGE : 00024E01 push eax ， PAGE : 00024E02 call _SOCKADDR_SIZE @ 4 ; SOCKADDR_SIZE ( x )  ， PAGE : 00024E07 movzx eax , al ， PAGE : 00024E0A cmp [ ebp+NumberOfBytes ]  , eax ， PAGE : 00024E0D jnb short loc_24E25 ， - cut -",
    "time": "2017.05.16"
}