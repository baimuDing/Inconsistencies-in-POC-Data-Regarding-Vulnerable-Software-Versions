{
    "text": "vul_name : Linux Kernel SCTP-AUTH API Information Disclosure Vulnerability and NULL Pointer Dereferences ， vul_cve : CVE-2008-4113 ， vul_poc : Please find attached a detailed advisory of the vulnerabilities. ， Alternatively , the advisory can also be found at :  ， -BEGIN PGP SIGNED MESSAGE- ， Hash : SHA1 ， Advisory : Linux Kernel SCTP-AUTH API Information Disclosure ， Vulnerability and NULL Pointer Dereferences ， Advisory ID : TKADV2008-007 ， Revision : 1.1 ， Release Date : 2008/09/09 ， Last Modified : 2008/09/10 ， Date Reported : 2008/08/20 ， Author : Tobias Klein ( tk at trapkit.de )  ， Affected Software : Linux Kernel <= 2.6.26.4 ， Remotely Exploitable : No ， Locally Exploitable : Yes ， Vendor URL :  ， Vendor Status : Vendor has released a fixed version ， CVE-ID : CVE-2008-3792 ， Patch development time : 1 day ， Vulnerability details :  ， The Linux Kernel contains an information disclosure vulnerability while ， parsing the IOCTL SCTP_HMAC_IDENT. Exploitation of this vulnerability can ， allow a local unprivileged attacker to gain access to sensitive data. ， Additionally , there are various NULL pointer dereferences in the SCTP-AUTH ， API. All of the SCTP-AUTH socket options could cause a kernel panic if the ， extension is disabled and the API is envoked. Exploitation of these ， vulnerabilities can allow an unprivileged attacker to crash the system ，  ( Denial of Service ) . ， Technical description :  ， - From source code file : net/sctp/socket.c ，  [ . ]  ， SCTP_STATIC int sctp_getsockopt ( struct sock * sk , int level , int optname ,  ， char _user * optval , int _user * optlen )  ， { ， int retval = 0 ;  ， int len ;  ，  [ . ]  ，  [ . ]  ， case SCTP_HMAC_IDENT :  ， retval = sctp_getsockopt_hmac_ident ( sk , len , optval , optlen )  ; <- [ 2 ]  ，  [ . ]  ，  [ 1 ] The user controlled value of \"optlen\" is copied into \"len\" ，  [ 2 ] \"len\" is used as a parameter for the function ， \"sctp_getsockopt_hmac_ident (  ) \" ， {. ]  ， static int sctp_getsockopt_hmac_ident ( struct sock * sk , int len ,  ， char _user * optval , int _user * optlen )  ， { ， struct sctp_hmac_algo_param * hmacs ;  ， _u16 param_len ;  ， hmacs = sctp_sk ( sk ) ->ep->auth_hmacs_list ; <- [ 3 ]  ， param_len = ntohs ( hmacs->param_hdr.length )  ; <- [ 4 ]  ， } ，  [ . ]  ， If SCTP authentication is disabled ( net.sctp.auth_enable=0 )  :  ，  [ 3 ] \"hmacs\" gets NULL ，  [ 4 ] \"hmacs->param_hdr.length\" leads to a NULL pointer dereference ， That's one example of the mentioned NULL pointer dereferences in the ， SCTP-AUTH API. For more examples see [ 1 ] . ， If SCTP authentication is enabled ( net.sctp.auth_enable=1 )  :  ，  [ 3 ] \"hmacs\" gets a valid value ，  [ 4 ] \"param_len\" gets a valid value ，  [ 5 ] The length check can be easily passed as \"len\" is user controlled ，  [ 6 ] \"len\" is a user controlled value , therefore it is possible to control ， the number of bytes that get copied back to the user ， As \"len\" isn't validated at all an unprivileged user can read arbitrary ， data from memory.",
    "time": "2008.09.18"
}