{
    "text": "published_time: 2015-08-21 ， id: 32488 ， eid: 37915 ， cve: CVE-2015-2463 ， title: Microsoft Windows - 'win32k.sys' TTF Font Processing win32k!fsc_RemoveDups Out-of-Bounds Pool Memory Access - Windows dos Exploit ， author: Google Security Research ， published_time: 2015-08-21 ， verified: Verified ， platform: Windows ， exploit_type: dos ， exploit_url: /download/37915 ， exploit_detail: Source: \r ， We have encountered a Windows kernel crash in the win32k!fsc_RemoveDups function while processing corrupted TTF font files, such as:\r ， PAGE_FAULT_IN_NONPAGED_AREA (50)\r ， Invalid system memory was referenced.  This cannot be protected by try-except,\r ， it must be protected by a Probe.  Typically the address is just plain bad or it\r ， is pointing at freed memory.\r ， Arguments:\r ， Arg1: ff6e7000, memory referenced.\r ， Arg2: 00000000, value 0 = read operation, 1 = write operation.\r ， Arg3: 91e809df, If non-zero, the instruction address which referenced the bad memory\r ， \taddress.\r ， Arg4: 00000000, (reserved)\r ， Debugging Details:\r ， Could not read faulting driver name\r ， READ_ADDRESS: GetPointerFromAddress: unable to read from 8277c84c\r ， Unable to read MiSystemVaType memory at 8275bf00\r ，  ff6e7000 \r ， FAULTING_IP: \r ， win32k!fsc_RemoveDups+85\r ， 91e809df 3918            cmp     dword ptr [eax],ebx\r ， MM_INTERNAL_CODE:  0\r ， DEFAULT_BUCKET_ID:  VISTA_DRIVER_FAULT\r ， BUGCHECK_STR:  0x50\r ， PROCESS_NAME:  csrss.exe\r ， CURRENT_IRQL:  0\r ， LAST_CONTROL_TRANSFER:  from 91e8015c to 91e809df\r ， STACK_TEXT:  \r ， 969e3624 91e8015c 969e3858 fbff0e78 0000002b win32k!fsc_RemoveDups+0x85\r ， 969e36cc 91e89979 ff6de010 ff6de07c 00000001 win32k!fs_FindBitMapSize+0x2de\r ， 969e36e8 91e89b59 fbff0e78 0000002b 00000001 win32k!bGetGlyphMetrics+0x39\r ， 969e382c 91e7ec63 fbff0e78 0000002b 969e3918 win32k!lGetGlyphBitmap+0x2b\r ， 969e3850 91e7eab6 00000000 00000001 0000002b win32k!ttfdQueryFontData+0x158\r ， 969e38a0 91e7dce2 ff7af010 fbe0ccf0 00000001 win32k!ttfdSemQueryFontData+0x45\r ， 969e38e8 91e83774 ff7af010 fbe0ccf0 00000001 win32k!PDEVOBJ::QueryFontData+0x3e\r ， 969e3960 91efbc8d 969e3c3c fbe2cc94 ff713154 win32k!xInsertMetricsPlusRFONTOBJ+0x120\r ， 969e3990 91e7594d 0000000a ff7bf000 969e3cd0 win32k!RFONTOBJ::bGetGlyphMetricsPlus+0x179\r ， 969e39c8 91efb78b 969e3c1c 969e3c3c 00000008 win32k!ESTROBJ::vCharPos_H3+0xf0\r ， 969e3a0c 91e755d0 969e3cd0 0000000a 969e3c1c win32k!ESTROBJ::vInit+0x268\r ， 969e3c2c 91e75793 00000000 969e3cd0 fbe0ccf0 win32k!GreGetTextExtentExW+0x12a\r ， 969e3d0c 8264f896 0701015e 02bb0bac 0000000a win32k!NtGdiGetTextExtentExW+0x141\r ， 969e3d0c 779670f4 0701015e 02bb0bac 0000000a nt!KiSystemServicePostCall\r ， WARNING: Frame IP not in any known module. Following frames may be wrong.\r ， 0015f434 00000000 00000000 00000000 00000000 0x779670f4\r ， While we have not determined the specific root cause of the vulnerability, we have pinpointed the offending mutations to reside in the \"glyf\" table.\r ， The issue reproduces on Windows 7 and 8.1. It is easiest to"
}