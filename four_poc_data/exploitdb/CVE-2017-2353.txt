{
    "text": "ecve : CVE-2017-2353 ， title : Apple macOS 10.12.1 / iOS Kernel - 'IOService :  : matchPassive' Use-After-Free - Multiple dos Exploit ， verified : Verified ， exploit_detail : / *  ， Source :  ， IOService :  : matchPassive is called when trying to match a request dictionary against a candidate IOService. ， We can call this function on a controlled IOService with a controlled matching table OSDictionary via the ， io_service_match_property_table_ * kernel MIG APIs wrapped by IOServiceMatchPropertyTable. ， If a candidate IOService does match against the dictionary but the dictionary also specifies an ， \"IOParentMatch\" key then we reach the following code ( in IOService.cpp :  )  ， OSNumber * alternateRegistryID = OSDynamicCast ( OSNumber , where->getProperty ( kIOServiceLegacyMatchingRegistryIDKey )  )  ;  ， aliasServiceRegIds = OSArray :  : withCapacity ( sizeof ( alternateRegistryID )  )  ;  ， aliasServiceRegIds->setObject ( alternateRegistryID )  ;  ，  ( \"where\" is the controlled IOService. )  ， getProperty is an IORegistryEntry API which directly calls the getObject method ， of the OSDictionary holding the entry's properties. getProperty , unlike copyProperty , doesn't take a reference on ， the value of the property which means that there is a short window between ， where->getProperty ( kIOServiceLegacyMatchingRegistryIDKey )  ， and ， aliasServiceRegIds->setObject ( alternateRegistryID )  ， when if another thread sets a new value for the IOService's \"IOServiceLegacyMatchingRegistryID\" registry property ， the alternateRegistryID OSNumber can be freed. This race condition can be won quite easily and can lead to a virtual call ， being performed on a free'd object. ， On MacOS IOBluetoothHCIController is one of a number of IOServices which allow an unprivileged user to set the ， IOServiceLegacyMatchingRegistryID property. ， One approach to fixing this bug would be to call copyProperty instead and drop the ref on the property after adding it ， to the aliasServiceRegIds array.",
    "time": "2017-01-26"
}