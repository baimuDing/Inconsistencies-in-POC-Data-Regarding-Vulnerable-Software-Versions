{
    "text": "ecve : CVE-2016-7098 ， title : GNU Wget < 1.18 - Access List Bypass / Race Condition - Multiple remote Exploit ， verified : Verified ， exploit_detail : ''' ， - Discovered by : Dawid Golunski ， - dawid [ at ] legalhackers.com ， - CVE-2016-7098 ， - Release date : 24.11.2016 ， - Revision 1.0 ， - Severity : Medium ， I. VULNERABILITY ， GNU Wget < 1.18 Access List Bypass / Race Condition ， II. BACKGROUND ， \"GNU Wget is a free software package for retrieving files using HTTP , HTTPS and ， FTP , the most widely-used Internet protocols. ， It is a non-interactive commandline tool , so it may easily be called from ， scripts , cron jobs , terminals without X-Windows support , etc. ， GNU Wget has many features to make retrieving large files or mirroring entire ， web or FTP sites easy ， III. INTRODUCTION ， GNU wget in version 1.17 and earlier , when used in mirroring/recursive mode ,  ， is affected by a Race Condition vulnerability that might allow remote attackers ， to bypass intended wget access list restrictions specified with -A parameter. ， This might allow attackers to place malicious/restricted files onto the system. ， Depending on the application / download directory , this could potentially lead ， to other vulnerabilities such as code execution etc. ， IV. DESCRIPTION ， When wget is used in recursive/mirroring mode , according to the manual it can ， take the following access list options :  ， \"Recursive Accept/Reject Options :  ， -A acclist -accept acclist ， -R rejlist -reject rejlist ， Specify comma-separated lists of file name suffixes or patterns to accept or ， reject. Note that if any of the wildcard characters ,  *  , ? ,  [ or ]  , appear in ， an element of acclist or rejlist , it will be treated as a pattern , rather ， than a suffix.\" ， These can for example be used to only download JPG images. ， It was however discovered that when a single file is requested with recursive ， option ( -r / -m ) and an access list ( -A )  , wget only applies the checks at the ， end of the download process. ， This can be observed in the output below :  ，  # wget -r -nH -A ' * .jpg' ， Resolving attackersvr... 192.168.57.1 ， Connecting to attackersvr | 192.168.57.1 |  : 80... connected. ， HTTP request sent , awaiting response... 200 OK ， Length : unspecified [ text/plain ]  ， Saving to : test.php ， 15 : 05 : 46 ( 27.3 B/s ) - test.php saved [ 52 ]  ， Removing test.php since it should be rejected. ， FINISHED ， Although wget deletes the file at the end of the download process , this creates ， a race condition as an attacker with control over the URL/remote server could ， intentionally slow down the download process so that they had a chance to make ， use of the malicious file before it gets deleted. ， It is very easy to win the race as the file only gets deleted after the HTTP ， connection is terminated. The attacker could therefore keep the connection open ， as long as it was necessary to make use of the uploaded file as demonstrated ， in the proof of concept below. ， V. PROOF OF CONCEPT EXPLOIT ， Here is a simple vulnerable PHP web application that uses wget to download ， images from a user-provided server/URL :  ， --- [ image_importer.php ] --- ， <?php ， // Vulnerable webapp [ image_importer.php ]  ， // Uses wget to",
    "time": "2016-11-24"
}