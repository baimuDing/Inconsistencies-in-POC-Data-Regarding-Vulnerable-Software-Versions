{
    "text": "ecve : CVE-1999-0811 ， title : Samba < 2.0.5 - Local Overflow - Linux local Exploit ， verified : Verified ， exploit_detail : / *  ， source :  ， There were a number of vulnerabilities in the Samba package pre-2.0.5. The first is a possible denial of service in nmbd ( the netbios name service daemon )  , which resulted in nmbd spinning until killed. The second vulnerability known is a possible buffer overflow problem in smbd which is not exploit in the default install/configuration. A function in the messaging system could be exploited and arbitrary code executed as root if the \"message command\" was set in smb.conf. There was also a race condition vulnerability which could possible allow an attacker to mount arbitrary points in the filesystem if smbmnt was setuid root ( which it is not by default ) . ，  * / ， / *  ， The default parameters to the program ， often work , however I have found that the offset parameter sometimes ， varies wildly , values between -600 and -100 usually work though , a quick ， shell script will scan through these. ，  * / ， / *  ， smbexpl -- a smbmount root exploit under Linux ， Author : Gerald Britton <gbritton @ nih.gov> ， This code exploits a buffer overflow in smbmount from smbfs-2.0.1. ， The code does not do range checking when copying a username from ， the environment variables USER or LOGNAME. To get this far into ， the code we need to execute with dummy arguments of a server and a ， mountpoint to use ( ./a in this case ) . The user will need to create ， the ./a directory and then execute smbexpl to gain root. This code ， is also setup to use /tmp/sh as the shell as bash-2.01 appears to ， do a seteuid ( getuid (  )  ) so /bin/sh on my system won't work. Finally ， a \"-Q\" ( an invalid commandline argument ) causes smbmount to fail when ， parsing args and terminate , thus jumping into our shellcode. ， The shellcode used in this program also needed to be specialized as ， smbmount toupper (  ) 's the contents of the USER variable. Self modifying ， code was needed to ensure that the shellcode will survive toupper (  ) . ， The quick fix for the security problem :  ， chmod -s /sbin/smbmount ， A better fix would be to patch smbmount to do bounds checking when ， copying the contents of the USER and LOGNAME variables. ，  * /",
    "time": "1999-07-21"
}