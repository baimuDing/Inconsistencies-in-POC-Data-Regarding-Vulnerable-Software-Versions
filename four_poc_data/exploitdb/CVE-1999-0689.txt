{
    "text": "ecve : CVE-1999-0689 ， title : Common Desktop Environment 2.1 20 / Solaris 7.0 - 'dtspcd' Local Privilege Escalation - Multiple local Exploit ， verified : Verified ， exploit_detail :  #  ! /bin/sh ，  # source :  ，  # This explanation is quoted from the initial post on this problem by Job De Hass. This message is available in its entirety in the 'Credit' section of this vulnerability entry. ，  # The CDE subprocess daemon /usr/dt/bin/dtspcd contains an insufficient check on client credentials. The CDE subprocess daemon allows cross-platform invocation of applications. In order to authenticate the remote user , the daemon generates a filename which is to be created by the client and then is verified by the daemon. When verifying the created file , the daemon uses stat (  ) instead of lstat (  ) and is subsequently vulnerable to a symlink attack. Further more the daemon seems to allow empty usernames and then reverts to a publicly write-able directory ( /var/dt/tmp ) . ，  #  ! /bin/sh ，  # dtspaced ，  # Demonstration of local root hole with dtspcd. ，  # Job de Haas ，  #  ( c ) 1999 ITSX bv ，  # Mechanism is as follows :  ，  # - dtaction requests the action 'Execute' through dtspcd. ，  # - dtscpd request a filename to be created which it will check for ，  # owner/suid bit. ，  # - BUG1 : dtspcd allows creation in a public directory ( with empty ，  # username ) . ，  # - BUG2 : and forgets to check if the file is a symlink. ，  # - dtaction will create a symlink to a suid root binary and reply. ，  # - dtspcd considers dtaction authenticated and executes requested file ，  # as root. ，  # suggested fix : use lstat or refuse a symlink and why allow an empty ，  # username? ，  # exploit uses a shared lib to replace some functions to do what we want. ，  # Note that these are not used by dtspcd but by dtaction. The script executed ，  # by dtaction as root creates a file /tmp/root_was_here. ，  # tested on Solaris 2.5.1 , 2.6 and 7",
    "time": "1999-09-13"
}