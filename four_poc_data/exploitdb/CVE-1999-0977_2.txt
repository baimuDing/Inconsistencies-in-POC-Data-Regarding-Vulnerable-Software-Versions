{
    "text": "ecve : CVE-1999-0977 ， title : Solaris 2.5/2.5.1/2.6/7.0 - 'sadmind' Remote Buffer Overflow ( 1 ) - Solaris remote Exploit ， verified : Verified ， exploit_detail : // source :  ， Certain versions of Solaris ship with a version of sadmind which is vulnerable to a remotely exploitable buffer overflow attack. sadmind is the daemon used by Solstice AdminSuite applications to perform distributed system administration operations such as adding users. The sadmind daemon is started automatically by the inetd daemon whenever a request to invoke an operation is received. ， Under vulnerable versions of sadmind ( 2.6 and 7.0 have been tested )  , if a long buffer is passed to a NETMGT_PROC_SERVICE request ( called via clnt_call (  )  )  , it is possible to overwrite the stack pointer and execute arbitrary code. The actual buffer in questions appears to hold the client's domain name. The overflow in sadmind takes place in the get_auth (  ) function , part of the /usr/snadm/lib/libmagt.so.2 library. Because sadmind runs as root any code launched as a result will run as with root privileges , therefore resulting in a root compromise. ， sadmindex - SPARC Solaris remote root exploit for /usr/sbin/sadmind ， Tested and confirmed under Solaris 2.6 and 7.0 ( SPARC )  ， Usage : % sadmindex -h hostname -c command -s sp [ -o offset ] \\ ，  [ -a alignment ]  [ -p ]  ， where hostname is the hostname of the machine running the vulnerable ， system administration daemon , command is the command to run as root ， on the vulnerable machine , sp is the %sp stack pointer value , offset ， is the number of bytes to add to sp to calculate the desired return ， address , and alignment is the number of bytes needed to correctly ， align the contents of the exploit buffer. ， If run with a -p option , the exploit will only \"ping\" sadmind on the ， remote machine to start it running. The daemon will be otherwise ， untouched. Since pinging the daemon does not require an exploit ， buffer to be constructed , you can safely omit the -c and -s options ， When specifying a command , be sure to pass it to the exploit as a ， single argument , namely enclose the command string in quotes if it ， contains spaces or other special shell delimiter characters. The ， exploit will pass this string without modification to /bin/sh -c on ， the remote machine , so any normally allowed Bourne shell syntax is ， also allowed in the command string. The command string and the ， assembly code to run it must fit inside a buffer of 512 bytes , so ， the command string has a maximum length of about 380 bytes or so. ， Due to the nature of the target overflow in sadmind , the exploit is ， extremely sensitive to the %sp stack pointer value that is provided ， when the exploit is run. The %sp stack pointer must be specified ， with the exact required value , leaving no room for error. I have ， provided confirmed values for Solaris running on a Sun SPARCengine ， Ultra AXi machine running Solaris 2.6 5/98 and on a SPARCstation 1 ， running Solaris 7.0 10/98. On each system , sadmind was started from ， an instance of inetd that was started at boot time by init. There ， is a strong possibility that the demonstration values will not work ， due to differing sets of environment variables , for example if the ， the running inetd on the remote machine was started manually from an ， interactive shell. If you find that the sample value for %sp does ， not work , try adjusting the value by -2048 to 2048 from the sample in ， increments of 8 for starters. The offset parameter and the alignment ， parameter have default values that will be used if no overriding ， values are specified on the command line. The default values should ， be suitable and it will not likely be necessary to override them. ， Demonstration values for SPARC Solaris :  ，  ( 2.6 ) sadmindex -h host.example.com -c \"touch HEH\" -s 0xefff9580 ，  ( 7.0 ) sadmindex -h host.example.com -c \"touch HEH\" -s 0xefff9418 ， THIS CODE FOR EDUCATIONAL USE ONLY IN AN ETHICAL MANNER ， Cheez Whiz ， cheezbeast @ hotmail.com ， June 24 , 1999",
    "time": "1999-06-24"
}