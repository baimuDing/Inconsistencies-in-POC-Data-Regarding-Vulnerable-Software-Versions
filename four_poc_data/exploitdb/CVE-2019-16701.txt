{
    "text": "ecve : CVE-2019-16701 ， title : Pfsense 2.3.4 / 2.4.4-p3 - Remote Code Injection - PHP webapps Exploit ， verified : Not Verified ， exploit_detail :  # Exploit Title : Pfsense 2.3.4 / 2.4.4-p3 - Remote Code Injection ，  # Date : 23/09/2018 ，  # Author : Nassim Asrir ，  # Vendor Homepage :  ，  # Contact : wassline @ gmail.com |  ，  # CVE : CVE-2019-16701 ，  # Tested On : Windows 10 ( 64bit )  | Pfsense 2.3.4 / 2.4.4-p3 ， 1 : About Pfsense :  ， pfSense is a free and open source firewall and router that also features unified threat management , load balancing , multi WAN , and more. ， 2 : Technical Analysis :  ， The pfsense allow users ( uid=0 ) to make remote procedure calls over HTTP ( XMLRPC ) and the XMLRPC contain some critical methods which allow any authenticated user/hacker to execute OS commands. ， XMLRPC methods :  ， pfsense.exec_shell ， pfsense.exec_php ， pfsense.filter_configure ， pfsense.interfaces_carp_configure ， pfsense.backup_config_section ， pfsense.restore_config_section ， pfsense.merge_config_section ， pfsense.merge_installedpackages_section_xmlrpc ， pfsense.host_firmware_version ， pfsense.reboot ， pfsense.get_notices ， system.listMethods ， system.methodHelp ， system.methodSignature ， As we see in the output we have two interesting methods : pfsense.exec_shell and pfsense.exec_php. ， 2 : Static Analysis :  ， In the static analysis we will analysis the xmlrpc.php file. ， Line ( 73 - 82 )  ， This code check if the user have enough privileges. ，  $ user_entry = getUserEntry (  $ username )  ;  ， / *  ，  * admin ( uid = 0 ) is allowed ，  * or regular user with necessary privilege ，  * / ，  ! userHasPrivilege (  $ user_entry , 'system-xmlrpc-ha-sync' )  ) { ， log_auth ( \"webConfigurator authentication error for '\" . ，  $ username . \"' from \" . $ this->remote_addr . ， \" not enough privileges\" )  ;  ， Line ( 137 - 146 )  ， This part of code is the interest for us. ， As we can see , first we have a check for auth then we have the dangerous function ( eval ) which take as parametere (  $ code ) . ， public function exec_php (  $ code ) { ，  $ this->auth (  )  ;  ， eval (  $ code )  ;  ， Line ( 155 - 160 )  ， In this part of code also we have a check for auth then the execution for (  $ code )  ， public function exec_shell (  $ code ) { ，  $ this->auth (  )  ;  ， mwexec (  $ code )  ;  ， 3 -",
    "time": "2019-09-24"
}