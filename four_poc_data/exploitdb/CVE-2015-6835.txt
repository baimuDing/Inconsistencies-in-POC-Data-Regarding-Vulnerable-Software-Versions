{
    "text": "ecve : CVE-2015-6835 ， title : PHP Session Deserializer - Use-After-Free - PHP dos Exploit ， verified : Verified ， exploit_detail : Use After Free Vulnerabilities in Session Deserializer ， Taoguang Chen < [  @ chtg ]  (  ， Write Date : 2015.8.9 ， Release Date : 2015.9.4 ， Multiple use-after-free vulnerabilities were discovered in session deserializer ( php/php_binary/php_serialize ) that can be abused for leaking arbitrary memory blocks or execute arbitrary code remotely. ， Affected Versions ， Affected is PHP 5.6 < 5.6.13 ， Affected is PHP 5.5 < 5.5.29 ， Affected is PHP 5.4 < 5.4.45 ， Credits ， This vulnerability was disclosed by Taoguang Chen. ， Description ， PS_SERIALIZER_DECODE_FUNC ( php ) / * {{{ * / ， PHP_VAR_UNSERIALIZE_INIT ( var_hash )  ;  ， p = val ;  ， ALLOC_INIT_ZVAL ( current )  ;  ，  ( const unsigned char *  ) endptr , &var_hash TSRMLS_CC )  ) { ， php_set_session_var ( name , namelen , current , &var_hash TSRMLS_CC )  ;  ， zval_ptr_dtor ( &current )  ;  ， PS_ADD_VARL ( name , namelen )  ;  ， skip :  ， efree ( name )  ;  ， p = q ;  ， break_outer_loop :  ， PHP_VAR_UNSERIALIZE_DESTROY ( var_hash )  ;  ， When session deserializer ( php/php_binary ) deserializing multiple data ， it will call to php_var_unserialize (  ) multiple times. So we can create ， ZVAL and free it via the php_var_unserialize (  ) with a crafted ， serialized string , and also free the memory ( reduce the reference ， count of the ZVAL to zero ) via zval_ptr_dtor (  ) with deserialize two ， identical session data , then the next call to php_var_unserialize (  )  ， will still allow to use R : or r : to set references to that already ， freed memory. It is possible to use-after-free attack and execute ， arbitrary code remotely. ， In some other cases , session deserializer ，  ( php/php_binary/php_serialize ) may also lead to use-after-free ， vulnerabilities : i ) via crafted Serializable :  : unserialize (  ) ii ) via ， unserialize (  ) 's callback function and zend_lookup_",
    "time": "2015-09-09"
}