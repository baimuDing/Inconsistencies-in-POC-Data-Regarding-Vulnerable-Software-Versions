{
    "text": "ecve : CVE-2012-3186 CVE-2012-3185 CVE-2012-3184 CVE-2012-3183 ， title : Oracle WebCenter Sites ( FatWire Content Server ) - Multiple Vulnerabilities - Multiple webapps Exploit ， verified : Not Verified ， exploit_detail : SEC Consult Vulnerability Lab Security Advisory < 20121017-2 > ， title : Multiple vulnerabilities in Oracle WebCenter Sites ， product : Oracle WebCenter Sites ( former FatWire Content Server )  ， vulnerable version : 6.1 , 6.2 , 6.3.x , 7 , 7.0.1 , 7.0.2 , 7.0.3 , 7.5 , 7.6.1 ,  ， 7.6.2 , 11.1.1.6.0 ， fixed version : Patch information see sections below ， CVE : CVE-2012-3183 ( S0183794 )  ， CVE-2012-3184 ( S0183815 )  ， CVE-2012-3185 ( S0183827 )  ， CVE-2012-3186 ( S0183836 )  ， impact : High ， homepage :  ， found : 21.05.2012 ， by : F. Lukavsky ， SEC Consult Vulnerability Lab ， Vendor description :  ， FatWire Content Server is a predecessor product of Oracle WebCenter Sites. ， FatWire Content Server is a software suite that allows you to create and ， manage content to be published on your online site. The content is stored in ， Content Server's database. You create and manipulate the content using Content ， Server's interface , which provides a simple and intuitive way of accessing and ， working with the CS database. ， FatWire Content Server 7 - Advanced Interface User's Guide ， Vulnerability overview/description :  ， 1 ) Authorization Issues ， The backend of the Content Server fails to validate authorization for ， certain requests. This allows low privileged users manipulating data ,  ， which they are not authorized to. ， 2 ) Cross-Site Scripting ， The backend of the Content Server is prone to permanent and reflected ， Cross-Site Scripting attacks. The vulnerability can be used to include ， HTML- or JavaScript code to the affected web page. The code is executed ， in the browser of users if they visit the manipulated site. The ， vulnerability can be used to change the contents of the displayed site ,  ， redirect to other sites or steal user credentials. Additionally , Portal ， users are potential victims of browser exploits and JavaScript Trojans. ， 3 ) Cross-Site Request Forgery ， An attacker can use Cross-Site Request Forgery to perform arbitrary web ， requests with the identity of the victim without being noticed by the ， victim. Although responses to these requests are not delivered to the ， attacker , in many cases it is sufficient to be able to compromise the ， integrity of the victim's information stored on the site or to perform ， certain , possibly compromising requests to other sites. ， 4 ) SQL Injection ， Due to insufficient input validation , the backend of FatWire Content ， Server allows the injection of direct SQL commands. By exploiting the ， vulnerability , an attacker gains access to all records stored in the ， database with the privileges of database user CSAUTHORING. ， Proof of concept :  ， 1 ) In the user profile , users are given the possibility to change their email ， address. By supplying arbitrary user names , a low privileged user can ， change the email address of other users :  ， POST /cs/ContentServer HTTP/1.1 ， _charset_=UTF-8&cs_environment=standard&cs_formmode=WCM&username=<username ， of the target user>&email=<new email ， address>&selectedLocale=None&userid=userid%3D<own user ， id>%2Cou%3DPeople&manageprofile=true&password=&password2=&pagename=OpenMarket%2FXcelerate%2FAdmin%2FUserProfilePost&action=edit ， 2 ) The display name of page elements are included unsanitized when viewing ， the element's details. Creating a new image with the following manipulated ， parameter demonstrates this issue :  ， -6083206021221 ， Content-Disposition : form-data ; name=\"flexassets : name\" ， xxx.jsp</script>",
    "time": "2012-10-17"
}