{
    "text": "ecve : CVE-2019-0571 ， title : Microsoft Windows 10 - DSSVC CanonicalAndValidateFilePath Security Feature Bypass - Windows local Exploit ， verified : Verified ， exploit_detail : Windows : DSSVC CanonicalAndValidateFilePath Security Feature Bypass ， Platform : Windows 10 1803 and 1809. ， Class : Security Feature Bypass/Elevation of Privilege ， Security Boundary ( per Windows Security Service Criteria )  : User boundary ， NOTE : This is one of multiple issues Im reporting in the same service. While Ive tried to ensure all the bugs are effectively orthogonal from each other its possible that fixes for one thing might affect others. Ive also not reported every possible problem with the service as at some point I had to stop. Ive not determined if any of these issues could be abusable from a sandbox , most of the issues almost certainly cant be due to the requirements for arbitrary file symlinks but its not impossible. ， Summary :  ， The Data Sharing Services check for the user passing UNC paths can be circumvented leading to a security feature bypass which can facilitate easier exploitation for privilege elevation. ， Description :  ， During DSSCreateSharedFileTokenEx the path is passed to DSUtils :  : CanonicalAndValidateFilePath to canonicalize the path. This method also verifies that the passed path isnt a UNC path ( for reasons unknown ) . The UNC path check can be bypassed by using the \\??\\UNC\\ form. When this is passed to PathAllocCanonicalize it returns it verbatim , however this path format isnt considered a UNC path by PathIsUNCEx. However when passed to CreateFile etc it will be considered as if it was an \\\\?\\UNC\\ path format. ， This could be useful for a few different attacks. For a start you could redirect the call to \\localhost\\pipe\\somepipe and get a named pipe handle bound to the SYSTEM user. Although Ive not worked out a way of getting the handle back ( as GetFinalPathFromHandle fails ) . Another attack vector is when going to an SMB share any directory junctions are resolved on the server , this would allow you to bypass any checks such as DSUtils :  : VerifyPathFromHandle as the returned path would be \\\\?\\UNC\\localhost\\c $ \\blah.. Regardless of the final destination path opened.",
    "time": "2019-01-14"
}