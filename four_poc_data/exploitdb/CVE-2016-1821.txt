{
    "text": "ecve : CVE-2016-1821 ， title : Apple Mac OSX Kernel - Null Pointer Dereference in IOAudioEngine - OSX dos Exploit ， verified : Verified ， exploit_detail : / *  ， Source :  ， IOAudioEngineUserClient :  : closeClient sets the audioEngine member pointer to NULL ， IOReturn IOAudioEngineUserClient :  : closeClient (  )  ， audioDebugIOLog ( 3 , \"+ IOAudioEngineUserClient [ %p ]  :  : closeClient (  ) \\n\" , this )  ;  ， stopClient (  )  ;  ， audioEngine->clientClosed ( this )  ;  ， audioEngine = NULL ;  ， External method 0 uses audioEngine without checking if it's NULL :  ， IOReturn IOAudioEngineUserClient :  : safeRegisterClientBuffer ( UInt32 audioStreamIndex , void * sourceBuffer , UInt32 bufSizeInBytes , UInt32 bufferSetID ) { ， audioDebugIOLog ( 3 , \"IOAudioEngineUserClient :  : safeRegisterClientBuffer deprecated for 32 bit %p \\n\" , sourceBuffer )  ;  ， IOAudioStream * audioStream ;  ， IOReturn result = kIOReturnBadArgument ;  ， audioDebugIOLog ( 3 , \"+ IOAudioEngineUserClient :  : safeRegisterClientBuffer32 %p \\n\" , sourceBuffer )  ;  ， audioStream = audioEngine->getStreamForID ( audioStreamIndex )  ;  ， Whilst that isn't a virtual method , getStreamForID does call a virtual function on a member :  ， IOAudioStream * IOAudioEngine :  : getStreamForID ( UInt32 streamID ) { ， IOAudioStream * stream = NULL ;  ， assert ( reserved )  ;  ， stream = OSDynamicCast ( IOAudioStream , reserved->streams->getObject ( streamID )  )  ;  ， getObject is a virtual function , and reserved will be read from the NULL page giving us easy RIP control. ， tested on OS X 10.11.4 ( 15E65 ) MacBookAir 5 , 2 ，  * / ， // ianbeer ， // clang -o ioaudio_race ioaudio_race.c -framework IOKit -m32 -lpthread -pagezero_size 0x0 ， / *  ， OS X exploitable kernel NULL pointer dereference in IOAudioEngine ， IOAudioEngineUserClient :  : closeClient sets the audioEngine member pointer to NULL ， IOReturn IOAudioEngineUserClient :  : closeClient (  )  ， audioDebugIOLog ( 3 , \"+ IOAudioEngineUserClient [ %p ]  :  : closeClient (  ) \\n\" , this )  ;  ， stopClient (  )  ;  ， audioEngine->clientClosed ( this )  ;  ， audioEngine = NULL ;  ， External method 0 uses audioEngine without checking if it's NULL :  ， IOReturn IOAudioEngineUserClient :  : safeRegisterClientBuffer ( UInt32 audioStreamIndex , void * sourceBuffer , UInt32 bufSizeInBytes , UInt32 bufferSetID ) { ， audioDebugIOLog ( 3 , \"IOAudioEngineUserClient :  : safeRegisterClientBuffer deprecated for 32 bit %p \\n\" , sourceBuffer )  ;  ， IOAudioStream * audioStream ;  ， IOReturn result = kIOReturnBadArgument ;  ， audioDebugIOLog ( 3 , \"+ IOAudioEngineUserClient :  : safeRegisterClientBuffer32 %p \\n\" , sourceBuffer )  ;  ， audioStream = audioEngine->getStreamForID ( audioStreamIndex )  ;  ， Whilst that isn't a virtual method , getStreamForID does call a virtual function on a member :  ， IOAudioStream * IOAudioEngine :  : getStreamForID ( UInt32 streamID ) { ， IOAudioStream * stream = NULL ;  ， assert ( reserved )  ;  ， stream = OSDynamicCast ( IOAudioStream , reserved->streams->getObject ( streamID )  )  ;  ， getObject is a virtual function , and reserved will be read from the NULL page giving us easy RIP control. ， tested on OS X 10.11.4 ( 15E65 ) MacBookAir 5 , 2 ，  * /",
    "time": "2016-06-10"
}