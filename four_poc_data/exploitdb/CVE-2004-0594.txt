{
    "text": "ecve : CVE-2004-0594 ， title : PHP 4.3.7/5.0.0RC3 - 'memory_limit' Remote Overflow - Linux remote Exploit ， verified : Verified ， exploit_detail : / * Remote exploit for the php memory_limit vulnerability found by Stefan ，  * Esser in php 4 ( <= 4.3.7 ) and php 5 ( <= 5.0.0RC3 ) . ，  * by Gyan Chawdhary ( gunnu45 @ hotmail.com )  ，  *  ( felinemenace.org/ ~ gyan )  ，  * Greets ，  * S.Esser for the vuln and mlxdebug.tgz , everything in the code is based on it. ，  * scrippie , gera , riq , jaguar , girish , n2n ... ，  * Vulnerability :  ，  * The issue is well documented in the advisory. ，  * Exploitation :  ，  * I cud not find a generic way to free a 40 byte chunk which could be later ，  * used by ALLOC_HASHTABLE. The exploit will construct a fake zend hash table ，  * which will be sent in the first request. The second request will kick in the ，  * memory interuption after allocating space for the hashtable and before it is ，  * initalized. The memory it will use for this allocation will contain the data ，  * from our previous request which includes the pDestructor pointer pointing to ，  * our nop+shellcode which is a part of the second request. This happens in the ，  * zend_hash_destory function. ，  * PS - The exploit is ugly , coded to test the vuln. If anyone knows the trick ，  * for 40 byte free (  ) then plz drop me a mail.",
    "time": "2004-11-27"
}