{
    "text": "ecve : CVE-2017-2800 ， title : wolfSSL 3.10.2 - x509 Certificate Text Parsing Off-by-One - Multiple dos Exploit ， verified : Not Verified ， exploit_detail : TALOS-2017-0293 ， WOLFSSL LIBRARY X509 CERTIFICATE TEXT PARSING CODE EXECUTION VULNERABILITY ， MAY 8 , 2017 ， CVE-2017-2800 ， SUMMARY ， An exploitable off-by-one write vulnerability exists in the x509 certificate parsing functionality of wolfSSL library versions up to 3.10.2. A specially crafted x509 certificate can cause a single out of bounds byte overwrite resulting in potential certificate validation vulnerabilities , denial of service and possible remote code execution. In order to trigger this vulnerability , the attacker needs to supply a malicious x509 certificate to either server or client application using this library. ， TESTED VERSIONS ， WolfSSL 3.10.2 ， PRODUCT URLS ， CVSSV3 SCORE ， 8.1 - CVSS : 3.0/AV : N/AC : H/PR : N/UI : N/S : U/C : H/I : H/A : H ， CWE ， CWE-193 : Off-by-one Error ， DETAILS ， WolfSSL , previously CyaSSL , is a lightweight SSL/TLS library targeted for embedded and RTOS environments , primarily because of its small size , speed , portability , and feature set. According to the vendor it is used in wide range of products including industrial control systems , IoT devices , VoIP hardware , routers and more. ， The vulnerability exists in x509 code that deals with string fields in DER certificates. Specifically , when parsing commonName , countryName , localityName , stateName , orgName or orgUnit fields , the function wolfSSL_X509_NAME_get_text_by_NID is used. Its prototype is :  ， int wolfSSL_X509_NAME_get_text_by_NID ( WOLFSSL_X509_NAME * name , int nid , char * buf , int len )  ;  ， Its task is to copy the appropriate string from name context into supplied buf of length len. The issue happens when the string is longer or equal to length of the allocated buffer. ， Following code highlights the issue for the case of commonName field :  ， int wolfSSL_X509_NAME_get_text_by_NID ( WOLFSSL_X509_NAME * name ,  ， int nid , char * buf , int len )  ， char * text = NULL ;  ， int textSz = 0 ;  ， WOLFSSL_ENTER ( \"wolfSSL_X509_NAME_get_text_by_NID\" )  ;  ， switch ( nid ) { ， case ASN_COMMON_NAME :  ， text = name->fullName.fullName + name->fullName.cnIdx ;  [ 1 ]  ， textSz = name->fullName.cnLen ;  [ 2 ]  ， textSz = min ( textSz , len )  ;  [ 3 ]  ， XMEMCPY ( buf , text , textSz )  ;  [ 4 ]  ， buf [ textSz ] = '\\0' ;  [ 5 ]  ， At [ 1 ] and [ 2 ]  , text and textSz are initialized. At [ 3 ] the lesser of the two values textSz and len is chosen. This value ends up as the size parameter to a memcpy call at [ 4 ] . Then , the same value is used as an index to NULL terminate the string at [ 5 ] . If the string length is bigger than size of the allocated buffer , NULL termination at index textSz will cause an off-by-one NULL byte write into adjacent memory variable on the stack or heap , depending on where the buffer was allocated. ， Depending on the way the library is used , this could lead to further issues when doing certificate validation or potentially result in remote code execution. ， The vulnerability can be triggered by supplying the attached",
    "time": "2017-05-09"
}