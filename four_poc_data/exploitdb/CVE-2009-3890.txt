{
    "text": "ecve : CVE-2009-3890 ， title : WordPress Core < 2.8.5 - Unrestricted Arbitrary File Upload / Arbitrary PHP Code Execution - PHP webapps Exploit ， verified : Verified ， exploit_detail : ============================================= ， - Release date : November 11th , 2009 ， - Discovered by : Dawid Golunski ， - Severity : Moderately High ， I. VULNERABILITY ， WordPress <= 2.8.5 Unrestricted File Upload Arbitrary PHP Code Execution ， II. BACKGROUND ， WordPress is a state-of-the-art publishing platform with a focus on ， aesthetics , web standards ,  ， and usability. WordPress is both free and priceless at the same time. ， More simply , WordPress is ， what you use when you want to work with your blogging software , not ， fight it. ， III. DESCRIPTION ， Wordpress allows authorised users to add an attachment to a blog post. ， It does not sanitize provided file properly before moving it to an ， uploads directory. ， The part of the code responsible for uploading files looks as follows :  ， wp-admin/includes/file.php :  ， --- [ cut ] --- ， line 217 :  ， --- [ cut ] --- ， // All tests are on by default. Most can be turned off by ，  $ override [ {test_name} ] = false ;  ，  $ test_form = true ;  ，  $ test_size = true ;  ， // If you override this , you must provide $ ext and $ type !  !  !  !  ，  $ test_type = true ;  ，  $ mimes = false ;  ， --- [ cut ] --- ， // A properly uploaded file will pass this test. There should be no ， reason to override this one. ， failed upload test.' )  )  ;  ， // A correct MIME type will pass this test. Override $ mimes or use the ， upload_mimes filter. ，  $ wp_filetype = wp_check_filetype (  $ file [ 'name' ]  ,  $ mimes )  ;  ， extract (  $ wp_filetype )  ;  ， current_user_can ( 'unfiltered_upload' )  )  ， __ ( 'File type does not meet security guidelines. Try ， another.' )  )  ;  ，  $ ext = ltrim ( strrchr (  $ file [ 'name' ]  , '.' )  , '.' )  ;  ，  $ type = $ file [ 'type' ]  ;  ， } else { ，  $ type = '' ;  ， // A writable uploads dir will pass this test. Again , there's no point ， overriding this one. ，  $ uploads [ 'error' ]  )  )  ，  $ filename = wp_unique_filename (  $ uploads [ 'path' ]  ,  $ file [ 'name' ]  ,  ，  $ unique_filename_callback )  ;  ， // Move the file to the uploads dir ，  $ new_file = $ uploads [ 'path' ] . \"/ $ filename\" ; ",
    "time": "2009-11-11"
}