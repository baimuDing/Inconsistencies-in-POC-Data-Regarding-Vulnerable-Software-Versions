{
    "text": "ecve : CVE-2000-0949 ， title : LBL Traceroute 1.4 a5 - Heap Corruption ( 3 ) - Linux local Exploit ， verified : Verified ， exploit_detail : // source :  ， Traceroute is a well-known network diagnostic tool used for analyzing the path on a network between two hosts. On unix systems , traceroute is typically installed setuid root because of its use of raw sockets. Certain versions of LBNL traceroute are vulnerable to an interesting attack involving freeing of pointers pointing to unallocated memory. ， When traceroute is executed with the arguments \"-g x -g x\" , the function \"savestr (  ) \" is called twice. savestr (  ) does what strdup (  ) does without the extra malloc (  ) call and is used when parsing the hostname or \"dotted quad notation\" ip address argument to the -g parameter. It uses a block of pre-allocated memory instead of allocating memory itself. After the first instance of \"-g\" is parsed and savestr (  ) is called , the pointer to the block used by savestr (  ) is unallocated via free (  ) . When the next gateway parameter ( -g ) is interpreted , savestr (  ) is called again and the user data argument is written to the block of unallocated memory. Like in the first instance , free (  ) is called on the pointer to where the data begins inside the old-buffer of unallocated memory. When free (  ) doesn't find a valid malloc header before the pointer it is passed , traceroute crashes. ， What makes this possibly exploitable is that the region of memory to which the pointer points is user-controlled and can be written to with ( somewhat ) arbitrary data before free (  ) is called. An attacker may be able to construct a malicious malloc (  ) header and carefully stuff it into the first savestr (  ) buffer , so that is there when free (  ) looks for it after the second savestr (  ) . What complicates exploitation of this issue are the functions involved with savestr (  )  , inet_addr (  ) and gethostbyname (  )  , which limit the type of user data that can be put into the buffer ( which would need to be binary ) . If pulled off , however , it may be possible to overwrite aribitrary locations in the heap ( such as a function pointer ) with arbitrary data. ， If successfully exploited this would yield local root access for the attacker. ， / *  ，  * MasterSecuritY <www.mastersecurity.fr> ，  * traceroot.c - Local root exploit in LBNL traceroute ，  * Copyright ( C ) 2000 Michel \"MaXX\" Kaempf <maxx @ mastersecurity.fr> ，  * Updated versions of this exploit and the corresponding advisory will ，  * be made available at :  ，  * ftp : //maxx.via.ecp.fr/traceroot/ ，  * This program is free software ; you can redistribute it and/or modify ，  * it under the terms of the GNU General Public License as published by ，  * the Free Software Foundation ; either version 2 of the License , or ，  *  ( at your option ) any later version. ，  * This program is distributed in the hope that it will be useful ,  ，  * but WITHOUT ANY WARRANTY ; without even the implied warranty of ，  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the ，  * GNU General Public License for more details. ，  * You should have received a copy of the GNU General Public License ，  * along with this program ; if not , write to the Free Software ，  * Foundation , Inc. , 59 Temple Place , Suite 330 , Boston , MA 02111-1307 USA ，  * /",
    "time": "2000-09-28"
}