{
    "text": "ecve : CVE-2007-1511 ， title : Frontbase 4.2.7 ( Windows ) - Remote Buffer Overflow - Windows remote Exploit ， verified : Verified ， exploit_detail : / * Dreatica-FXP crew ，  * ---------------------------------------- ，  * Target : Frontbase <= 4.2.7 for Windows ，  * Site :  ，  * Found by : Netragard , L.L.C Advisory ，  * ---------------------------------------- ，  * Exploit date : 25.03.2007 ，  * Exploit writer : Heretic2 ( heretic2x @ gmail.com )  ，  * OS : Windows 2000 SP4 ( will add other later )  ，  * Crew : Dreatica-FXP ，  * ---------------------------------------- ，  * Info :  ，  * The last Windows version of Frontbase that you can found on official site www.frontbase.com ，  * is the 4.2.7d and this version is patched , so the exploit will not work here , i have tested that ，  * exploit on the 4.2.7 version under Windows 2000 SP4 ( not patched ) and it is working good. ，  * The exploitation , as said in advisory , of this bug is easy : SEH and EIP overwrite methods. ，  * but in 'real' life the exploitation is more difficult , cause the server allows only alphanumeric ，  * bytes , like : 0x01 0x02 ... 0x7e 0x7f . ，  * other bytes : 0x80 ... 0xff come to server transformed :  ，  * 0xEB will transform in two bytes 0xC2 0xAB ，  * 0xFF will transform in two bytes 0xC3 0xBF ，  * and etc... ，  * so the exploitation become more difficult here , however in one place of buffer i send to the server byte ，  * 0xff , with assumptions that i will get the bytes 0xC3 0xBF and that the buffer will be one byte longer. ，  * for the correct exploitation i used some code from win32 SEH GetPC project and metasploit for the shellcodes. ，  * so the exploit is :  ，  * send 3115 bytes to server + address to overwrite SEH. ，  * in my case i sent 3114 bytes , cause one 0xff transformed in 2 symbols ，  * ---------------------------------------- ，  * Compiling :  ，  * To compile this exploit you need :  ，  * 1.",
    "time": "2007-03-25"
}