{
    "text": "ecve : CVE-2014-0226 ， title : Apache 2.4.7 mod_status - Scoreboard Handling Race Condition - Linux dos Exploit ， verified : Not Verified ， exploit_detail : -- [ 0. Sparse summary ， Race condition between updating httpd's \"scoreboard\" and mod_status ,  ， leading to several critical scenarios like heap buffer overflow with ， user ， supplied payload and leaking heap which can leak critical memory ， containing ， htaccess credentials , ssl certificates private keys and so on. ， -- [ 1. Prerequisites ， Apache httpd compiled with MPM event or MPM worker. ， The tested version was 2.4.7 compiled with :  ， ./configure -enable-mods-shared=reallyall -with-included-apr ， The tested mod_status configuration in httpd.conf was :  ， SetHandler server-status ， ExtendedStatus On ， -- [ 2. Race Condition ， Function ap_escape_logitem in server/util.c looks as follows :  ， 1908AP_DECLARE ( char *  ) ap_escape_logitem ( apr_pool_t * p , const char ，  * str )  ， 1909{ ， 1910 char * ret ;  ， 1911 unsigned char * d ;  ， 1912 const unsigned char * s ;  ， 1913 apr_size_t length , escapes = 0 ;  ， 1914 ， 1915 if (  ! str ) { ， 1916 return NULL ;  ， 1917 } ， 1918 ， 1919 / * Compute how many characters need to be escaped * / ， 1920 s = ( const unsigned char *  ) str ;  ， 1921 for (  ;  * s ; ++s ) { ， 1922 if ( TEST_CHAR (  * s , T_ESCAPE_LOGITEM )  ) { ， 1923 escapes++ ;  ， 1924 } ， 1925 } ， 1926 ， 1927 / * Compute the length of the input string , including NULL ，  * / ， 1928 length = s - ( const unsigned char *  ) str + 1 ;  ， 1929 ， 1930 / * Fast path : nothing to escape * / ， 1931 if ( escapes == 0 ) { ， 1932 return apr_pmemdup ( p , str , length )  ;  ， 1933 } ， In the for-loop between 1921 and 1925 lines function is computing the ， length of ， supplied str ( almost like strlen , but additionally it counts special ， characters ， which need to be escaped ) . As comment in 1927 value says , function ， computes count ， of bytes to copy. If there's nothing to escape function uses ， apr_pmemdup to duplicate ， the str. In our single-threaded mind everything looks good , but tricky ， part starts ， when we introduce multi-threading. Apache in MPM mode runs workers as ， threads , let's ， consider the following scenario :  ， 1 ) ap_escape_logitem ( pool , \"\" ) is called ， 2 ) for-loop in 1921 line immediately escapes , because * s is in ， first loop run ， 3 ) malicious thread change memory under * s to another value ，  ( something which is not )  ， 4 ) apr_pmemdup copies that change value to new string and returns ， it ， Output from the ap_escape_logitem is considered to be a string , if ， scenario above would occur ,  ， then returned string would not be zeroed at the end , which may be ， harmful. The mod_status ， code looks as follows :  ， 833 ap_r",
    "time": "2014-07-21"
}