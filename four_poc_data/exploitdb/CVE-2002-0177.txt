{
    "text": "ecve : CVE-2002-0177 ， title : Icecast 1.x - AVLLib Buffer Overflow - Unix remote Exploit ， verified : Verified ， exploit_detail : // source :  ， Icecast is a freely available , open source streaming audio server. Icecast is available for the Unix , Linux , and Microsoft Windows platforms. ， Icecast does not properly check bounds on data sent from clients. Because of this , it is possible for a remote user to send an arbitrarily long string of data to the server , which could result in a stack overflow , and the execution of user supplied code. The code would be executed with the privileges of the Icecast server. ， / * all content is ( c )  # temp 2002 and may not be ，  *  ( re ) published in any form or ( re ) distributed ，  * without written permission of the author ( diz )  ，  * icx.c -- icecast remote shell/root ，  * Found 15-02-2002...exploited 16-02-2002 ; P ，  * Affected :  ，  * all versions up to 1.3.11 ( current )  ，  * the client_login (  ) function is passed the full GET %s HTTP/1.0 ，  * string provided by a mp3 client. Somewhere along the way an evil ，  * string function overflows buffer bounds with our humpage.. We can ，  * overflow just enough to reach and overwrite an instruction pointer. ，  * Humpage occurs somewhere in the handling of the request string ，  * between mount searching and request building...Havent been able ，  * to locate the exact spot as of yet ( just discovered bug yesterday ，  * investigating another possible overflow in icecast extract_vars (  )  ，  * funtion ) Also some libavl routines look mighty guilty..especially ，  * avl_destroy. I cant really be bothered to check all entry points. ，  * This is why :  ，  * root @ blackout : /home/diz/audits/icecast-1.3.11/src > grep strcpy all.c | wc -w ，  * 284 ，  * root @ blackout : /home/diz/audits/icecast-1.3.11/src > grep s",
    "time": "2002-02-16"
}