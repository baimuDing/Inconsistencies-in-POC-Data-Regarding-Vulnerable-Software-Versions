{
    "text": "ecve : CVE-2017-2482 ， title : Apple macOS/iOS Kernel 10.12.3 ( 16D32 ) - 'bpf' Heap Overflow - Multiple dos Exploit ， verified : Verified ， exploit_detail : / *  ， Source :  ， The bpf ioctl BIOCSBLEN allows userspace to set the bpf buffer length :  ， case BIOCSBLEN : / * u_int * / ， error = EINVAL ;  ， u_int size ;  ， bcopy ( addr , &size , sizeof ( size )  )  ;  ， size = bpf_maxbufsize ;  ， size = BPF_MINBUFSIZE ;  ， bcopy ( &size , addr , sizeof ( size )  )  ;  ， d->bd_bufsize = size ;  ， d->bd_bif is set to the currently attached interface , so we can't change the length if we're already ， attached to an interface. ， There's no ioctl command to detach us from an interface , but we can just destroy the interface ，  ( by for example attaching to a bridge interface. ) We can then call BIOCSBLEN again with a larger ， length which will set d->bd_bufsize to a new , larger value. ， If we then attach to an interface again we hit this code in bpf_setif :  ， error = bpf_allocbufs ( d )  ;  ， This means that the buffers actually won't be reallocated since d->bd_sbuf will still point to the ， old buffer. This means that d->bd_bufsize is out of sync with the actual allocated buffer size ， leading to heap corruption when packets are receive on the target interface. ， This",
    "time": "2017-04-04"
}