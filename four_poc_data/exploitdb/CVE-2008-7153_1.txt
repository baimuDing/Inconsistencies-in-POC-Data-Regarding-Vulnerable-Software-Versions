{
    "text": "ecve : CVE-2008-7154 CVE-2008-7153 ， title : Docebo 3.5.0.3 - 'lib.regset.php' Command Execution - PHP webapps Exploit ， verified : Verified ， exploit_detail : <? ， / *  ， Docebo <= 3.5.0.3 ( lib.regset.php ) Remote Command Execution Exploit ， author... : EgiX ， mail..... : n0b0d13s [ at ] gmail [ dot ] com ， link..... :  ， details.. : works with magic_quotes_gpc = off ( if magic quotes affects also $ _SERVER [  ] array )  ，  [ - ] autoDetectRegion (  ) function vulnerable to SQL injection in /doceboCore/lib/lib.regset.php ， 781. function autoDetectRegion (  ) { ， 782. ， 783. if (  ! isset (  $ _SERVER [ \"HTTP_ACCEPT_LANGUAGE\" ]  )  ) { ， 784. $ res=0 ;  ， 785. return $ res ;  ， 786. } ， 787. $ accept_language= $ _SERVER [ \"HTTP_ACCEPT_LANGUAGE\" ]  ;  ， 788. // [ TODO ] move the code that makes the accept language array to lib.utils ， 789. ， 790. $ al_arr=explode ( \" , \" ,  $ accept_language )  ;  ， 791. ， 792. $ i=0 ;  ， 793. $ res=\"\" ;  ， 794. while (  (  $ res == \"\" )  (  $ i < count (  $ al_arr )  )  ) { ， 795. ， 796. $ bl_arr=explode ( \" ; \" ,  $ al_arr [  $ i ]  )  ;  ， 797. $ browser_language= $ bl_arr [ 0 ]  ;  ， 798. ， 799. $ qtxt=\"SELECT region_id FROM \". $ this->_getListTable (  ) .\" WHERE browsercode LIKE '%\". $ browser_language.\"%'\" ; <= = ， 800. $ q= $ this->_executeQuery (  $ qtxt )  ;  ， 801. ， 802. if (  (  $ q )  ( mysql_num_rows (  $ q ) > 0 )  ) { ， 803. $ row=mysql_fetch_array (  $ q )  ;  ， 804. $ res= $ row [ \"region_id\" ]  ;  ， 805. } ， an attacker cuold be inject SQL code through http accept-language header ( in the query at line 799 )  , but explode (  ) function at ， line 790 will split the injected code by comma ( \" , \" )  , so isn't possible even a blind SQL injection with BENCHMARK (  ) method... ， this",
    "time": "2008-01-09"
}