{
    "text": "ecve : CVE-2019-19241 ， title : Linux 5.3 - Privilege Escalation via io_uring Offload of sendmsg (  ) onto Kernel Thread with Kernel Creds - Linux local Exploit ， verified : Verified ， exploit_detail : Since commit 0fa03c624d8f ( \"io_uring : add support for sendmsg (  ) \" , first in v5.3 )  ,  ， io_uring has support for asynchronously calling sendmsg (  ) . ， Unprivileged userspace tasks can submit IORING_OP_SENDMSG submission queue ， entries , which cause sendmsg (  ) to be called either in syscall context in the ， original task , or - if that wasn't able to send a message without blocking - on ， a kernel worker thread. ， The problem is that sendmsg (  ) can end up looking at the credentials of the ， calling task for various reasons ; for example :  ， - sendmsg (  ) with non-null , non-abstract ->msg_name on an unconnected AF_UNIX ， datagram socket ends up performing filesystem access checks ， - sendmsg (  ) with SCM_CREDENTIALS on an AF_UNIX socket ends up looking at ， process credentials ， - sendmsg (  ) with non-null ->msg_name on an AF_NETLINK socket ends up performing ， capability checks against the calling process ， When the request has been handed off to a kernel worker task , all such checks ， are performed against the credentials of the worker - which are default kernel ， creds , with UID 0 and full capabilities. ， To force io_uring to hand off a request to a kernel worker thread , an attacker ， can abuse the fact that the opcode field of the SQE is read multiple times , with ， accesses to the struct msghdr in between : The attacker can first submit an SQE ， of type IORING_OP_RECVMSG whose struct msghdr is in a userfaultfd region , and ， then , when the userfaultfd triggers , switch the type to IORING_OP_SENDMSG. ， Here's a reproducer for Linux 5.3 that demonstrates the issue by adding an ， IPv4 address to the loopback interface without having the required privileges",
    "time": "2019-12-16"
}