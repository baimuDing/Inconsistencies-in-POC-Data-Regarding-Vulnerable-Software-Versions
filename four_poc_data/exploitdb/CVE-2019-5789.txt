{
    "text": "ecve : CVE-2019-5789 ， title : Google Chrome < M73 - MidiManagerWin Use-After-Free - Multiple dos Exploit ， verified : Verified ， exploit_detail : MidiManagerWin uses a similar instance_id mechanism to the TaskService implementation to ensure that delayed tasks are only executed if the MidiManager instance that they were scheduled on is still alive. ， However , this instance_id is an int , and there is no check that it hasn't overflowed , unlike in the linux and mac implementations ( MidiManagerAlsa )  , see ， This means that if ( for example ) a delayed sendData on a stale MidiManagerWin instance is queued up , and then the instance id is wrapped , this will trigger a use-after-free when that task triggers. ， This bug would be theoretically reachable directly from javascript , but I think that since it's not possible to directly tear down a midi session using the WebMIDI api that this would require too much time to be feasible ( as it would require creating a new frame for every increment ) . However , it can be triggered in a reasonable amount of time from a compromised renderer making direct Mojo calls. ， The timing required for the resulting code is quite sensitive to changes in the order of Mojo messages being received ; my original approach needed 6 months , but I have the time needed to cause the overflow down to ~ 4 days from a compromised renderer using the MojoJS javascript bindings. ， I've attached a",
    "time": "2019-03-19"
}