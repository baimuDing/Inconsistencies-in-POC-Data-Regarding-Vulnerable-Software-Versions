{
    "text": "ecve : CVE-2017-7642 ， title : Hashicorp vagrant-vmware-fusion < 4.0.20 - Local Privilege Escalation - macOS local Exploit ， verified : Not Verified ， exploit_detail : I'm a big fan of Hashicorp but this is an awful bug to have in software of their ， calibre. ， Their vagrant plugin for vmware fusion uses a product called Ruby Encoder to ， protect their proprietary ruby code. It does this by turning the ruby code into ， bytecode and executing it directly. ， Unfortunately the execution chain necessary for this to work is not safe. After ， installing the plugin , the first time you \"vagrant up\" any vagrant file using ， vmware fusion it will create some files in ，  ~ /.vagrant.d/gems/2.2.5/gems/vagrant-vmware-fusion-4.0.18/bin :  ， vagrant_vmware_desktop_sudo_helper ， vagrant_vmware_desktop_sudo_helper_wrapper_darwin_386 ， vagrant_vmware_desktop_sudo_helper_wrapper_darwin_amd64 ， vagrant_vmware_desktop_sudo_helper_wrapper_linux_386 ， vagrant_vmware_desktop_sudo_helper_wrapper_linux_amd64 ， The first one is an encoded ruby script , the others are \"sudo helper\" binaries ， the one that corresponds to your platform will be made suid root when vagrant up ， is run. ， Unfortunately the helper calls the ruby script with system ( \"ruby <script path>\" )  ， - i.e. it doesn't verify the path to the ruby script and it doesn't scrub the ， PATH variable either. We can easily exploit this to get root. ， Hashicorp were quick to respond and kindly paid me a small bounty for my trouble. ， The issue was acknowledged by Hashicorp on 08/04/17 and fixed on 14/07/17. ， The exploit below is for darwin 64bit but it's likely other architectures are ， also vulnerable. ， 2a58c6fd18e0a36c2fa58ab32298a0e3b89f28843bd8cd4e3a9ff8623028dca3 ，  #  ! ",
    "time": "2017-07-18"
}