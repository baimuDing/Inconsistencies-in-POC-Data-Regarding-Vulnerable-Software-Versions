{
    "text": "ecve : CVE-2014-2913 ， title : NRPE 2.15 - Remote Command Execution - Multiple remote Exploit ， verified : Not Verified ， exploit_detail : ============================================= ， - Release date : 17.04.2014 ， - Discovered by : Dawid Golunski ， - Severity : High ， I. VULNERABILITY ， NRPE - Nagios Remote Plugin Executor <= 2.15 Remote Command Execution ， II. BACKGROUND ， Nagios is an open source computer system monitoring , network monitoring and ， infrastructure monitoring software application. Nagios offers monitoring and ， alerting services for servers , switches , applications , and services. ， It alerts the users when things go wrong and alerts them a second time when ， the problem has been resolved. ， The NRPE ( Nagios Remote Plugin Executor ) addon is designed to allow you to ， execute Nagios plugins on remote Linux/Unix machines. ， The main reason for doing this is to allow Nagios to monitor \"local\" resources ，  ( like CPU load , memory usage , etc. ) on remote machines. Since these public ， resources are not usually exposed to external machines , an agent like NRPE must ， be installed on the remote Linux/Unix machines. ， III. INTRODUCTION ， Nagios Remote Plugin Executor ( NRPE ) contains a vulnerability that could ， allow an attacker to remotely inject and execute arbitrary code on the host ， under NRPE account ( typically 'nagios' ) . ， The vulnerability is due to NRPE not properly sanitizing user input before ， passing it to a command shell as a part of a configured command. ， In order for an attacker to take advantage of the host NRPE must be compiled ， and configured with command arguments. ， No authentication is required to exploit this vulnerability if the NRPE port ， has not been protected with a firewall. ， IV. DESCRIPTION ， NRPE expects definitions of commands in nrpe.cfg config file. Some of the ， examples given in the config with hardcoded arguments are :  ， command [ check_users ] =/usr/local/nagios/libexec/check_users -w 5 -c 10 ， command [ check_load ] =/usr/local/nagios/libexec/check_load -w 15 , 10 , 5 -c 30 , 25 , 20 ， command [ check_hda1 ] =/usr/local/nagios/libexec/check_disk -w 20% -c 10% -p /dev/hda1 ， when command arguments are enabled then user is also allowed to define ， commands with variables like :  ， command [ check_users ] =/usr/local/nagios/libexec/check_users -w $ ARG1 $ -c $ ARG2 $  ， command [ check_disk ] =/usr/local/nagios/libexec/check_disk -w $ ARG1 $ -c $ ARG2 $ -p $ ARG3 $  ， This is often suggested for convenience in various nagios/nrpe setup tutorials ， on the web. ， To get a result from a defined command in NRPE daemon the following nrpe client ， can be used with -a option that passes arguments :  ，  # /usr/local/nagios/libexec/check_nrpe -H 10.10.10.5 -c check_users -a 4 4 ， USERS OK - 4 users currently logged in | users=4 ; 4 ; 4 ; 0 ， in case check_users command was defined with arguments as shown above ， NRPE would execute :  ， /usr/local/nagios/libexec/check_users -w 4 -c 4 ， on the local system. ， As we can find in the source code of nrpe-2.15/src/nrpe.c NRPE daemon uses popen (  ) function for ， command execution :  ， / * executes a system command via popen (  )  , but protects against timeouts * / ， int my_system ( char * command , int timeout , int * early_timeout , char * output , int output_length ) { ， -cut- ， / * run the command * / ， fp=popen ( command , \"r\" )  ;  ， using popen (  ) results in the command being executed with the help of a command shell. ， Before this function is reached however NRPE takes several measures to prevent ， malicious command injection to the shell. That includes filtration based on a blacklist : ",
    "time": "2014-04-18"
}