{
    "text": "published_time: 2015-01-26 ， id: 30774 ， eid: 35915 ， cve: CVE-2014-9226 CVE-2014-9225 CVE-2014-9224 CVE-2014-7289 ， title: Symantec Data Center Security - Multiple Vulnerabilities - Multiple webapps Exploit ， author: SEC Consult ， published_time: 2015-01-26 ， verified: Not Verified ， platform: Multiple ， exploit_type: webapps ， exploit_url: /download/35915 ， exploit_detail: SEC Consult Vulnerability Lab Security Advisory < 20150122-0 >\r ，              title: Multiple critical vulnerabilities\r ，           products: Symantec Data Center Security: Server Advanced (SDCS:SA)\r ，                     Symantec Critical System Protection (SCSP)\r ， vulnerable version: see: Vulnerable / tested versions\r ，      fixed version: SCSP 5.2.9 MP6, SDCS:SA 6.0 MP1 - not all\r ，                     vulnerabilities were fixed, but mitigations exist\r ，             impact: Critical\r ，         CVE number: CVE-2014-7289, CVE-2014-9224, CVE-2014-9225, CVE-2014-9226\r ，           homepage: \r ，              found: 2014-09-19\r ，                 by: Stefan Viehbck\r ，                     SEC Consult Vulnerability Lab\r ， Vendor description:\r ， \"Symantec Data Center Security: Server Advanced v6.0 (DCS: Server Advanced)\r ， extends the Data Center Security: Server solution beyond agentless threat\r ， protections by incorporating technologies previous known as Critical System\r ， Protection. Data Center Security: Server Advanced provides granular, policy-\r ， based controls with a low impact in-guest agent to monitor and protect numerous\r ， physical and virtual server environments. Through a combination of technologies\r ， including application-centric controls including protected white listing,\r ， sandboxing using least privilege access controls, host-based intrusion detection\r ， (HIDS) and prevention (HIPS), and real-time file integrity monitoring (FIM),\r ， organizations can proactively safeguard their heterogeneous server environments\r ， and the information they contain from zero-day and targeted attacks, and fulfill\r ， their compliance mandates across critical systems. Click here for more info\"\r ， Source:\r ， Business recommendation:\r ， Attackers are able to completely compromise the SDCS:SA Server as they can gain\r ， access at the system and database level. Furthermore attackers can manage all\r ， clients and their policies.\r ， SDCS:SA Server can be used as an entry point into the target infrastructure\r ， (lateral movement, privilege escalation).\r ， Furthermore the SDCS:SA Client protections can be bypassed in several ways.\r ， It is highly recommended by SEC Consult not to use this software until a\r ， thorough security review (SDCS:SA Server, SDCS:SA Client Policies) has been\r ， performed by security professionals and all identified issues have been\r ， resolved.\r ， Note: SDCS:SA was replaced by SCSP. In this document the name SDCS:SA is used.\r ， Vulnerability overview/description:\r ， 1) Unauthenticated SQL Injection (SDCS:SA Server) (CVE-2014-7289)\r ， Due to insufficient input validation, the application allows the injection\r ， of direct SQL commands. By exploiting the vulnerability, an attacker gains\r ， access (read/write) to all records stored in the database as arbitrary SQL\r ， statements can be executed.\r ， Furthermore the application design enables an attacker to gain code execution\r ， as SYSTEM (highest privilege Windows user) on the server by exploiting this\r ， vulnerability.\r ， No prior authentication is needed to exploit this vulnerability.\r ， Affected script:\r ， 2) Reflected Cross-Site-Scripting (XSS) (SDCS:SA Server) (CVE-2014-9224)\r ， The applications suffers from a reflected cross-site scripting vulnerability,\r ， which allows an attacker to steal other users' sessions, to impersonate other\r ， users and to gain unauthorized access to the admin interface.\r ， Affected scripts:\r ， 3) Information Disclosure (SDCS:SA Server) (CVE-2014-9225)\r ， A script discloses internal information about the application on the server\r ， without prior authentication. This information includes file paths on the\r ， webserver, version information (OS, Java) and is accessible without prior\r ， authentication.\r ， Affected script:\r ， 4) Multiple Default Security Protection Policy Bypasses (SDCS:SA Client)\r ， (CVE-2014-9226)\r ， Several bypasses were discovered. These require Windows Administrator\r ， permissions. This requirement is usually met in SDCS:SA deployments.\r ， Note: SEC Consult did not check whether the mitigations provided by Symantec do\r ， in fact sufficiently mitigate these vulnerabilities!\r ， - Persistent code execution via Windows Services\r ， The default Symantec policy rules can be bypassed in order to get persistent\r ， arbitrary code execution.\r ， - Remote code execution via RPC\r ， The default Symantec policy rules can be bypassed in order to get persistent\r ， arbitrary code execution. In addition to that \"psexec-style\" remote code\r ， execution via SMB is possible as well.\r ， - Policy bypass: Extraction of Windows passwords/hashes\r ， The default Symantec policy rules do not prevent attackers from extracting\r ， the Windows passwords/password hashes from the System.\r ， - Privilege elevation via Windows Installer (msiexec.exe)\r ， The restrictions imposed by the default policies can be bypassed entirely by\r ， exploiting incorrect assumptions made in the policy regarding the Windows\r ， Installer (msiexec.exe).\r ， - Privilege elevation/code execution via Windows Management Instrumentation\r ， (.mof files)\r ， The restrictions imposed by default policies can be bypassed partially by\r ， exploiting incorrect assumptions made in the policy regarding the Windows\r ， Management Instrumentation. The policy does not take intended OS functionality\r ， to execute code into account.\r ， Proof of concept:\r ， 1) Unauthenticated SQL Injection (SDCS:SA Server) (CVE-2014-7289)\r ， The servlet accessible via /sis-ui/authenticate (TCP port 4443, HTTPS) is\r ， vulnerable to SQL injection. By sending a specially crafted HTTP request,\r ， arbitrary SQL statements can be executed.\r ， In a proof of concept exploit, SQL statements to add a new SDCS:SA user with\r ， admin privileges (username: secconsult, password: PASSWORD123!) were executed.\r ， These statements are:\r ， INSERT INTO USR (RID, USERNAME, PWD, CONTACT_NAME, PHONES, EMAIL, ALERT_EMAIL,\r ， ADDRESS, MANAGER_NAME, BUSINESS_INFO, PREF_LANGUAGE, FLAGS, DESCR, CREATETIME,\r ， MODTIME, ENABLED, BUILTIN, HIDDEN, SALT) VALUES (1504, 'secconsult',\r ， 'DUjDkNZgv9ys9/Sj/FQwYmP29JBtGy6ZvuZn2kAZxXc=',\r ， '', '', '', '', '', '', '', '', NULL, 'SECCONSULT', '2014-09-12 07:13:09',\r ， '2014-09-12 07:13:23', '1', '0', '0',\r ， 'N1DSNcDdDb89eCIURLriEO2L/RwZXlRuWxyQ5pyGR/tfWt8wIrhSOipth8Fd/KWdsGierOx809rICjqrhiNqPGYTFyZ1Kuq32sNKcH4wxx+AGAUaWCtdII7ZXjOQafDaObASud25867mmEuxIa03cezJ0GC3AnwVNOErhqwTtto=');\r ， INSERT INTO ROLEMAP (USERRID, ROLERID) VALUES (1504, 1);\r ， The code used to exploit the SQL injection vulnerability is listed below:"
}