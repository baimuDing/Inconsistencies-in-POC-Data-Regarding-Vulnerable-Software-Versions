{
    "text": "ecve : CVE-2015-1336 ， title : Man-db 2.6.7.1 - Local Privilege Escalation - Linux local Exploit ， verified : Verified ， exploit_detail : / *  ， EDB Note :  ， man : man -> man : root ~  ， man : root -> root : root ~  ， CreateSetgidBinary.c ~  ， DirModifyInotify-20110530.c ~  ，  * / ， man : man -> man : root ， Setgid Binary Creater : The program CreateSetgidBinary.c allows to create the suitable setgid binary circumventing the kernel protection. Currently creating an empty setgid executable in /var/cache/man would work but writing as user man will remove the setgid flag silently. Hence let root itself write binary code to it keeping the flags. But that is not so simple :  ， - Writing an interpreter header would be simple , but start of interpreter in kernel will drop the setgid capability immediately. ， - Hence an ELF binary has to be written. The shellcode from below is just 155 bytes to perform setresgid and execute a shell ， - We need a SUID binary to write arbitrary data to stdout with similar method already used in SuidBinariesAndProcInterface. But they do not just echo , they may perform some kind of transformation , e.g. use basename of arg0 for",
    "time": "2015-12-02"
}