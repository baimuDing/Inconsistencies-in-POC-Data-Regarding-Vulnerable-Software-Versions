{
    "text": "ecve : CVE-2012-6519 CVE-2012-6518 CVE-2012-6517 ， title : DIY CMS 1.0 Poll - Multiple Vulnerabilities - PHP webapps Exploit ， verified : Verified ， exploit_detail : Title :  ， DIY CMS v1.0 Poll - Multiple Web Vulnerabilities ， Date :  ， 2012-04-26 ， VL-ID :  ， 518 ， Introduction :  ， Do It Yourslef Content Management System is a feature-rich , php-built , mysql-based , opensource and free CMS. ， It is suitable to manage any kind of contents. It is modular , extensible and easliy skinnable. Build your own modules ， purposes , add certain functionalites to suit your needs and design a theme that represents the content of your website. ，  ( Copy of the Vendor Homepage :  ， Abstract :  ， A Vulnerability Laboratory researcher discovered multiple web vulnerabilities in DIY v1.0 Content Management System. ， Report-Timeline :  ， 2012-04-16 : Public or Non-Public Disclosure ， Status :  ， Published ， Exploitation-Technique :  ， Remote ， Severity :  ， High ， Details :  ， 1.1 ， A SQL Injection vulnerability is detected in DIY v1.0 Content Management System. ， The vulnerability allows an attacker ( remote ) or local low privileged user account to inject/execute own sql commands ， on the affected application dbms. Successful exploitation of the vulnerability results in dbms & application compromise. ， Vulnerable Module ( s )  :  ，  [ + ] Mod - Poll ， 1.2 ， Multiple non persistent cross site scripting vulnerability is detected in DIY v1.0 Content Management System. ， The vulnerability allows remote attackers to hijack website customer , moderator or admin sessions with high required ， user inter action or local low privileged user account. Successful exploitation can result in account steal , phishing ， & client-side content request manipulation. ， Vulnerable Module ( s )  :  ，  [ + ] Poll - Question & Answer Input/Output ， 1.3 ， A cross site request forgery vulnerability is detected in DIY v1.0 Content Management System. The bugs allow remote ， attackers with high required user inter action to edit user accounts. Successful exploitation can lead to account ， access. ， To exploit the issue the attacker need to create a manipulated copy the edit user mask/form. Inside of the document the ， remote can implement his own values for the update because of no form or token protection. When admin get now forced to ， execute the script via link he is executing the new value on the update of the application if his session is not ， expired. ， Vulnerable Module ( s )  :  ，  [ + ] &modfile=add",
    "time": "2012-04-30"
}