{
    "text": "ecve : CVE-2019-6214 ， title : macOS < 10.14.3 / iOS < 12.1.3 - Sandbox Escapes due to Type Confusions and Memory Safety Issues in iohideventsystem - Multiple dos Exploit ， verified : Verified ， exploit_detail : / *  ， It's possible that this should be two separate issues but I'm filing it as one as I'm still understanding ， this service. ， com.apple.iohideventsystem is hosted in hidd on MacOS and backboardd on iOS. You can talk to it from the app ， sandbox on iOS. ， It uses an IOMIGMachPortCache to translate between ports on which messages were received and CF objects ， on which actions should be performed. There is insufficient checking that the types are correct ; so far as ， I can tell all the io_hideventsystem_ * methods apart from io_hideventsystem_open expect to be called on ， a \"connection\" port , but that's not enforced. Specifically , the service port is put in the cache mapped to ， an IOHIDEventServer object , and each connection is put in mapped to IOHIDEventSystemConnection objects. Note that ， the service IOMIG port can demux the whole hideventsystem service ( all the methods. ) This seems to lead to a lot ， of type confusion issues ( eg places where the code is trying to read a bitmap of entitlements possessed by the connection ， but is in fact reading out of bounds. )  ， There's also what looks like a regular memory safety issue in ， _io_hideventsystem_unregister_record_service_changed_notification. ， This converts the port its called on to an object via IOMIGMachPortCacheCopy then passes that to ， _IOHIDEventSystemConnectionUnregisterRecordServiceChanged. ， This reads an object pointer from +0x10 , which for both an IOHIDEventServer and IOHIDEventSystemConnection is an IOHIDEventSystem ,  ， passes that to _IOHIDEventSystemUnregisterRecordServiceChanged and then calls CFRelease on it. ， The problem is that this CFRelease call isn't balanced by a CFRetain , so each call to this just lets us arbitrarily drop references ， on that object... ， The",
    "time": "2019-01-31"
}