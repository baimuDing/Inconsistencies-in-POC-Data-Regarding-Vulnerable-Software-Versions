{
    "text": "ecve : CVE-2015-2527 ， title : Microsoft Windows - NtUserGetClipboardAccessToken Token Leak ( MS15-023 ) - Windows local Exploit ， verified : Verified ， exploit_detail : Source :  ， Windows : NtUserGetClipboardAccessToken Token Leak Redux ， Platform : Windows 8.1 Update , Windows 10 Build 10130 ， Class : Security Bypass/EoP ， Summary :  ， The NtUserGetClipboardAccessToken win32k system call exposes the access token of the last user to lower-privileged users. It can also be used to open an anonymous impersonation thread token which normally OpenThreadToken shouldn't be able to do. This is a bypass of the fix for CVE-2015-0078. ， Description :  ， This was supposedly fixed as CVE-2015-0078 in MS15-023 to prevent access to the token from any process running below medium IL. The check is roughly :  ， ObOpenObjectByPointer ( WinStationObject->ClipboardAccessToken , Access , TokenHandle )  ;  ， This is possible to bypass because IsImmersiveBroker level is trivial to get. It seems Win32k sets the appropriate Win32Process flag when first initializing the process and converting it to a GUI thread. If the executable is signed by a Microsoft certificate and has a specially named section of .imrsiv the flag will be set , however this will be done regardless of the IL of the process. Therefore you can create a process using one of the pre signed executables , such as explorer.exe , RuntimeBroker.exe or LicensingUI.exe then inject a DLL into the process. This allows you to bypass the check and capture the token. ， Ive had a quick look at what else might be exploitable from being able to get IsImmersiveBroker to return true. Nothing stands out but its probably worth restricted the IL level of processes allowed to get this flag set.",
    "time": "2015-09-15"
}