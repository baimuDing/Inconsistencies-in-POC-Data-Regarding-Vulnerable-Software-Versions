{
    "text": "ecve : CVE-2017-2619 ， title : Samba 4.5.2 - Symlink Race Permits Opening Files Outside Share Directory - Multiple remote Exploit ， verified : Verified ， exploit_detail : Source :  ， The Samba server is supposed to only grant access to configured share ， directories unless \"wide links\" are enabled , in which case the server is allowed ， to follow symlinks. The default ( since CVE-2010-0926 ) is that wide links are ， disabled. ， smbd ensures that it isn't following symlinks by calling lstat (  ) on every ， path component , as can be seen in strace ( in reaction to the request ， \"get a/b/c/d/e/f/g/h/i/j\" , where /public is the root directory of the share )  :  ， root @ debian : /home/user # strace -e trace=file -p18954 ， Process 18954 attached ， lstat ( \"a/b/c/d/e/f/g/h/i/j\" , {st_mode=S_IFREG | 0644 , st_size=4 , ...} ) = 0 ， getcwd ( \"/public\" , 4096 ) = 8 ， lstat ( \"/public/a\" , {st_mode=S_IFDIR | 0755 , st_size=4096 , ...} ) = 0 ， lstat ( \"/public/a/b\" , {st_mode=S_IFDIR | 0755 , st_size=4096 , ...} ) = 0 ， lstat ( \"/public/a/b/c\" , {st_mode=S_IFDIR | 0755 , st_size=4096 , ...} ) = 0 ， lstat ( \"/public/a/b/c/d\" , {st_mode=S_IFDIR | 0755 , st_size=4096 , ...} ) = 0 ， lstat ( \"/public/a/b/c/d/e\" , {st_mode=S_IFDIR | 0755 , st_size=4096 , ...} ) = 0 ， lstat ( \"/public/a/b/c/d/e/f\" , {st_mode=S_IFDIR | 0755 , st_size=4096 , ...} ) = 0 ， lstat ( \"/public/a/b/c/d/e/f/g\" , {st_mode=S_IFDIR | 0755 , st_size=4096 , ...} ) = 0 ， lstat ( \"/public/a/b/c/d/e/f/g/h\" , {st_mode=S_IFDIR | 0755 , st_size=4096 , ...} ) = 0 ， lstat ( \"/public/a/b/c/d/e/f/g/h/i\" , {st_mode=S_IFDIR | 0755 , st_size=4096 , ...} ) = 0 ， lstat ( \"/public/a/b/c/d/e/f/g/h/i/j\" , {st_mode=S_IFREG | 0644 , st_size=4 , ...} ) = 0 ， stat ( \"a/b/c/d/e/f/g/h/i/j\" , {st_mode=S_IFREG | 0644 , st_size=4 , ...} ) = 0 ， getxattr ( \"a/b/c/d/e/f/g/h/i/j\" , \"system.posix_acl_access\" , 0x7ffc8d870c30 , 132 ) = -1 ENODATA ( No data available )  ， stat ( \"a/b/c/d/e/f/g/h/i/j\" , {st_mode=S_IFREG | 0644 , st_size=4 , ...} ) = 0 ， open ( \"a/b/c/d/e/f/g/h/i/j\" , O_RDONLY ) = 35 ， This is racy : Any of the path components - either one of the directories or the ， file at the end - could be replaced with a symlink by an attacker over a second ， connection to the same share. For example , replacing a/b/c/d/e/f/g/h/i ， with a symlink to / immediately before the open (  ) call would cause smbd to open ， /j. ， To",
    "time": "2017-03-27"
}