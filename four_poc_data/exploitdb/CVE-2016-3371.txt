{
    "text": "ecve : CVE-2016-3371 ， title : Microsoft Windows 8.1 Update 2 / 10 10586 ( x86/x64 ) - NtLoadKeyEx User Hive Attachment Point Privilege Escalation ( MS16-111 ) - Windows local Exploit ， verified : Verified ， exploit_detail : / *  ， Source :  ， Windows : NtLoadKeyEx User Hive Attachment Point EoP ， Platform : Windows 10 10586 ( 32/64 ) and 8.1 Update 2 , not tested Windows 7 ， Class : Elevation of Privilege ， Summary :  ， The NtLoadKeyEx system call allows an unprivileged user to load registry hives outside of the \\Registry\\A hidden attachment point which can be used to elevate privileges. ， Description :  ， Windows Vista and above support loading per-user registry hives. Normally calling NtLoadKeyEx would require Backup/Restore privileges to do this making it useless for the average user.. However per-user hives are permitted from a normal user. When calling the Win32 API RegLoadAppKey the hive is loaded under \\Registry\\A which is a hidden attachment key and doesnt provide any obvious benefit from an EoP perspective ( especially as the root name is a random GUID ) . However it turns out that you can load the per-user hive to any attachment point such as \\Registry\\User or \\Registry\\Machine. Interestingly this works even as a sandboxed user , so it would be an escape out of EPM/Edge/Bits of Chrome etc. ， So how can we exploit this? The simplest way Ive found is to register the hive as the local system \"Classes\" key. This isnt registered by default , however a quick inspection indicates that local system does indeed refer to this key when trying to access COM registration information. So by putting an appropriate registration in \\Registry\\User\\S-1-5-18_Classes it will be loaded as a local system component and privileged execution is achieved.",
    "time": "2016-09-26"
}