{
    "text": "ecve : CVE-2014-2087 ， title : Free Download Manager - Stack Buffer Overflow - Windows dos Exploit ， verified : Verified ， exploit_detail : RCE Security Advisory ， 1. ADVISORY INFORMATION ， Product : Free Download Manager ， Vendor URL : www.freedownloadmanager.org ， Type : Stack-based Buffer Overflow [ CWE-121 ]  ， Date found : 2014-02-20 ， Date published : 2014-02-13 ， CVSSv2 Score : 9 , 3 ( AV : N/AC : M/Au : N/C : C/I : C/A : C )  ， CVE : CVE-2014-2087 ， 2. CREDITS ， This vulnerability was discovered and researched by Julien Ahrens from ， RCE Security. ， 3. VERSIONS AFFECTED ， Free Download Manager v3.9.3 build 1360 ( latest )  ， Free Download Manager v3.8 build 1173 ， Free Download Manager v3.0 build 852 ， and other older versions may be affected too. ， 4. VULNERABILITY DESCRIPTION ， A stack-based buffer overflow vulnerability has been identified in the ， Free Download Manager. ， The application parses download requests , which are added to the ， download queue , but does not properly validate the length of the ， complete download queue object when its removed from the queue by the ， user. The following function from fdm.exe ( source file :  ， Downloads_Deleted.cpp ) is triggered on deletion :  ， void CDownloads_Deleted :  : UpdateDownload ( int iItem )  ， This function reads the filename of the download object using ， CDownloads_Tasks :  : GetFileName into szFile and adds the whole URL value ， as a description ( in brackets ) via an insecure strcat (  ) sequence to ， szFile during the queue deletion process. ， Since the application follows HTTP 301 redirects , an attacker who ， controls the target HTTP server is able to send arbitrary long filename ， values to exploit this flaw. If the complete name of the queued download ， exceeds the size of szFile ( 10000 bytes )  , strcat (  ) writes outside the ， expected memory boundaries. ， This leads to a stack-based buffer overflow with an overwritten SEH ， chain or return points , resulting in remote code execution. Successful ， exploits can allow remote attackers to execute arbitrary code with the ， privileges of the user running the application. Failed exploits will ， result in a denial-of-service condition. ， This vulnerability is also exploitable locally via \"File->Import->Import ， list of downloads\" ， 5. VULNERABLE CODE PART ， // Downloads_Deleted.cpp ， void CDownloads_Deleted :  : UpdateDownload ( int iItem )  ， vmsDownloadSmartPtr dld = ( fsDownload *  ) GetItemData ( iItem )  ;  ， CHAR szFile [ 10000 ]  ;  ， CDownloads_Tasks :  : GetFileName ( dld , szFile )  ;  ， lstr",
    "time": "2014-03-17"
}