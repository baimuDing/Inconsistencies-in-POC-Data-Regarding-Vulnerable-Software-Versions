{
    "text": "ecve : CVE-2016-2856 ， title : Ubuntu < 15.10 - PT Chown Arbitrary PTs Access Via User Namespace Privilege Escalation - Linux local Exploit ， verified : Not Verified ， exploit_detail : Source :  ， Introduction ， Problem description : With Ubuntu Wily and earlier , /usr/lib/pt_chown was used to change ownership of slave pts devices in /dev/pts to the same uid holding the master file descriptor for the slave. This is done using the pt_chown SUID binary , which invokes the ptsname function on the master-fd , thus again performing a TIOCGPTN ioctl to get the slave pts number. Using the result from the ioctl , the pathname of the slave pts is constructed and chown invoked on it , see login/programs/pt_chown.c :  ， pty = ptsname ( PTY_FILENO )  ;  ， / * Get the group ID of the special `tty' group. * / ， p = getgrnam ( TTY_GROUP )  ;  ， gid = p ? p->gr_gid : getgid (  )  ;  ， / * Set the owner to the real user ID , and the group to that special ， group ID. * / ， / * Set the permission mode to readable and writable by the owner ,  ， and writable by the group. * / ， chmod ( pty , S_IRUSR | S_IWUSR | S_IWGRP ) < 0 )  ， The logic above is severely flawed , when there can be more than one master/slave pair having the same number and thus same name. But this condition can be easily created by creating an user namespace , mounting devpts with the newinstance option , create master and slave pts pairs until the number overlaps with a target pts outside the namespace on the host , where there is interest to gain ownership and then ， Methods ， Exploitation is trivial : At first use any user namespace demo to create the namespace needed , e.g. UserNamespaceExec.c ( and work with standard shell commands , e.g. to take over /dev/pts/0 :  ， test # who am I ， test pts/1 2015-12-27 12 : 00 ， test # ./UserNamespacesExec --",
    "time": "2016-02-22"
}