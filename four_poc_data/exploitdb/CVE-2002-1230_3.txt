{
    "text": "ecve : CVE-2002-1230 ， title : Microsoft Windows XP/2000/NT 4.0 - Window Message Subsystem Design Error ( 3 ) - Windows local Exploit ， verified : Verified ， exploit_detail : // source :  ， A serious design error in the Win32 API has been reported. The issue is related to the inter-window message passing system. This vulnerability is wide-ranging and likely affects almost every Win32 window-based application. Attackers with local access may exploit this vulnerability to elevate privileges if a window belonging to another process with higher privileges is present. One example of such a process is antivirus software , which often must run with LocalSystem privileges. ， Microsoft has released a statement regarding this issue. Please see the ， A paper , entitled \"Win32 Message Vulnerabilities Redux\" has been published by iDEFENSE that describes another Windows message that may be abused in a similar manner to WM_TIMER. Microsoft has not released patches to address problems with this message. There are likely other messages which can be exploited in the same manner. ， Another proof-of-concept has been released by Brett Moore in a paper entitled \"Shattering SEH III\". This paper demonstrates how Shatter attacks may be used against applications which make use of progress bar controls. ， Brett Moore has released a paper entitled \"Shattering By Example\" which summarizes previous Shatter attacks , discusses new techniques and also provides an exploit which abuses Windows statusbars using WM_SETTEXT , SB_SETTEXT , SB_GETTEXTLENGTH , SB_SETPARTS and SB_GETPARTS messages. Please see the attached reference to the paper for more details. ，  * Statusbar Control Shatter exploit ，  * Demonstrates the use of a combination of windows messages to ;  ，  * - brute force a useable heap address ，  * - place structure information inside a process ，  * - inject shellcode to known location ，  * - overwrite 4 bytes of a critical memory address ，  * 4 Variables need to be set for proper execution. ，  * - tWindow is the title of the programs main window ，  * - sehHandler is the critical address to overwrite ，  * - shellcodeaddr is the data space to inject the code ，  * - heapaddr is the base heap address to start brute forcing ，  * Local shellcode is Win2kSp4 ENG Hardcoded because of unicode issues ，  * Try it out against any program with a progress bar",
    "time": "2002-08-06"
}