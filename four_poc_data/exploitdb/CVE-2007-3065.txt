{
    "text": "ecve : CVE-2007-3065 ， title : Particle Gallery 1.0.1 - SQL Injection - PHP webapps Exploit ， verified : Verified ， exploit_detail :  #  ! /usr/bin/php -q -d short_open_tag=on ， <?php ， / *  ， Explanation :  ， Function dbSecure ( functions.php )  :  ，  $ code = stripslashes (  $ code )  ;  ，  $ code = mysql_real_escape_string (  $ code )  ;  ， } elseif ( function_exists ( \"mysql_escape_string\" )  ) { ，  $ code = mysql_escape_string (  $ code )  ;  ， } else { ，  $ code = addslashes (  $ code )  ;  ， Excellent function for SQL input validation , yet we don't even need this function here as we don't ， need to add any quotes...haha !  ， Vulnerable Code ( viewimage.php )  :  ，  $ t->set_var ( \"COMMENT_ID\" , \"\" )  ;  ，  $ sql = \"SELECT * FROM \" . $ dbprefix . \"comments WHERE commentid = \" . dbSecure (  $ _GET [ \"editcomment\" ]  )  ;  ，  $ cme = $ db->execute (  $ sql )  ;  ， // allow user to edit the comment ，  $ t->set_var ( \"COMMENTS_TYPE\" , \"Edit\" )  ;  ，  $ t->set_var ( \"COMMENT_ID\" ,  $ cme->fields [ \"commentid\" ]  )  ;  ，  $ t->set_var ( \"COMMENTS_FORM\" ,  $ core . \"&amp ; commentspage=\" . $ page )  ;  ，  $ t->set_var ( \"COMMENTS_TEXT\" , un (  $ _POST [ \"comments\" ]  )  )  ;  ， } else { ，  $ t->set_var ( \"COMMENTS_TEXT\" ,  $ cme->fields [ \"comments\" ]  )  ; ",
    "time": "2007-06-01"
}