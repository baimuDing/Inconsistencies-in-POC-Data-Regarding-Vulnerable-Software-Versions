{
    "text": "ecve : CVE-2019-1019 ， title : Microsoft Windows 10.0.17134.648 - HTTP -> SMB NTLM Reflection Leads to Privilege Elevation - Windows local Exploit ， verified : Verified ， exploit_detail : VULNERABILITY DETAILS ， It's possible to use the NTLM reflection attack to escape a browser sandbox in the case where the ， sandboxed process is allowed to create TCP sockets. In particular , I was able to combine the issues ， mentioned below with a bug in Chromium to escape its sandbox. ， HTTP -> SMB NTLM reflection ， This is a long known attack that was described , for example , in ， As far as I can tell , MS16-075 was ， supposed to to fix it by blocking attempts to reflect NTLM authentication operating in the same ， machine mode ( not sure about the actual internal term for that ) . However , it's still possible to ， reflect NTLM authentication that works in the regular remote mode , and an attacker can force the ， parties to use the remote mode , for example , by clearing the NTLMSSP_NEGOTIATE_OEM_DOMAIN_SUPPLIED ， flag in the initial NEGOTIATE_MESSAGE message. ， In the actual exploit , a compromised sandboxed process acts as both a web server and an SMB client ,  ， and asks the browser to visit The browser receives an NTLM ， authentication request and considers the `localhost` domain to be safe to automatically log on with ， the current user's credentials. The sandboxed process forwards the corresponding packets to the ， local SMB server. ， The problem here is that since the established session is considered remotely authenticated , it's ， not allowed to access administrative shares unless the browser process runs at the high integrity ， level. Therefore , another bug is required to gain file system access. ， Insufficient path check in EFSRPC ， The Encrypting File System Remote Protocol is a Remote Procedure Call interface that is used to ， manage data objects stored in an encrypted form. It supports backing up and restoring files over ， SMB , among other things. Functions like `EfsRpcOpenFileRaw` implement security checks , i.e. , they ， forbid remote users to pass regular file paths. However , if the attacker passes a UNC path of the ， form `\\localhost\\C $ \\...` , `lsass.exe` will initiate a new SMB connection while impersonating the ， calling user , but this time using the same machine mode authentication ; therefore it will be ， permitted to access the C $ share. ， The exploit saves the payload on the user's disk ( the easiest way might be just to force it to be ， auto-downloaded as a .txt file ) and calls the EFSRPC methods to copy it as an .exe file to the ， user's Startup folder. ， There's also another path check bypass that has been found by James Forshaw. `EfsRpcOpenFileRaw` ， accepts file paths starting with `\\\\.\\",
    "time": "2019-07-12"
}