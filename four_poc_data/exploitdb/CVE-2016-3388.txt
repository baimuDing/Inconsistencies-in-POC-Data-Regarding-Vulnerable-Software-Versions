{
    "text": "ecve : CVE-2016-3388 ， title : Microsoft Windows Edge/Internet Explorer - Isolated Private Namespace Insecure DACL Privilege Escalation ( MS16-118 ) - Windows local Exploit ， verified : Verified ， exploit_detail : / *  ， Source :  ， Windows : Edge/IE Isolated Private Namespace Insecure DACL EoP ， Platform : Windows 10 10586 , Edge 25.10586.0.0 not tested 8.1 Update 2 or Windows 7 ， Class : Elevation of Privilege ， Summary :  ， The isolated private namespace created by ierutils has a insecure DACL which allows any appcontainer process to gain elevated permissions on the namespace directory which could lead to elevation of privilege. ， Description :  ， In iertutils library IsoOpenPrivateNamespace creates a new Window private namespace ( which is an isolated object directory which can be referred to using a boundary descriptor ) . The function calls CreatePrivateNamespace , setting an explicit DACL which gives the current user , ALL APPLICATION PACKAGES and also owner rights of GENERIC_ALL. This is a problem because this is the only security barrier protecting access to the private namespace , when an application has already created it , this means that for example we can from any other App Container open IEs or Edges with Full Access. ， Now how would you go about exploiting this? All the resources added to this isolated container use the default DACL of the calling process ( which in IEs case is usually the medium broker , and presumably in Edge is MicrosoftEdge.exe ) . The isolated container then adds explicit Low IL and Package SID ACEs to the created DACL of the object. So one way of exploiting this condition is to open the namespace for WRITE_DAC privilege and add inheritable ACEs to the DACL. When the kernel encounters inherited DACLs it ignores the tokens default DACL and applies the inherited permission. ， Doing this would result in any new object in the isolated namespace being created by Edge or IE being accessible to the attacker , also giving write access to resources such as IsoSpaceV2_ScopedTrusted which are not supposed to be writable for example from a sandboxed IE tab. Ive not spent much time actually working out what is or isnt exploitable but at the least youd get some level of information disclosure and no doubt EoP. ， Note that the boundary name isnt an impediment to gaining access to the namespace as its something like IEUser_USERSID_MicrosoftEdge or IsoScope_PIDOFBROKER , both of which can be trivially determine or in worse case brute forced. You cant create these namespaces from a lowbox token as the boundary descriptor doesnt have the package SID , but in this case we dont need to care. Im submitted a bug for the other type of issue.",
    "time": "2016-10-20"
}