{
    "text": "ecve : CVE-2004-0409 ， title : XChat 1.8.0/2.0.8 socks5 - Remote Buffer Overflow - Linux remote Exploit ， verified : Verified ， exploit_detail : / *  [ X-Chat [ v1.8.0 - v2.0.8 ]  : socks-5 remote buffer overflow exploit. ]  *  ，  *  *  ，  * by : vade79/v9 v9 fakehalo deadpig org ( fakehalo/realhalo )  *  ，  *  *  ，  * X-Chat homepage :  *  ，  *  *  ，  *  *  ，  * compile :  *  ，  * cc xxchat-socks5.c -o xxchat-socks5 *  ，  *  *  ，  * trigger bug/workings ( X-Chat socks-5 comminucation )  :  *  ，  * 0x05 , 0x00 *  ，  * 0x05 , 0x00 , 0x00 , 0x03 *  ，  * 0x?? ( the size of the following \"data\" , 255MAX ( char/int8 )  )  *  ，  * 0x?? , 0x?? , 0x?? ... ( \"data\" )  *  ，  *  *  ，  * ie. \"\\x05\\x00\\x05\\x00\\x00\\x03\\xffxxxxxxxxxxxxxxxxxxxxxxxxxxxx...\" *  ，  *  *  ，  * the \"data\" , limited by the previous byte , is then copied into a *  ，  * 10 byte buffer labeled buf [  ] . the idea is to set the size of *  ，  * the incoming data to a larger size than expected ( ie. 0xff/255MAX )  ,  *  ，  * followed by sending that amount of data to exceed the 10 byte *  ，  * buffer boundary and overwrite memory addresses ( stack based ) . *  ，  *  *  ，  * the problem with the size limit is that it is defined in one *  ，  * character ( char/int8 )  , making a maximum of up to 255 bytes to be *  ，  * written to buf [  ] . so , this only leaves about ~ 100+ nops breathing *  ，  * room per offset. another problem is that the location of the *  ，  * shellcode depends on where/what X-Chat has already done. those *  ，  * two things together make for a very unpractical \"in the wild\" *  ，  * exploit scenario. *  ，  *  *  ，  * i just saw several cryptic advisories about this bug , so i figured *  ，  * i would look into it and see exactly what it was. *  ，  *  *  ，  * if X-Chat attempts to connect to a server ( through socks-5 )  *  ，  * immediately upon the start of X-Chat ( \"autoconnect\" ) it will make *  ，  * the shellcode location a bit easier to find. on both source *  ，  * compiled version 1.8.0 ( on rh7.1 ) and mandrake's rpm static binary *  ，  * version 2.0.5 ( on mdk9.1 ) an offset of 2600 worked. *  ，  *  *  ，  * note : the first thing that is sent to the bindshell , upon *  ，  * successful exploitation , is \"killall -9 xchat\". this will kill *  ，  * X-Chat , but still keep the bindshell alive/active. when searching *  ，  * for the correct offset , use increments of 100 ( 100 , 200 , 300 , ... ) . * ",
    "time": "2004-05-05"
}