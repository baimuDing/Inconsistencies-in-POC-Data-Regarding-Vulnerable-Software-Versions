{
    "text": "ecve : CVE-2017-8491 ， title : Microsoft Windows - 'IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS' volmgr Pool Memory Disclosure - Windows dos Exploit ， verified : Verified ， exploit_detail : / *  ， Source :  ， We have discovered that the handler of the IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS IOCTL in volmgr.sys discloses portions of uninitialized pool memory to user-mode clients , due to output structure alignment holes. ， On our test Windows 7 32-bit workstation , an example layout of the output buffer is as follows :  ， --- cut --- ， 00000000 : 00 00 00 00 ff ff ff ff 00 00 00 00 ff ff ff ff ................ ， 00000010 : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ ， --- cut --- ， Where 00 denote bytes which are properly initialized , while ff indicate uninitialized values copied back to user-mode. The output data is returned in a VOLUME_DISK_EXTENTS structure [ 1 ]  , which in turn contains a list of DISK_EXTENT structures [ 2 ] . If we map the above shadow bytes to the structure definitions , it turns out that the uninitialized bytes correspond to alignment holes after the NumberOfDiskExtents and DiskNumber fields ( both of type DWORD , but there is an 8-byte alignment due to other LARGE_INTEGER fields ) . The concrete number of leaked bytes depends on the number of entries returned by the IOCTL. ， The issue can be reproduced by running the attached proof-of-concept program on a system with the Special Pools mechanism enabled for ntoskrnl.exe. Then , it is clearly visible that bytes at the aforementioned offsets are equal to the markers inserted by Special Pools , and would otherwise contain leftover data that was previously stored in that memory region :  ， --- cut --- ， 00000000 : 01 00 00 00 [ b3 b3 b3 b3 ] 00 00 00 00 [ b3 b3 b3 b3 ] ................ ， 00000010 : 00 00 50 06 00 00 00 00 00 00 90 39 06 00 00 00 ..P........9.... ， --- cut --- ， Repeatedly triggering the vulnerability could allow local authenticated attackers to defeat certain exploit mitigations ( kernel ASLR ) or read other secrets stored in the kernel address space. ，  * /",
    "time": "2017-06-21"
}