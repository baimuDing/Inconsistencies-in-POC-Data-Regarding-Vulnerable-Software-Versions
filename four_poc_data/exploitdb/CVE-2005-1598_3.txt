{
    "text": "ecve : CVE-2005-1597 CVE-2005-1598 ， title : Invision Power Board ( IP.Board ) < 2.0.3 - Multiple Vulnerabilities - PHP webapps Exploit ， verified : Not Verified ， exploit_detail : IP.Board Multiple Vulnerabilities ， Vendor : Invision Power Services ， Product : IP.Board ， Version : <= 2.0.3 ， Website :  ， BID : 13529 13534 ， CVE : CVE-2005-1597 CVE-2005-1598 ， OSVDB : 16297 16298 ， SECUNIA : 15265 ， PACKETSTORM : 39098 ， Description :  ， Invision Power Board ( IPB ) is a professional forum system that has been built from the ground up with speed and security in mind. It is used by a great many people all over the world. All versions of Invision Power Board are vulnerable to a serious SQL Injection vulnerability. An attacker does not have to be logged in , or even have access or permission to view the forums in order to exploit this vulnerability. Users should upgrade immediately. ， Cross Site Scripting :  ， It is possible for an attacker to conduct Cross Site Scripting attacks in all versions of invision power board prior to the recently released 2.0.4. This vulnerability exists due to data submitted to the \"highlite\" parameter not being sanatized properly when displaying search results. The same issue also exists in \"sources/topics.php\". The only condition is that the data sent to the \"highlite\" parameter must be double hex encoded data in order to bypass the global sanatation methods. ， SQL Injection :  ， I have discovered a serious SQL Injection issue in Invision Power Board that affects most all versions of Invision Power Board regardless of most server configurations. Also , because of the fact that UNION functionality is not needed an attacker need not worry if the victim is running an up to date version of MySQL. The vulnerability lies in the way that Invision Board handles certain types of \"login methods\". Let us have a look at the source of 'sources/login.php' ，  $ mid = intval (  $ std->my_getcookie ( 'member_id' )  )  ;  ，  $ pid = $ std->my_getcookie ( 'pass_hash' )  ;  ， If (  $ mid and $ pid )  ，  $ DB->query ( \"SELECT * FROM ibf_members WHERE id= $ mid AND password=' $ pid'\" )  ;  ，  $ ibforums->member = $ member ;  ，  $ ibforums->session_id = \"\" ;  ，  $ std->my_setcookie ( 'session_id' , '0' , -1 )  ;  ， This particular portion of code is from the IPB 1. * series , but the vulnerability seems to exists on all versions of IPB ( both the 1. * and 2. * series ) . Anyway , as we can see from the above code the variable $ mid is properly forced into an integer datatype and as a result is safe to pass to the query , but what about $ pid? In the above code we see that the value of $ pid is returned from the my_getcookie (  ) function within the FUNC",
    "time": "2015-05-05"
}