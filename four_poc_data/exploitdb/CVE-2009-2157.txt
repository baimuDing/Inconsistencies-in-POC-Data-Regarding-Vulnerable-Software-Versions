{
    "text": "ecve : CVE-2009-2161 CVE-2009-2160 CVE-2009-2159 CVE-2009-2158 CVE-2009-2157 CVE-2009-2156 ， title : TorrentTrader Classic 1.09 - Multiple Vulnerabilities - PHP webapps Exploit ， verified : Verified ， exploit_detail :  [ waraxe-2009-SA # 074 ] - Multiple Vulnerabilities in TorrentTrader Classic 1.09 ， Author : Janek Vind \"waraxe\" ， Date : 15. June 2009 ， Location : Estonia , Tartu ， Web :  ， Description of vulnerable software :  ， TorrentTrader is a feature packed and highly customisable PHP/MySQL Based ， BitTorrent tracker. Featuring integrated forums and plenty of administration ， options. Please visit www.torrenttrader.org for the support forums. ， List of found vulnerabilities ， 1. Sql Injection vulnerability in \"account-inbox.php\" ， Reasons :  ， 1. unsanitized user submitted parameter \"origmsg\" is used in sql query ， Preconditions :  ， 1. attacker must be logged in as valid user ， Test :  ， Result : \"MYSQL Error has occurred ! \" ， ----------------------------- [ source code start ] ------------------------------- ，  $ msg = trim (  $ msg )  ;  ，  $ res = mysql_query ( \"SELECT id , acceptpms , notifs , email , UNIX_TIMESTAMP ( last_access ) as la FROM users WHERE username=\".sqlesc (  $ receiver ) .\"\" )  ;  ，  $ user = mysql_fetch_assoc (  $ res )  ;  ，  $ message = \"Username not found.\" ;  ， mysql_query ( \"DELETE FROM messages WHERE id= $ origmsg\" ) or sqlerr (  )  ;  ， ----------------------------- [ source code end ] --------------------------------- ， 2. Weak password generation algorithm in \"account-recover.php\" ， Reasons :  ， 1. generated password is weak and can be easily bruteforced ， Preconditions :  ， 1. attacker must know email address associated with target's account ， Torrenttrader contains password reseting functionality :  ， Anyone can initiate password reset , only condition is , that target's email ， address must be know. Torrenttrader will check email address and after successful ， validation new , temporal password will be generated and sent to that email address. ， Specific autogenerated password appears to be random number between 10000 and 50000 ,  ， so basically there can be only 40000 possible temporal passwords. It's easy to ， write bruteforce script , which will try all possible password combinations. ， This process can take couple of hours or more , but eventually the password will ， be guessed and target account becomes compromised. ， ----------------------------- [ source code start ] ------------------------------- ，  $ email = trim (  $ _POST [ \"email\" ]  )  ;  ，  $ msg = \"\" . NOT_VAILD_EMAIL . \"\" ;  ，  $ kind = \"Error\" ;  ，  $ res = mysql_query ( \"SELECT * FROM users WHERE email=\" . sqlesc (  $ email ) . \" LIMIT 1\" )  ;  ，  $ arr = mysql_fetch_assoc (  $ res )  ;  ，  $ msg = \"\" . EMAIL_INVALID . \"\" ;  ，  $ kind = \"Error\" ;  ，  $ newpassword = rand ( 10000 , 50000 )  ;  ，  $ md5pass = md5 (  $ newpassword )  ;  ， ----------------------------- [ source code end ] --------------------------------- ， 3. Unauthorized database backup vulnerability in \"backup-database.php\" ， Reasons :  ， 1. missing access control ， Preconditions :  ， 1. mysqldump utility must be available ， 2. gzip utility must be available ， 3. target directory must be writable ， 4. database name must be known in order to successfully guess archive filename ， Test :  ， Resulting message : \"Database backup successful , entry inserted into database.\" ， ----------------------------- [ source code start ] ------------------------------- ， system ( s",
    "time": "2009-06-15"
}