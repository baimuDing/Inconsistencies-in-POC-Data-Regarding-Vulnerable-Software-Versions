{
    "text": "ecve : CVE-2019-0543 ， title : Microsoft Windows 10 - SSPI Network Authentication Session 0 Privilege Escalation - Windows local Exploit ， verified : Verified ， exploit_detail : Windows : SSPI Network Authentication Session 0 EoP ， Platform : Windows 10 1803/1809 ( not tested earlier versions )  ， Class : Elevation of Privilege ， Security Boundary ( per Windows Security Service Criteria )  : Session boundary ， Summary : Performing an NTLM authentication to the same machine results in a network token which can be used to create arbitrary processes in session 0. ， Description :  ， Typically performing a loopback authentication would result in a short circuited authentication NTLM challenge response which will just return to the caller a copy of the token which initiated the authentication request. This token has the same properties , such as elevation status , authentication ID and session ID as the caller and so isnt that interesting from an exploitation perspective. ， However if you initiate the authentication process by supplying a SEC_WINNT_AUTH_IDENTITY_EX structure to AcquireCredentialsHandle which has the username and domain fields set , but not the password the authentication process will instead return an authenticated network token. This is interesting because LSASS doesnt modify the session ID of the token , which means the returned token is set to session ID 0 ( network authentication doesnt spin up a new console session ) . If we do the authentication to ourselves well meet all the requirements to impersonate this token , its the same user and the same privilege level so we can then use this to spawn a new process running in session 0 , where we could potentially elevate our privileges by modifying global named objects or making it easier to exploit case 47435. ， Note that not specifying any buffer to pAuthData in AcquireCredentialsHandle or passing SEC_WINNT_AUTH_IDENTITY_EX but with empty username and domain fields results in the normal loopback authentication. ， While Ive not verified this it might also work in an AppContainer if the Enterprise Authentication capability has been granted , which is allowed in some of the Edge sandbox profiles. The normal short circuit authentication would return the AC token but this approach might return the full token. With a full token you might be able to elevate privileges.",
    "time": "2019-01-14"
}