{
    "text": "ecve : CVE-2007-2339 ， title : Phorum 5.1.20 - 'pm.php' Recipient Name SQL Injection - PHP webapps Exploit ， verified : Verified ， exploit_detail : source :  ， Phorum is prone to multiple input-validation vulnerabilities , including an unauthorized-access issue , privilege-escalation issue , multiple SQL-injection issues , and cross-site scripting issues , because the application fails to sufficiently sanitize user-supplied input. ， Exploiting these issues could allow an attacker to steal cookie-based authentication credentials , compromise the application , access or modify sensitive data , or exploit latent vulnerabilities in the underlying database implementation. ， Phorum 5.1.20 is affected ; prior versions may also be vulnerable. ， Let's look at source code of \"include/db/mysq.php\" ~ line 1881 :  ， ------------------ [ source code ] ---------------------- ，  $ PHORUM = $ GLOBALS [ \"PHORUM\" ]  ;  ，  $ conn = phorum_db_mysql_connect (  )  ;  ，  $ user_ids=implode ( \" , \" ,  $ user_id )  ;  ， } else { ，  $ user_ids= ( int )  $ user_id ;  ，  $ users = array (  )  ;  ，  $ sql = \"select * from { $ PHORUM [ 'user_table' ] } where user_id in (  $ user_ids ) \" ;  ，  $ res = mysql_query (  $ sql ,  $ conn )  ;  ， ------------------ [ /source code ] ---------------------- ， As we can see , if \" $ user_id\" is array , then there is no sanitize against data before ， using in sql query. ， After some research I have found a way to use this bug for sql injection. For this ,  ， first of all , potential attacker must have valid user account in specific Phorum-powered ， website and he/she must be logged in. And then let's try this proof-of-concept html file :  ， ------------------ [ PoC exploit ] -----------------------",
    "time": "2007-04-23"
}