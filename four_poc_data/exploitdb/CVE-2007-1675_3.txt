{
    "text": "ecve : CVE-2007-1675 ， title : Lotus Domino IMAP4 Server 6.5.4 - Remote Buffer Overflow - Windows remote Exploit ， verified : Verified ， exploit_detail :  ，  # Lotus Domino IMAP4 Server Release 6.5.4 / Windows 2000 Advanced Server x86 Remote Exploit ，  # Vulnerable : IBM Lotus Domino <= 7.0.2 6.5.5 FP2 ( tested 6.5.4 )  ，  # Authors : Dominic Chell <dmc @ digitalapocalypse.net> & prdelka ，  # Exploitation steps :  ，  # 1 ) The instruction \"call dword [ ecx ] \" is performed with user supplied ECX ，  # 2 ) EAX reference our buffer from retaddr onward ，  # 3 ) we put pointer in ECX to a pointer referencing \"call eax\" ，  # 4 ) a small payload decrements eax and then jmp's into the eax buffer due ，  # to size limitations. ，  # 5 ) our larger payload is then executed. ，  # muts exploit would not work for us , his egghunt uses 0x2e which is converted ，  # to 0x09 ( .'s to [ tab ] 's ) and his return address was not found on our test ，  # environment. ，  # Finding a Target :  ，  # To find a target , attach a debugger to nimap.exe , cause the application ，  # to crash. Then use search function to find \"call eax\" or equivilant ，  # instruction in memory. Then , take the pointer to eax , such as \"0x77ff1122\" ，  # and search for another location in memory that has \"0x11 0xff 0x77\". This ，  # will be utilised for a return address if no instruction modify eax or ，  # subvert execution to another place in memory. ，  # Thanks to : nemo , hdm , jf , Winny Thomas , muts ，  # Note : it takes a few minutes for the egghunter to find the payload in memory ，  # For example : ",
    "time": "2007-07-20"
}