{
    "text": "ecve : CVE-2016-1575 ， title : Ubuntu 14.04/15.10 - User Namespace Overlayfs Xattr SetGID Privilege Escalation - Linux local Exploit ， verified : Not Verified ， exploit_detail : Source :  ， Introduction ， Problem description :  ， Linux user namespace allows to mount file systems as normal user , including the overlayfs. As many of those features were not designed with namespaces in mind , this increase the attack surface of the Linux kernel interface. ， Overlayfs was intended to allow create writeable filesystems when running on readonly medias , e.g. on a live-CD. In such scenario , the lower filesystem contains the read-only data from the medium , the upper filesystem part is mixed with the lower part. This mixture is then presented as an overlayfs at a given mount point. When writing to this overlayfs , the write will only modify the data in upper , which may reside on a tmpfs for that purpose. ， Due to inheritance of Posix ACL information ( xattrs ) when copying up overlayfs files and not cleaning those additional and unintended ACL attribues , SGID directories may become user writable , thus allowing to gain privileges of this group using methods described in SetgidDirectoryPrivilegeEscalation ( On standard Ubuntu system , this allows to gain access to groups staff , mail , libuuid. ， Methods ， Target Selection :  ， Suitable target directories can be easily found using find / -perm -02020 2> /dev/null. On standard Ubuntu system those are :  ， /usr/local/lib/python3.4 ( root.staff )  ， /var/lib/libuuid ( libuuid.libuuid )  ， /var/local ( root.staff )  ， /var/mail ( root.mail )  ， Exploitation :  ， Exploitation can be done just combining standard tools with the SetgidDirectoryPrivilegeEscalation ( exploit. The following steps include command variants needed for different operating systems. They have to be executed in two processes , one inside the user namespace , the other one outside of it. ， Inside :  ， test $ wget -q ， test $ gcc -o CreateSetgidBinary CreateSetgidBinary.c ， test $ gcc -o UserNamespaceExec UserNamespaceExec.c ， test $ gcc -o SuidExec SuidExec.c ， test $ ./UserNamespaceExec --",
    "time": "2016-11-22"
}