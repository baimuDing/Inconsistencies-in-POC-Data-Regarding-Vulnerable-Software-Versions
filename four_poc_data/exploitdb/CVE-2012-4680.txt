{
    "text": "ecve : CVE-2012-4680 ， title : IOServer 1.0.18.0 - Directory Traversal - Windows webapps Exploit ， verified : Not Verified ， exploit_detail : ===================================================================== ， BEGIN Foofus.net Security Advisory : foofus-20120817 BEGIN ， Title : IOServer \"Root Directory\" Trailing Backslash Web Server Vuln ， Allows : Arbitrary File Access , Directory Listing , Directory Traversal ， CVSS Base / Temporal / Overall Scores : 7.8 / 6.4 / 6.4 ， Advisory Version : 2 ( first publicly released version is 2 )  ， Advisory Release Date : 2012-08-17 ， Advisory Last Updated : 2012-08-17 ， Vendor : IOServer Pty Ltd. ， Affected Product : IOServer 1.0.18.0 ( and earlier? )  ， Issue Status : fixed version and workarounds available ， Link :  ， 1. Summary ， == ======= ， IOServer is a piece of industrial control software that runs on Windows. ， It contains a built-in web server to support the \"XML Server\" feature. ， This web server can be abused to download any file on the file system ， without authentication , if the \"Root Directory\" setting does not contain ， a trailing backslash. Note that a sample configuration provided with the ， product exhibits a vulnerable configuration. ， 2. Description ， == =========== ， The vendor's web site describes IOServer thusly :  ， \"OPC ( OLE for Process Control ) Server for Windows NT 4.0 / 95 / 98 / ， ME / 2000 / 2003 / XP / 2008 / 7. Interface to multiple protocols ， through a single OPC Server. This software allows OPC clients such as ， HMI ( Human Machine Interface ) and SCADA ( Supervisory Control and Data ， Acquisition ) systems to exchange plant floor data with PLC ( Programmable ， Logic Controllers ) .\" ， If the \"XML Server\" feature is turned on ( apparently by configuring a ， valid \"Root Directory\" on the \"XML Server\" tab )  , the integrated web ， server listens on the configured port ( 81 by default ) . If the \"Root ， Directory\" configuration value does not contain a trailing backslash ,  ， then these issues exist. ， A directory traversal vulnerability exists such that the web server can ， be tricked to serve up any file on the server , outside of the configured ， \"Root Directory\". On Windows , one common thing to do with an issue like ， this is to download the backup copy of the SAM , in order to retrieve ， password hashes and mount an offline attack on them. Any other ， potentially sensitive file on the server can be accessed this way as ， well , if the attacker knows the path to it. ， Note that directory traversal is only needed if you want to break out of ， the \"Root Directory\". The web server will serve up files inside the ， \"Root Directory\" just by asking it for them. This may or may not be ， considered a vulnerability , depending on the expectations of the ， administrator. ， Also , the web server allows directory listings in some cases , whether ， inside or outside the \"Root Directory\". Again , this may or may not be ， considered a vulnerability depending on expectations. ， Note also that the \"XML Server Settings\" tab contains fields for a \"Read ， Password\" and \"Write Password\" , which are apparently intended to only ， restrict access to the devices via the XML web interface ( they are not ， intended to restrict access to other content served by the web server ) . ， By default , they are set to blank. But due to their intended use of ， resticting device access , they do nothing to stop access to the file ， system as described here even if they are set to some value. ， 3.",
    "time": "2012-08-20"
}