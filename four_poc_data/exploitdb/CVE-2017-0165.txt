{
    "text": "ecve : CVE-2017-0165 ， title : Microsoft Windows 10 ( Build 10586 ) - 'IEETWCollector' Arbitrary Directory/File Deletion Privilege Escalation - Windows local Exploit ， verified : Verified ， exploit_detail : / *  ， Source :  ， Windows : IEETWCollector Arbitrary Directory/File Deletion EoP ， Platform : Windows 10 10586 ( not tested on anything else )  ， Class : Elevation of Privilege ， Summary :  ， When cleaning up an ETW session the IEETWCollector service deletes its files and directories as LocalSystem allowing a user to delete arbitrary files or directories on the system. ， Description :  ， When the IEETWCollection session is closed the service will call CIEEtwSessionData :  : DeleteSessionFiles which will delete the ETW log file and the directory in which it was stored. The directory is specified by the user during the CIEEtwCollector :  : CreateCollectionSession call to set up the session. While creating the log directory is done under impersonation ( so we cant create arbitrary directories ) the cleanup is not. Therefore we can use symbolic link attacks to redirect the ETL and directory to arbitrary files or directory and when cleanup occurs it will delete them as LocalSystem. ， Note due to the requirements for symbolic link attacks this should only be exploitable from a normal user even though the service is accessible from any AppContainer or Low IL application. Also worth noting that the ETL file is created outside of impersonation and so could also be redirected to create an arbitrary file , although the contents would be restricted to what could be sent to the logger. As a final note it looks like CIEEtwSessionData :  : DeleteSessionFiles is called via a number of routes , including when the COM object is released and when the process exits. Therefore using CoImpersonateClient isnt appropriate ( even in the Release case , as due to COM GC Release might not be called in the context of a remote call )  , you probably want to store the user token with the session and impersonate that in all situations. ， While deleting files/directories might not seem to be too important you can use it to delete files in ProgramData or Windows\\Temp which normally are OWNER RIGHTS locked to the creator. This could then be recreated by the user due to default DACLs and abuse functionality of other services/applications.",
    "time": "2017-04-20"
}