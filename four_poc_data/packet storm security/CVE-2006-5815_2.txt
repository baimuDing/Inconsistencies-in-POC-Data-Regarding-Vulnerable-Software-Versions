{
    "text": "title : vd_proftpd.pm.txt  ， detail : A remotely exploitable stack overflow vulnerability has been found in ProFTPD server. The vulnerability allows a remote authenticated attacker to gain root privileges. Versions below 1.3.0a are affected. Exploit included.  ， cve : advisories | CVE-2006-5815  ，  ， desc : Hi all ,   ， Name : ProFTPD remote buffer overflow vulnerability  ， Vendor : http : /www.proftpd.org  ， Release date : 27 Nov , 2006  ， URL : http : /www.gleg.net/proftpd.txt  ， CVE : CVE-2006-5815  ， Author : Evgeny Legerov <research @ gleg.net>  ， I. DESCRIPTION  ， A remotely exploitable stack overflow vulnerability has been found in ProFTPD  ， server.  ， The vulnerability allows a remote authenticated attacker to gain root  ， privileges.  ， II. DETAILS  ， The vulnerability exists in sreplace (  ) function from src/support.c  ， Oversimplified analysis of the vulnerability is below :   ， \"  ， char * sreplace ( pool * p , char * s , . ) {  ， va_list args ;   ， char * m ,  * r ,  * src = s ,  * cp ;   ， char * mptr ,  * rptr ;   ， char * marr [ 33 ]  ,  * rarr [ 33 ]  ;   ， char buf [ PR_TUNABLE_PATH_MAX ] = {'\\0'} ,  * pbuf = NULL ;   ， size_t mlen = 0 , rlen = 0 , blen ;   ， int dyn = TRUE ;   ， cp = buf ;   ，  * cp = '\\0' ;   ， memset ( marr , '\\0' , sizeof ( marr )  ;   ， memset ( rarr , '\\0' , sizeof ( rarr )  ;   ， blen = strlen ( src ) + 1 ;   ， va_start ( args , s )  ;   ，  ， char * tmp = NULL ;   ， size_t count = 0 ;   ，   ， / * Increase the length of the needed buffer by the difference between  ，  * the given match and replacement strings , multiplied by the number  ，  * of times the match string occurs in the source string.  ，  ， tmp = strstr ( s , m )  ;   ，  ， pr_signals_handle (  )  ;   ， count+ ;   ， / * Be sure to increment the pointer returned by strstr ( 3 )  , to  ，  * advance past the beginning of the substring for which we are  ，  * looking. Otherwise , we just loop endlessly , seeing the same  ，  * value for tmp over and over.  ，  ， tmp += strlen ( m )  ;   ， tmp = strstr ( tmp , m )  ;   ， }  ， / * We are only concerned about match/replacement strings that actually  ，  * occur in the given string.  ，   ， blen += count *  ( strlen ( r ) - strlen ( m )  ;   ， marr [ mlen ] = m ;   ， rarr [ mlen+ ] = r ;   ， }  ， }  ， va_end ( args )  ;   ， / * Try to handle large buffer situations ( i.e. escaping of  ，  * PR_TUNABLE_PATH_MAX  ，  *  ( >2048 ) correctly , but do not allow very big buffer sizes , that may  ，  * be dangerous ( BUFSIZ may be defined in stdio.h ) in some library  ，  * functions.",
    "time": "Dec 1, 2006"
}