{
    "text": "title : Zabbix Agent 3.0.1 mysql.size Shell Command Injection  ， detail : Zabbix Agent version 3.0.1 suffers from a remote shell command injection vulnerability via mysql.size.  ， cve : advisories | CVE-2016-4338  ，  ， desc : CVE-2016-4338 : Zabbix Agent 3.0.1 mysql.size shell command injection  ，  ， Affected products  ，  ， At least Zabbix Agent 1 : 3.0.1-1+wheezy from  ， http : /repo.zabbix.com/zabbix/3.0/debian is vulnerable. Other versions  ， were not tested.  ， Background  ，  ， \"Zabbix agent is deployed on a monitoring target to actively monitor  ， local resources and applications ( hard drives , memory , processor  ， statistics etc ) .  ， The agent gathers operational information locally and reports data to  ， Zabbix server for further processing. In case of failures ( such as a  ， hard disk running full or a crashed service process )  , Zabbix server  ， can actively alert the administrators of the particular machine that  ， reported the failure.  ， Zabbix agents are extremely efficient because of use of native system  ， calls for gathering statistical information.\"  ， - https : /www.zabbix.com/documentation/3.0/manual/concepts/agent  ， Description  ，  ， Zabbix agent listens on port 10050 for connections from the Zabbix  ， server. The commands can be built-in or user-defined.  ， The mysql.size user parameter defined in  ， /etc/zabbix/zabbix_agentd.d/userparameter_mysql.conf takes three input  ， parameters and uses a shell script to generate an SQL query :   ， UserParameter=mysql.size [  *  ]  , echo \"select sum (  $  ( case \" $ 3\" in both | \" ) echo \"data_length+index_length\" ; data | index ) echo \" $ 3_length\" ; free ) echo \"data_free\" ; esac ) from information_schema.tables $  (  [ \" $ 1\" = \"all\" |  ! \" $ 1\" ]  | echo \" where table_schema=' $ 1'\" )  $  (  [ \" $ 2\" = \"all\" |  ! \" $ 2\" ]  | echo \"and table_name=' $ 2'\" )  ; \" | HOME=/var/lib/zabbix mysql -N  ， The code assumes that /bin/sh is bash that supports the [ compound  ， command. However , if /bin/sh is for example dash the statement  ，  [ \" $ 1\" = \"all\" |  ! \" $ 1\" ]   ， ends up executing the command \" $ 1\" with the argument \" ] \".  ， Exploit  ，  ， Zabbix sanitizes the input and blocks many dangerous characters  ，  ( \"\\'\\\"` * ? [  ] {} ~  $  ! & ;  (  ) <> |  #  @ \\n\" ) . Since we cannot use quotes we cannot  ， give our shell commands any parameters which significantly reduces the  ， impact of this vulnerability. If you find a way to execute arbitrary  ， commands using this flaw I'd be really interested in the details. The  ， following proof-of-concept shows how the vulnerability can be used  ， escalate privileges locally : ",
    "time": "May 3, 2016"
}