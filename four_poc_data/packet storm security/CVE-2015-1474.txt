{
    "text": "title : Google Android Integer Oveflow / Heap Corruption  ， detail : Multiple integer overflows in the GraphicBuffer : unflatten function in platform/frameworks/native/libs/ui/GraphicBuffer.cpp in Android through 5.0 allow attackers to gain privileges or cause a denial of service ( memory corruption ) via vectors that trigger a large number of file descriptors or integer values. All versions below Lollipop 5.1 are affected.  ， cve : advisories | CVE-2015-1474  ，  ， desc :  #   ，  ，  # QIHU 360 SOFTWARE CO. LIMITED http : /www.360safe.com/  ，   ，  ，  # CVE ID : CVE-2015-1474  ，  # Product : Android  ，  # Vendor : Google  ，  # Subject : Integer overflow leading to heap corruption while unflattening  ， GraphicBuffer  ，  # Effect : Gain privileges or cause a denial of service  ，  # Author : Guang Gong  ，  # Date : March 11th 2015  ，   ， Introduction  ，  ， Multiple integer overflows in the GraphicBuffer : unflatten function in  ， platform/frameworks/native/libs/ui/GraphicBuffer.cpp in Android through 5.0  ， allow attackers to gain privileges or cause a denial of service ( memory  ， corruption ) via vectors that trigger a large number of ( 1 ) file descriptors  ， or ( 2 ) integer values.  ， Affected Android version  ，  ， all versions below Lollipop 5.1  ， Patches  ，  ， Android Bug id 18076253  ， There are two patches for this vulnerabilities , the first patch for this  ， issue is uncomplete.  ，  [ 1 ]   ， https : /android.googlesource.com/platform/frameworks/native/+/e6f7a44e835d320593fa33052f35ea52948ff0b2  ，  [ 2 ]   ， https : /android.googlesource.com/platform/frameworks/native/+/796aaf7fb160fea12bddc8406d7f006ce811eb43  ， Description  ，  ， The vulnerable code is as follows.  ， 28  ， <http : /androidxref.com/4.4.4_r1/xref/system/core/libcutils/native_handle.c # 28>  ， native_handle_t  ， <http : /androidxref.com/4.4.4_r1/s?defs=native_handle_t&project=system> *   ， native_handle_create  ， <http : /androidxref.com/4.4.4_r1/s?refs=native_handle_create&project=system>  ，  ( int numFds <http : /androidxref.com/4.4.4_r1/s?refs=numFds&project=system> ,   ， int numInts <http : /androidxref.com/4.4.4_r1/s?refs=numInts&project=system> )   ， 29  ， <http : /androidxref.com/4.4.4_r1/xref/system/core/libcutils/native_handle.c # 29>  ， {  ， 30  ， <http : /androidxref.com/4.4.4_r1/xref/system/core/libcutils/native_handle.c # 30>  ， native_handle_t  ， <http : /androidxref.com/4.4.4_r1/s?defs=native_handle_t&project=system> * h =  ， malloc <http : /androidxref.com/4.4.4_r1/s?defs=malloc&project=system> (   ， 31  ， <http : /androidxref.com/4.4.4_r1/xref/system/core/libcutils/native_handle.c # 31>  ， sizeof ( native_handle_t  ， <http : /androidxref.com/4.4.4_r1/s?defs=native_handle_t&project=system> ) +  ， sizeof ( int )  *  ( numFds  ， <http : /androidxref.com/4.4.4_r1/s?defs=numFds&project=system>+numInts  ， <http : /androidxref.com/4.4.4_r1/xref/system/core/libcutils/native_handle.c # numInts>  ，  )  ; -> integer overflow here , numFds and numInts can be  ， controlled by normal Apps.  ， 32  ， <http : /androidxref.com/4.4.4_r1/xref/system/core/libcutils/native_handle.c # 32>  ， 33  ， <http : /androidxref.com/4.4.4_r1/xref/system/core/libcutils/native_handle.c # 33>  ， h->version  ， <http : /androidxref.com/4.4.4_r1/s?defs=version&project=system> = sizeof (   ， native_handle_t  ， <http : /androidxref.com/4.4.4_r1/s?defs=native_handle_t&project=system> )  ;   ， 34  ， <http : /androidxref.com/4.4.4_r1/xref/system/core/libcutils/native_handle.c # 34>  ， h->numFds <http : /androidxref.com/4.4.4_r1/s?defs=numFds&project=system>  ， = numFds <http : /androidxref.com/4.4.4_r1/s?defs=numFds&project=system> ;   ， 35  ， <http : /androidxref.com/4.4.4_r1/xref/system/core/libcutils/native_handle.c # 35>  ， h->numInts  ， <http : /androidxref.com/4.4.4_r1/xref/system/core/libcutils/native_handle.c # numInts>  ， = numInts  ， <http : /androidxref.com/4.4.4_r1/xref/system/core/libcutils/native_handle.c # numInts>  ，  ;   ， 36  ， <http : /androidxref.com/4.4.4_r1/xref/system/core/libcutils/native_handle.c # 36>  ，  ， 37  ， <http : /androidxref.com/4.4.4_r1/xref/system/core/libcutils/native_handle.c # 37>  ， }  ， 244  ， <http : /androidxref.com/4.4.4_r1/xref/frameworks/native/libs/ui/GraphicBuffer.cpp # 244>  ， status_t  ， <http : /androidxref.com/4.4.4_r1/s?defs=status_t&project=frameworks>  ， GraphicBuffer  ， <http : /androidxref.com/4.4.4_r1/s?defs=GraphicBuffer&project=frameworks> :   ， unflatten  ， <http : /androidxref.com/4.4.4_r1/s?refs=unflatten&project=frameworks> (   ， 245  ， <http : /androidxref.com/4.4.4_r1/xref/frameworks/native/libs/ui/GraphicBuffer.cpp # 245>  ， void const * & buffer  ， <http : /androidxref.com/4.4.4_r1/s?defs=buffer&project=frameworks> , size_t  ， <http : /androidxref.com/4.4.4_r1/s?defs=size_t&project=frameworks>& size  ， <http : /androidxref.com/4.4.4_r1/s?defs=size&project=frameworks> , int const  ，  * & fds <http : /androidxref.com/4.4.4_r1/s?defs=fds&project=frameworks> ,   ， size_t <http : /androidxref.com/4.4.4_r1/s?defs=size_t&project=frameworks>&  ， count  ， <http : /androidxref.com/4.4.4_r1/xref/frameworks/native/libs/ui/GraphicBuffer.cpp # count> )   ， {  ，   ， 271  ， <http : /androidxref.com/4.4.4_r1/xref/frameworks/native/libs/ui/GraphicBuffer.cpp # 271>  ， native_handle  ， <http : /androidxref.com/4.4.4_r1/s?defs=native_handle&project=frameworks> *   ， h = native_handle_create  ， <http : /androidxref.com/4.4.4_r1/s?defs=native_handle_create&project=frameworks>  ，  ( numFds  ， <http : /androidxref.com/4.4.4_r1/xref/frameworks/native/libs/ui/GraphicBuffer.cpp # numFds>  ，  , numInts  ， <http : /androidxref.com/4.4.4_r1/xref/frameworks/native/libs/ui/GraphicBuffer.cpp # numInts>  ，  )  ;   ， 272  ， <http : /androidxref.com/4.4.4_r1/xref/frameworks/native/libs/ui/GraphicBuffer.cpp # 272>  ， memcpy  ， <http : /androidxref.com/4.4.4_r1/s?defs=memcpy&project=frameworks> ( h->data  ， <http : /androidxref.com/4.4.4_r1/s?defs=data&project=frameworks> , fds  ， <http : /androidxref.com/4.4.4_r1/s?defs=fds&project=frameworks> , numFds  ， <http : /androidxref.com/4.4.4_r1/xref/frameworks/native/libs/ui/GraphicBuffer.cpp # numFds>  ，  * sizeof ( int )  ; ->heap corruption hear.  ， 273  ， <http : /androidxref.com/4.4.4_r1/xref/frameworks/native/libs/ui/GraphicBuffer.cpp # 273>  ， memcpy  ， <http : /androidxref.com/4.4.4_r1/s?defs=memcpy&project=frameworks> ( h->data  ， <http : /androidxref.com/4.4.4_r1/s?defs=data&project=frameworks> + numFds  ， <http : /androidxref.com/4.4.4_r1/xref/frameworks/native/libs/ui/GraphicBuffer.cpp # numFds> ,   ， &buf <http : /androidxref.com/4.4.4_r1/s?defs=buf&project=frameworks> [ 8 ]  ,   ， numInts  ， <http : /androidxref.com/4.4.4_r1/xref/frameworks/native/libs/ui/GraphicBuffer.cpp # numInts>  ，  * sizeof ( int )  ;   ， .  ， Attack vector  ，  ， A normal Apps can corrupt the heap in surfaceflinger and system_server by  ， this vulnerabilities.  ， the PoC of corrupting the heap of surfaceflinger is as follows",
    "time": "Mar 12, 2015"
}