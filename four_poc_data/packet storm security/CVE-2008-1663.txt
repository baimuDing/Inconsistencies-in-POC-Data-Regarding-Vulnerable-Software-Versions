{
    "text": "date_time:Aug 27, 2008 ， title:hpsnh-xss.txt  ， detail:Further analysis regarding the HP System Management  ， cve:advisories | CVE-2008-1663  ， date_time:Aug 27, 2008  ， desc:=  ， Hopeless comments regarding the pointless  ， \"HP System Management Homepage (SMH) Unspecified XSS\"  ， August 25, 2008  ，  ， [Overview]  ， Since HP does not provide technical details in its security bulletins, it is really  ， difficult to track vulnerabilities and patches.  ， In the last few years several Cross Site Scripting vulnerabilities were reported  ， against the HP System Management Homepage (SMH), however no technical details were  ， provided and it is still difficult to understand the real entity of this issue.  ， Whenever you search for information regarding this weakness in the public vulnerability  ， databases, you can just read tons of incomplete or overlapped descriptions.  ， In order to understand the essence of the problem, have a look at:  ， http:/www.securityfocus.com/bid/25953  ， Although it is ages away from being useful, it gives a compact overview of the flaw.  ， This is the most useless indeed:  ， http:/www.securityfocus.com/bid/24256  ， This document discusses three attack vectors found on the HP System Management  ， Homepage(SMH).  ，  ， [Impact]  ， Cross Site scripting (XSS)  ，   ， Since it is a web management console, the Cross Site Scripting vulnerability has a  ， medium/high impact whenever it can be exploited.  ，  ， [Technical Details]  ， HP System Management Homepage (SMH) is prone to a XSS vulnerability because it  ， fails to check the input parameter used to show a generic error message.  ， The vulnerability affects the \"message.php\" script. In detail, this page uses the  ， JavaScript property \"location.search\" in order to create a contextual error message.  ， If the error ID provided in the URL does not match any valid code, a generic error  ， is reported (\"An unknown error (%INVALID_CODE%) occurred\") instead.  ， In the first versions of the HP System Management Homepage (probably <= 2.1.1) there  ， is a client-side only input validation:  ， <- cut here ->  ， / handle possible active content in the pieces of the query string  ，  ， {  ， splitquery[i] = unescape(splitquery[i]);"
}