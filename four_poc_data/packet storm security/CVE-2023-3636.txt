{
    "text": "title : WordPress WP Project Manager 2.6.4 Privilege Escalation  ， detail : WordPress WP Project Manager plugin versions 2.6.4 and below suffer from a privilege escalation vulnerability.  ， cve : advisories | CVE-2023-3636  ，  ， desc : Description : WP Project Manager <= 2.6.4 Arbitrary Usermeta Update to Authenticated ( Subscriber+ ) Privilege Escalation  ， Affected Plugin : WP Project Manager Task , team , and project management plugin featuring kanban board and gantt charts  ， Plugin Slug : wedevs-project-manager  ， Affected Versions : <= 2.6.4  ， CVE ID : CVE-2023-3636  ， CVSS Score : 8.8 ( High )   ， CVSS Vector : CVSS : 3.1/AV : N/AC : L/PR : L/UI : N/S : U/C : H/I : H/A : H  ， Researcher/s : Lana Codes and Chloe Chamberland  ， Fully Patched Version : 2.6.5  ， The WP Project Manager plugin for WordPress is vulnerable to privilege escalation in versions up to , and including , 2.6.4 due to insufficient restriction on the save_users_map_name function. This makes it possible for authenticated attackers , with minimal permissions such as a subscriber , to modify their user role by supplying the usernames parameter.  ， Technical Analysis  ， WP Project Manager plugin is a task , project , and team management tool for WordPress. Upon closer examination of the code , we see that there is an API endpoint , the save_users_map_name function , which updates a users github and bitbucket username.  ，  [ View this code snippet on the blog. ]   ， The most significant problem and vulnerability is caused by the way the explode (  ) and in_array (  ) functions are used to ensure that only the github and bitbucket meta values can be updated. Unfortunately , these functions are not sufficient to prevent exploitation , because they can be bypassed with a special character , known as a homoglyph , that acts like an underscore , however , wont be properly exploded but will be saved in the database as a proper underscore.  ， This made it possible for authenticated users , such as subscribers , to supply the wp_capabilities array parameter with any desired role , such as administrator , when updating what should be username metadata , which would grant the user access to capabilities based on that role.  ， As with any Privilege Escalation vulnerability , this can be used for complete site compromise. Once an attacker has gained administrative user access to a WordPress site they can then manipulate anything on the targeted site as a normal administrator would. This includes the ability to upload plugin and theme files , which can be malicious zip files containing backdoors , and modifying posts and pages which can be leveraged to redirect site users to other malicious sites.",
    "time": "Aug 10, 2023"
}