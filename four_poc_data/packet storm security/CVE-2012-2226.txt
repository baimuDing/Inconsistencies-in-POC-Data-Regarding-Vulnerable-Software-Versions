{
    "text": "title : Invision Power Board 3.3.0 Local File Inclusion  ， detail : Invision Power Board version 3.3.0 suffers from a local file inclusion vulnerability.  ， cve : advisories | CVE-2012-2226  ，  ， desc :  [ waraxe-2012-SA # 086 ] - Local File Inclusion in Invision Power Board 3.3.0  ，  ， Author : Janek Vind \"waraxe\"  ， Date : 12. April 2012  ， Location : Estonia , Tartu  ， Web : http : /www.waraxe.us/advisory-86.html  ， CVE : http : /cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-2226  ， Description of vulnerable software :   ，  ， Invision Power Board ( abbreviated IPB , IP.Board or IP Board ) is an Internet  ， forum software produced by Invision Power Services , Inc.  ， It is written in PHP and primarily uses MySQL as a database management system ,   ， although support for other database engines is available.  ， Vulnerable versions  ，  ， Affected are Invision Power Board versions 3.3.0 and 3.2.3 , older versions  ， may be vulnerable as well.  ，  ， 1. Local File Inclusion in \"like.php\" function \"_unsubscribe\"  ，  ， CVE Information :   ，  ， The Common Vulnerabilities and Exposures ( CVE ) project has assigned the  ， name CVE-2012-2226 to this issue. This is a candidate for inclusion in  ， the CVE list ( http : /cve.mitre.org/ )  , which standardizes names for  ， security problems.  ， Vulnerability Details :   ，  ， Reason : using unsanitized user submitted data for file operations  ， Attack vector : user submitted GET parameter \"key\"  ， Preconditions :   ， 1. attacker must be logged in as valid user  ， 2. PHP must be < 5.3.4 for null-byte attacks to work  ， Result : remote file disclosure , php remote code execution  ， Source code snippet from vulnerable script \"like.php\" :   ， - [ source code start ] -  ， protected function _unsubscribe (  )   ， {  ， / * Fetch data * /  ，  $ key = trim ( IPSText : base64_decode_urlSafe (  $ this->request [ 'key' ]  )  )  ;   ，   ， list (  $ app ,  $ area ,  $ relId ,  $ likeMemberId ,  $ memberId ,  $ email ) = explode ( ' ; ' ,  $ key )  ;   ，   ， / * Member? * /  ，  ， {  ，  $ this->registry->output->showError ( 'no_permission' , 'pcgl-1' )  ;   ， }  ，   ，  ， {  ，  $ this->registry->output->showError ( 'no_permission' , 'pcgl-1' )  ;   ， }  ，   ，  ， {  ，  $ this->registry->output->showError ( 'no_permission' , 'pcgl-2' )  ;   ， }  ，   ，  ， {  ，  $ this->registry->output->showError ( 'no_permission' , 'pcgl-3' )  ;   ， }  ，   ， / * Think we're safe. * /  ，  $ this->_like = classes_like : bootstrap (  $ app ,  $ area )  ;   ， - [ source code end ] -  ， As seen above , user submitted parameter \"key\" is first base64 decoded and then  ， splitted to six variables. After multiple checks function \"bootstrap (  ) \" is called ,   ， using unvalidated user submitted data for arguments.  ， Source code snippet from vulnerable script \"composite.php\" :   ， - [ source code start ] -  ， static public function bootstrap (  $ app=null ,  $ area=null )   ， {  ， .  ，  ， {  ，  $ _file = IPSLib : getAppDir (  $ app ) . '/extensions/like/' . $ area . '.php' ;   ， .  ， }  ， .  ，  ， {  ， .",
    "time": "Apr 13, 2012"
}