{
    "text": "title : Castor Library XE Disclosure  ， detail : Castor Library version 1.3.3-RC1 suffers from a file disclosure vulnerability via XE injection.  ， cve : advisories | CVE-2014-3004  ，  ， desc : Castor Library Default Configuration could lead to XML External Entity  ，  ( XE ) Attack  ， Vulnerability Type : Local or Remote File Disclosure  ， Reporter : Ron Gutierrez ( rgutierrez @ gdssecurity.com ) and Adam Bixby (   ， abixby @ gdssecurity.com )   ， Company : Gotham Digital Science ( gdslabs @ gdssecurity.com )   ， Affected Software : Caster 1.3.3-RC1 Library and earlier  ， CVE-Reference - CVE-2014-3004  ， Severity : High  ，  ， Summary  ，  ， The Castor library is an Open Source data-binding framework for Java  ， applications. One of its most useful functions are to provide for easy  ， implementations of Java-to-XML binding. The librarys unmarshalling class ,   ， however , is susceptible to XML External Entity ( XE ) attacks. If the XML  ， that is being passed to the unmarshalling function is controllable by an  ， end user , there is the potential that they could retrieve local resources ,   ， download malicious code from other servers , and/or open arbitrary TCP  ， connections. For more information on XE , please see  ， https : /www.owasp.org/index.php/XML_External_Entity_ ( XE ) _Processing  ，  ， Technical Details  ，  ， The Castor librarys unmarshalling functionality , if used with default  ， settings , does not prevent the referencing of external entities or doctype  ， declarations , opening up any application that utilizes this functionality  ， to an XE attack. Under the hood , the Castor library is using the Xerces  ， SAX Parser , which needs to be configured securely in order to prevent these  ， types of attacks. Castor does not have these secure settings turned on in  ， the default configuration file and does not make reference to them anywhere  ， in their documentation.  ， XE attacks come about due to the way in which XML parsers in general  ， handle XML documents containing external entities. When an XML parser  ， encounters a DOCTYPE declaring an external entity , it expands all instances  ， of the entity with the contents of the URI reference that is being defined.  ， For example , consider an XML document such as the following : ",
    "time": "May 30, 2014"
}