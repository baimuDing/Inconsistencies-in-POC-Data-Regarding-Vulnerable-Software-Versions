{
    "text": "title : Papaya Medical Viewer 1.0 Cross Site Scripting  ， detail : Papaya Medical Viewer version 1.0 suffers from a cross site scripting vulnerability.  ， cve : advisories | CVE-2023-33255  ，  ， desc : -BEGIN PGP SIGNED MESSAGE-  ， Hash : SHA512  ， Title  ，  ， SCHUTZWERK-SA-2022-001 : Cross-Site-Scripting in Papaya Medical Viewer  ， Status  ，  ， PUBLISHED  ， Version  ，  ， 1.0  ， CVE reference  ，  ， CVE-2023-33255  ， Link  ，  ， https : /www.schutzwerk.com/advisories/SCHUTZWERK-SA-2022-001/  ， Text-only version :   ， https : /www.schutzwerk.com/advisories/SCHUTZWERK-SA-2022-001.txt  ， Further SCHUTZWERK advisories :   ， https : /www.schutzwerk.com/blog/tags/advisories/  ， Affected products/vendor  ，  ， Papaya , Research Imaging Institute - University of Texas Health Science  ， Center  ， Summary  ，  ， User supplied input in the form of DICOM or NIFTI images can be loaded  ， into the  ， Papaya web application without any kind of sanitization. This allows to  ， inject  ， arbitrary JavaScript code into the image's metadata which will in  ， consequence be  ， executed as soon as the metadata is displayed in the Papaya web application.  ， Risk  ，  ， The vulnerability allows an attacker to inject arbitrary JavaScript code  ， into  ， the Papaya web application. A risk calculation highly depends on how the  ， Papaya  ， software is used as a library in the context of a bigger medical web  ， application. During the discovery of this vulnerability , the web application  ， which used Papaya allowed to upload and store corresponding images on  ， the web  ， server and display them to multiple users. It was therefore possible to  ， store  ， JavaScript code on the server and attack users to impersonate or steal their  ， session , leading to a disclosure of sensitive medical data.  ， Description  ，  ， A medical web application assessed for security vulnerabilities by  ， SCHUTZWERK  ， was found to contain a stored cross-site-scripting vulnerability. The  ， application uses the Papaya JavaScript software [ 0 ] published by the Research  ， Imaging Institute belonging to the University of Texas Health Science  ， Center [ 1 ] .  ， The software is described as \" [ . ] a pure JavaScript medical research image  ， viewer , supporting DICOM and NIFTI formats , compatible across a range of web  ， browsers [ . ] \". It can be used stand-alone or integrated into larger medical  ， applications , has 192 forks and 488 stars on GitHub and was used in at  ， least 50  ， published academic research papers [ 2 ] .  ， One of the main features is to open medical images of multiple formats ,   ， which  ， can be achieved via the context menu \"File - Add image.\". Papaya then  ， displays  ， the image and adds a new icon in the upper right corner of the viewer.  ， This icon  ， allows to open another context menu to edit the previous opened image as  ， a layer  ， in multiple ways. The option of interest for the cross-site-scripting  ， vulnerability is the \"Show Header\" entry , which allows getting further  ， information about the medical image.  ， An example DICOM [ 3 ] zip archive was downloaded [ 4 ]  , extracted and opened in  ， Papaya. The \"Show Header\" function shows multiple entries including private  ， patient data fields like patient ID , name , date of birth and gender.  ， The DICOM ToolKit ( DCMTK )  [ 5 ] offers multiple tools to analyze , create  ， and edit  ， DICOM images. The metadata field \"Manufacturer\" of the previously downloaded  ， DICOM image was edited with help of the DCMTK tool dcmodify :   ， DICTPATH=/tmp/share/dcmtk/dicom.dic dcmodify -m",
    "time": "May 30, 2023"
}