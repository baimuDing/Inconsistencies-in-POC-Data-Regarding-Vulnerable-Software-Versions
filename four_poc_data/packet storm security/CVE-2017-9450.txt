{
    "text": "title : aws-cfn-bootstrap Local Code Execution  ， detail : aws-cfn-bootstrap versions prior to 1.4-22.14 suffer from a local code execution vulnerability.  ， cve : advisories | CVE-2017-9450  ，  ， desc : aws-cfn-bootstrap local code execution as root  ，  ， The latest version of this advisory is available at :   ， https : /sintonen.fi/advisories/aws-cfn-bootstrap-local-code-execution-as-root.txt  ， Overview  ，  ， AWS EC2 instances deployed with the AWS CloudFormation bootstrap contain a vulnerable  ， daemon that enables an attacker to execute arbitrary code as root.  ， Description  ，  ， The aws-cfn-bootstrap `cfn-hup` daemon contains a local code execution vulnerability.  ， A non-privileged attacker with the capability to write files ( either locally or  ， remotely ) can write a specially crafted file which will result in arbitrary code  ， execution as root.  ， Impact  ，  ， The non-privileged attacker is able to execute arbitrary commands as the administrative  ， user ( root ) . This leads to complete loss of confidentiality , integrity and availability.  ， Details  ，  ， The discovered vulnerability , described in more detail below , enables multiple  ， independent attacks described here in brief :   ， Local Arbitrary Code Execution As Root  ，  ， A local user can overwrite or replace a file with a specially crafted contents  ， that results in a code execution as root.  ， The code execution is limited to local users , unless a remotely accessible  ， service contains an arbitrary file write vulnerability in which case the combined  ， result is a remote code execution as root.  ， Information Leak  ，  ， A local user can read the metadata_db file. This file typically contains cleartext  ， passwords and other similar confidential information.  ， The confidential data is exposed to local users , but if a remotely accessible service  ， contains an arbitrary file read vulnerability in which case the information is obviously  ， exposed to external attackers as well.  ，  [ CVE-2017-9450 ] Incorrect Permission Assignment for Critical Resource ( CWE-732 )   ，  ， The `cfn-hup` daemon of the `aws-cfn-bootstrap` package is running with umask 0. This  ， happens because /opt/aws/bin/cfn-hup does not set a secure umask for the `DaemonContext`  ， class of the `python-daemon` package :   ， with daemon.DaemonContext ( pidfile=pidlockfile.TimeoutPIDLockFile ( '/var/run/cfn-hup.pid' , 300 )  ,   ， signal_map={signal.SIGTERM : kill} )  :   ， The `python-daemon` package defaults to a umask of 0 as seen in  ， https : /pagure.io/python-daemon/blob/master/f/daemon/daemon.py :   ， `umask`  ，  : Default : `0`  ， File access creation mask ( \"umask\" ) to set for the process on  ， daemon start.  ， A daemon should not rely on the parent process's umask value ,   ， which is beyond its control and may prevent creating a file with  ， the required access mode. So when the daemon context opens , the  ， umask is set to an explicit known value.  ， If the conventional value of 0 is too open , consider setting a  ， value such as 0o022 , 0o027 , 0o077 , or another specific value.  ， Otherwise , ensure the daemon creates every file with an  ， explicit access mode for the purpose.  ， Any file or directory created by the daemon will thus use the mask as specified  ， by the `mkdir` or `open` functions.  ， The code in /usr/lib/python2.7/dist-packages/cfnbootstrap/update_hooks.py does the  ， following : ",
    "time": "Dec 1, 2017"
}