{
    "text": "title : Google Chrome SimplfiedLowering Integer Overflow  ， detail : This Metasploit module exploits an issue in Google Chrome versions before 87.0.4280.88 ( 64 bit ) . The exploit makes use of an integer overflow in the SimplifiedLowering phase in turbofan. It is used along with a typer hardening bypass using ArrayPrototypeShift to create a JSArray with a length of -1. This is abused to gain arbitrary read/write into the isolate region. Then an ArrayBuffer can be used to achieve absolute arbitrary read/write. The exploit then uses WebAssembly in order to allocate a region of RWX memory , which is then replaced with the payload shellcode. The payload is executed within the sandboxed renderer process , the browser must be run with the -no-sandbox option for the payload to work correctly.  ， cve : advisories | CVE-2020-16040  ，  ， desc :  #   ，  # This module requires Metasploit : https : /metasploit.com/download  ，  # Current source : https : /github.com/rapid7/metasploit-framework  ，   ， 'Description' => %q{  ， This module exploits an issue in Google Chrome versions before 87.0.4280.88 ( 64 bit ) .  ， The exploit makes use of a integer overflow in the SimplifiedLowering phase in turbofan.  ， It is used along with a typer hardening bypass using ArrayPrototypeShift to create a JSArray with a length of -1.  ， This is abused to gain arbitrary read/write into the isolate region.  ， Then an ArrayBuffer can be used to achieve absolute arbitrary read/write.  ， The exploit then uses WebAssembly in order to allocate a region of RWX memory , which is then replaced with the payload shellcode.  ， The payload is executed within the sandboxed renderer process , the browser must be run with the -no-sandbox option for the payload to work correctly.  ， }",
    "time": "Apr 9, 2021"
}