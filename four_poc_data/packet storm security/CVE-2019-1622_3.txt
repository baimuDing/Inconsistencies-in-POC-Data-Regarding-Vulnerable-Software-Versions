{
    "text": "title : Cisco Data Center Network Manager 11.1 ( 1 ) Remote Code Execution  ， detail : Cisco Data Center Network Manager ( DCNM ) versions 11.1 ( 1 ) and below suffer from authentication bypass , arbitrary file upload , arbitrary file download , and information disclosure vulnerabilities.  ， cve : advisories | CVE-2019-1619 , CVE-2019-1620 , CVE-2019-1621 , CVE-2019-1622  ，  ， desc : > Authentication Bypass and Arbitrary File Upload ( leading to remote code execution ) on Cisco Data Center Network Manager  ， > Discovered by Pedro Ribeiro ( pedrib @ gmail.com )  , Agile Information Security ( http : /www.agileinfosec.co.uk/ )   ，  ， Disclosure : 26/6/2019 / Last updated : 6/7/2019  ， > Executive summary :   ， Cisco Data Center Network Manager ( DCNM ) is provided by Cisco as a virtual appliance as well as installation packages for Windows and Red Hat Linux.  ， DCNM is widely deloyed in data centres worldwide to manage Cisco devices on a global scale.  ， DCNM 11.1 ( 1 ) and below is affected by four vulnerabilities : authentication bypass , arbitrary file upload ( leading to remote code execution )  , arbitrary file download and information disclosure via log download.  ， The table below lists the affected versions for each vulnerability :   ， Vulnerability Vulnerable? CVE  ， <= 10.4 ( 2 ) 11.0 ( 1 ) 11.1 ( 1 ) >= 11.2 ( 1 )   ， Authentication bypass Yes No No No 2019-1619  ， File upload Yes , auth Yes , auth Yes , unauth No 2019-1620  ， File download Yes , auth Yes , auth Yes , unauth No 2019-1621  ， Info disclosure Yes , unauth Yes , unauth Yes , unauth ? 2019-1622  ， The authentication bypass affects versions 10.4 ( 2 )  , allowing an attacker to exploit the file upload for remote code execution.  ， In version 11.0 ( 1 )  , authentication was introduced , and a valid unprivileged account is necessary to exploit all vulnerabilities except information discloure.  ， Amazingly , in version 11.1 ( 1 ) Cisco removed the authentication for the file upload and file download servlets , allowing an attacker exploit the vulnerabilities without any authentication !   ， All vulnerabilities were fixed in 11.2 ( 1 )  , except the information disclosure , for which the status is unknown.  ， To achieve remote code execution with arbitrary file upload vulnerability , an attacker can write a WAR file in the Tomcat webapps folder. The Apache Tomcat server is running as root , meaning that the Java shell will run as root.  ， Agile Information Security would like to thank the iDefense Vulnerability Contributor Program for handling the disclosure process with Cisco [ 1 ] .  ， > Vendor description [ 2 ]  :   ， \"Cisco Data Center Network Manager ( DCNM ) is the comprehensive management solution for all NX-OS network deployments spanning LAN fabrics , SAN fabrics , and IP Fabric for Media ( IPFM ) networking in the data center powered by Cisco. DCNM 11 provides management , control , automation , monitoring , visualization , and troubleshooting across Cisco Nexus and Cisco Multilayer Distributed Switching ( MDS ) solutions.  ， DCNM 11 supports multitenant , multifabric infrastructure management for Cisco Nexus Switches. DCNM also supports storage management with the Cisco MDS 9000 family and Cisco Nexus switch storage functions.  ， DCNM 11 provides interfaces for reoccurring management tasks such as fabric bootstrap , compliance SAN zoning , device-alias management , slow-drain analysis , SAN host-path redundancy , and port-monitoring configuration.\"  ， > Technical details :   ，  # 1  ， Vulnerability : Authentication Bypass  ， CVE-2019-1619  ， Attack Vector : Remote  ， Constraints : None  ， Affected products / versions :   ， - Cisco Data Center Network Manager 10.4 ( 2 ) and below  ， DCNM exposes a \"ReportServlet\" on the URL /fm/pmreport. By abusing this servlet , an unauthenticated attacker can obtain a valid administrative session on the web interface [ 3 ] .  ， The snippet of code below shows what the servlet does :   ， com.cisco.dcbu.web.client.performance.ReportServlet  ， public void doGet ( HttpServletRequest request , HttpServletResponse response ) throws ServletException , IOException {  ， Credentials cred = ( Credentials ) request.getSession (  ) .getAttribute ( \"credentials\" )  ;   ，  ， request.setAttribute ( \"popUpSessionTO\" , \"true\" )  ;   ， }  ， this.doInteractiveChart ( request , response )  ;   ， }  ，   ， The request is passed on to the verifyToken function , listed below :   ， private boolean verifyToken ( HttpServletRequest httpServletRequest ) {  ， String token = httpServletRequest.getParameter ( \"token\" )  ;   ，   ， } else {  ，  ， FMServerRif serverRif = SQLLoader.getServerManager (  )  ;   ， IscRif isc = serverRif.getIsc ( StringEncrypter.encryptString ( \"DESede\" ,  ( new Date (  ) .toString (  )  ;   ， token = URLDecoder.decode ( token , \"UTF-8\" )  ;   ， token = token.replace ( ' ' , '+' )  ;   ， FMUserBase fmUserBase = isc.verifySSoToken ( token )  ;   ，   ， } else {  ， Credentials newCred = new Credentials (  )  ;   ， int idx = fmUserBase.getUsername (  ) .indexOf ( 64 )  ;   ， newCred.setUserName ( idx = -1?fmUserBase.getUsername (  )  : fmUserBase.getUsername (  ) .substring ( 0 , idx )  ;   ， newCred.setPassword ( StringEncrypter.DESedeDecrypt ( fmUserBase.getEncryptedPassword (  )  ;   ， newCred.setRole ( fmUserBase.getRole (  )  ;   ， newCred.setAuthenticated ( true )  ;   ， httpServletRequest.getSession (  ) .setAttribute ( \"credentials\" , newCred )  ;   ，  ， }  ， } catch ( Exception var8 ) {  ， var8.printStackTrace (  )  ;   ，  ， }  ， }  ， }  ，   ， As it can be seen in the line :   ， FMUserBase fmUserBase = isc.verifySSoToken ( token )  ;   ， the HTTP request parameter \"token\" gets passed to IscRif.verifySsoToken , and if that function returns a valid user , the request is authenticated and credentials are stored in the session.",
    "time": "Jul 8, 2019"
}