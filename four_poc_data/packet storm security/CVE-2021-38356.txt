{
    "text": "title : WordPress NextScripts : Social Networks Auto-Poster 4.3.20 XSS  ， detail : WordPress NextScripts : Social Networks Auto-Poster plugin versions 4.3.20 and below suffer from a cross site scripting vulnerability.  ， cve : advisories | CVE-2021-38356  ，  ， desc : Description : Reflected Cross-Site Scripting ( XSS )   ， Affected Plugin : NextScripts : Social Networks Auto-Poster  ， Plugin Slug : social-networks-auto-poster-facebook-twitter-g  ， Affected Versions : <= 4.3.20  ， CVE ID : CVE-2021-38356  ， CVSS Score : 6.1 ( Medium )   ， CVSS Vector : CVSS : 3.1/AV : N/AC : L/PR : N/UI : R/S : C/C : L/I : L/A : N  ， Researcher/s : Ramuel Gall  ， Fully Patched Version : 4.3.21  ， The nxs_ReposterListTable : column_title function in inc/nxs_class_snap.php echoed out the value of $ _REQUEST [ page ] when an administrator was visiting the plugin administration page at wp-admin/admin.php?admin.php?page=nxssnap-post.  ，   ，  ， /Build row actions  ，  $ actions = array (   ， 'edit' => sprintf ( '<a href=\"?page=%s&action=%s&item=%s\">Edit</a>' ,  $ _REQUEST [ 'page' ]  , 'edit' ,  $ item->ID )  ,   ， 'delete' => sprintf ( '<a href=\"?page=%s&action=%s&item=%s\">Delete</a>' ,  $ _REQUEST [ 'page' ]  , 'delete' ,  $ item->ID )  ,   ，  )  ;   ， /Return the title contents  ，  ， / *  $ 1%s * / $ item->post_title ,   ， / *  $ 2%s * / $ item->ID ,   ， / *  $ 3%s * / $ this->row_actions (  $ actions )   ，  )  ;   ， }  ， WordPress uses the value of the $ _GET [ page ] parameter in order to determine which administrative page to serve content for. It is also common practice for developers to use $ _REQUEST for values stored in either $ _GET or $ _POST , as the $ _REQUEST superglobal contains everything set in both $ _GET and $ _POST. As such ,  $ _REQUEST [ page ] might be expected to be set to the same value as $ _GET [ page ] .  ， However , thanks to a quirk of how PHP orders parameters that are present in multiple superglobal variables , it was possible to perform a reflected cross-site scripting attack.  ， In most PHP configurations , depending on the request_order ( or the variables_order if request_order is not set )  ,  $ _POST takes precedence over $ _GET when populating $ _REQUEST. In other words , if both $ _GET [ page ] and $ _POST [ page ] are set ,  $ _REQUEST [ page ] will be set to the contents of $ _POST [ page ]  , rather than $ _GET [ page ] .  ， This meant that it was possible to execute JavaScript in the browser of a logged-in administrator by tricking them into visiting a self-submitting form that sent a POST request to their site , for example , hxps : /victimsite.site/wp-admin/admin.php?page=nxssnap-post , with the $ _POST [ page ] parameter set to malicious JavaScript.  ， The $ _GET [ page ] parameter could be set to nxssnap-post , so that WordPress would route the victim to the correct page , and then the malicious JavaScript in $ _POST [ page ] would be echoed out on that page.  ， As with all XSS attacks , malicious JavaScript running in an administrators session could be used to add malicious administrative users or insert backdoors into a site , and thus be used for site takeover.",
    "time": "Oct 29, 2021"
}