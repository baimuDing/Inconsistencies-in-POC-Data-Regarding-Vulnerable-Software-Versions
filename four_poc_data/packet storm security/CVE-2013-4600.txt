{
    "text": "title : OpenCMS 8.5.1 Cross Site Scripting  ， detail : OpenCMS version 8.5.1 suffers from a cross site scripting vulnerability.  ， cve : advisories | CVE-2013-4600  ，  ， desc : Advisory ID : HTB23160  ， Product : OpenCms  ， Vendor : Alkacon Software  ， Vulnerable Version ( s )  : 8.5.1 and probably prior  ， Tested Version : 8.5.1  ， Vendor Notification : June 12 , 2013  ， Vendor Patch : July 10 , 2013  ， Public Disclosure : July 17 , 2013  ， Vulnerability Type : Cross-Site Scripting [ CWE-79 ]   ， CVE Reference : CVE-2013-4600  ， Risk Level : Medium  ， CVSSv2 Base Score : 4.3 ( AV : N/AC : M/Au : N/C : N/I : P/A : N )   ， Solution Status : Fixed by Vendor  ， Discovered and Provided : High-Tech Bridge Security Research Lab ( https : /www.htbridge.com/advisory/ )   ，  ， Advisory Details :   ， High-Tech Bridge Security Research Lab discovered 2 XSS vulnerabilities in OpenCms , which can be exploited to perform Cross-Site Scripting attacks against users of vulnerable application.  ， 1 ) Multiple Cross-Site Scripting ( XSS ) in OpenCms : CVE-2013-4600  ， 1.1 The vulnerability exists due to insufficient sanitisation of user-supplied data in \"title\" HTTP GET parameter passed to \"/opencms/opencms/system/workplace/views/admin/admin-main.jsp\" script. A remote attacker can trick a logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website.  ， The exploitation example below uses the \"alert (  ) \" JavaScript function to display administrator's cookies :   ， http : / [ host ] /opencms/opencms/system/workplace/views/admin/admin-main.jsp?action=&dialogtype=publishproject&framename=body&title=%3Cscript%3Ealert%28document.cookie%29 ; %3C/script%3E  ， 1.2 The vulnerability exists due to insufficient sanitisation of user-supplied data in \"requestedResource\" HTTP POST parameter passed to \"/opencms/opencms/system/login/index.html\" URL. A remote attacker can trick a logged-in user to open a specially crafted malicious webpage and execute arbitrary HTML and script code in browser in context of the vulnerable website.  ， The exploitation example below uses the \"alert (  ) \" JavaScript function to display user's cookies : ",
    "time": "Jul 18, 2013"
}