{
    "text": "title : Bolt CMS 3.7.0 XSS / CSRF / Shell Upload  ， detail : Bolt CMS versions 3.7.0 and below suffer from cross site request forgery , cross site scripting , and remote shell upload vulnerabilities that when combined can achieve remote code execution in one click.  ， cve : advisories | CVE-2020-4040 , CVE-2020-4041  ，  ， desc :  #   ，  # Bolt CMS <= 3.7.0 Multiple Vulnerabilities #   ，  ， Author - Sivanesh Ashok |  @ sivaneshashok | stazot.com  ， Date : 2020-03-24  ， Vendor : https : /bolt.cm/  ， Version : <= 3.7.0  ， CVE : CVE-2020-4040 , CVE-2020-4041  ， Last Modified : 2020-07-03  ， - [ Table of Contents  ， 00 - Introduction  ， 01 - Exploit  ， 02 - Cross-Site Request Forgery ( CSRF )   ， 02.1 - Source code analysis  ， 02.2 - Exploitation  ， 02.3 - References  ， 03 - Cross-Site Scripting ( XSS )   ， 03.1 - Preview generator  ， 03.1.1 - Exploitation  ， 03.2 - System Log  ， 03.2.1 - Source code analysis  ， 03.2.2 - Exploitation  ， 03.3 - File name  ， 03.3.1 - Source code analysis  ， 03.3.2 - Exploitation  ， 03.3.3 - References  ， 03.4 - JS file upload  ， 03.4.1 - Exploitation  ， 03.5 - CKEditor4  ， 03.5.1 - Exploitation  ， 04 - Remote Code Execution  ， 04.1 - Source code analysis  ， 04.2 - Exploitation  ， 04.3 - References  ， 05 - Solution  ， 06 - Contact  ， - [ 00 - Introduction  ， Bolt CMS is an open-source content management tool. This article details  ， the multiple vulnerabilities that I found in the application. The  ， vulnerabilities when chained together , resulted in a single-click RCE which  ， would allow an attacker to remotely take over the server. The link to the  ， exploit is provided in the next section.  ， - [ 01 - Exploit  ， Chaining all the bugs together results in a single-click RCE. The exploit  ， that does that can be found in the link below.  ， https : /github.com/staz0t/exploits/blob/master/SA20200324_boltcms_csrf_to_rce.html  ， Host the exploit code in a webpage and send the link to the admin. When the  ， admin opens the link , backdoor.php gets uploaded and can be accessed via ,   ， http : /targetbolt.com/files/backdoor.php?cmd={insert_cmd_here}  ， - [ 02 - Cross-Site Request Forgery ( CSRF )   ， Bolt CMS lacks CSRF protection in the preview generating endpoint. Previews  ， are intended to be generated by the admins , developers , chief-editors , and  ， editors , who are authorized to create content in the application. But due  ， to lack of CSRF protection , an unauthorized attacker can generate a  ， preview. This CSRF by itself does not have a huge impact. But this will be  ， used with the XSS , which are described below.  ， - [ 02.1 - Source code analysis  ， The preview generation is done  ， by preview (  ) function which is defined in  ， vendor/bolt/bolt/src/Controller/Frontend.php : 200 and there is no token  ， verification present in the function.  ， - [ 02.2 - Exploitation  ， The request that is can be forged is ,   ， - [ request ] -  ， POST /preview/page HTTP/1.1  ， Host : localhost  ， content_edit [ _token ] =hTgbvurWl5fZ4m20bnb1AZCRrv8wFT0hzvjQi1TMW_wcontenttype=pages&title=title&slug=testpage1&teaser=teaser1&body=body1&id=1337  ， - [ request ] -  ， To exploit this vulnerability an attacker has to ,   ， 1. Make an HTML page with a form that has the required parameters shown  ， above. The content_edit [ _token ] is not required.  ， 2. Use JS to auto-submit the form.  ， 3. Host it on a website and send the link to the victim. i.e. , an  ， authorized user.  ，   ， When the victim opens the link , the browser will send the request to the  ， server and will follow the redirect to the preview page.  ， This CSRF by itself does not have a huge impact. But this will be used with  ， the XSS , which are described below.  ， - [ 02.3 - References  ，  [ CVE-2020-4040 ] - https : /github.com/bolt/bolt/security/advisories/GHSA-2q66-6cc3-6xm8  ， - [ 03 - Cross-Site Scripting ( XSS )   ， The application is vulnerable to XSS in multiple endpoints , which could be  ， exploited by an attacker to execute javascript code in the context of the  ， victim user.  ， - [ 03.1 - Preview generator  ， The app uses CKEditor to get input from the users and hence any unsafe  ， inputs are filtered. But the request can be intercepted and manipulated to  ， add javascript in the content , which gets executed in the preview page.  ， Hence the preview generator is vulnerable to reflected XSS.  ， - [ 03.1.1 - Exploitation  ， - [ request ] -  ， POST /preview/page HTTP/1.1  ， Host : localhost",
    "time": "Jul 3, 2020"
}