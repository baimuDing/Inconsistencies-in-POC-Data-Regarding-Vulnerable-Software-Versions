{
    "text": "title : pgpdump 0.29 Endless Loop  ， detail : pgpdump version 0.29 suffers from an endless loop parsing issue that can lead to a denial of service.  ， cve : advisories | CVE-2016-4021  ，  ， desc : -BEGIN PGP SIGNED MESSAGE-  ， Hash : SHA512  ， Advisory ID : SYSS-2016-030  ， Product : pgpdump  ， Maintainer : Kazu Yamamoto  ， Affected Version ( s )  : 0.29  ， Tested Version ( s )  : 0.29  ， Vulnerability Type : Improper Input Validation ( CWE-20 )   ， Risk Level : Low  ， Solution Status : Fixed ( in 0.30 )   ， Maintainer Notification : 2016-04-12  ， Solution Date : 2016-04-12  ， Public Disclosure : 2016-04-12  ， CVE Reference : CVE-2016-4021  ， Author of Advisory : Klaus Eisentraut , SySS GmbH , https : /www.syss.de/advisories/  ，  ， Overview :   ， \"pgpdump\" is a PGP packet visualizer which displays the packet format of  ， OpenPGP ( RFC 4880 ) and PGP version 2 ( RFC 1991 )  ( see [ 1 ]  ) .  ，  ， Vulnerability Details :   ， When pgpdump is run on specially crafted input , a Denial-of-Service  ， condition occurs. The program runs with 100% CPU usage for an indefinite  ， amount of time.  ， This can be abused in scenarios where users can supply input to pgpdump ,   ， e.g. in http : /www.pgpdump.net/. The SySS GmbH believes that such a  ， scenario is rare.  ，  ， Proof of Concept ( PoC )  :   ， The vulnerability can be reproduced by the following command :   ，  $ echo -en '\\xa3\\x03' | ./pgpdump  ， Old : Compressed Data Packet ( tag 8 )   ， Comp alg - BZip2 ( comp 3 )   ，  [ . endless loop . ]   ， After issuing the command above , pgpdump 0.29 is running in an endless  ， loop and consuming 100% CPU utilization. This happens because of missing  ， error and EOF checking in the function read_binary (  ) in the C file  ， buffer.c.  ，  ， Solution :   ， The SySS GmbH provides the following patch which fixes the issue and was  ， provided as pull request on github.com. [ 3 ]   ，  $ git diff origin/master HEAD  ， diff -git a/buffer.c b/buffer.c  ， index 2cafc57.d7de94c 100644  ， - - a/buffer.c  ， + b/buffer.c  ，  @ -81 , 8 +81 , 11 @ line_not_blank ( byte * s )   ， private int  ， read_binary ( byte * p , unsigned int max )   ， {  ， - - / * errno * /  ， - - return fread ( p , sizeof ( byte )  , max , stdin )  ;   ， + size_t ret = fread ( p , sizeof ( byte )  , max , stdin )  ;   ， + if ( feof ( stdin )  | ferror ( stdin ) {  ， + warn_exit ( \"error in read_binary , maybe preliminary EOF?\" )  ;   ， + }  ， + return ret ;   ， }  ，   ， private int  ， Furthermore , the maintainer Kazu Yamamoto was contacted via email.  ， The modified patch has been merged by him and this vulnerability is now  ， fixed in version 0.30.",
    "time": "Apr 18, 2016"
}