{
    "text": "title : reSIProcate 1.10.2 Heap Overflow  ， detail : reSIProcate version 1.10.2 suffers from a heap overflow vulnerability.  ， cve : advisories | CVE-2018-12584  ，  ， desc : CVE ID : CVE-2018-12584  ， TIMELINE  ， Bug report with test code sent to main reSIProcate developers : 2018-06-15  ， Patch created by Scott Godin : 2018-06-18  ， CVE ID assigned : 2018-06-19  ， Patch committed to reSIProcate repository : 2018-06-21  ， Advisory first published on website : 2018-06-22  ， Advisory sent to Bugtraq mailing list : 2018-08-08  ， DESCRIPTION  ， A heap overflow can be triggered in the reSIProcate SIP stack when TLS is  ， enabled.  ， Abuse of this vulnerability may cause a denial of service of software using  ， reSIProcate and may also lead to remote code execution.  ， No SIP user authentication is required to trigger the vulnerability on the  ， client or server side.  ， TECHNICAL DETAILS  ， The file resiprocate/resip/stack/ConnectionBase.cx contained the following  ， code fragment :   ， bool  ， ConnectionBase : preparseNewBytes ( int bytesRead )   ， {  ， / * . * /  ，  ， {  ， / .bwc. We've filled our buffer ; go ahead and make more room.  ， size_t newSize = resipMin ( mBufferSize * 3/2 , contentLength )  ;   ， char * newBuffer = 0 ;   ，  ， {  ， newBuffer=new char [ newSize ]  ;   ， }  ， catch ( std : bad_alloc& )   ， {  ， ErrLog ( >\"Failed to alloc a buffer while receiving body ! \" )  ;   ，  ， }  ， memcpy ( newBuffer , mBuffer , mBufferSize )  ;   ， mBufferSize=newSize ;   ， delete [  ] mBuffer ;   ， mBuffer = newBuffer ;   ， }  ， / * . * /  ， }  ， Execution of the code above could be triggered by sending a partial SIP  ， message over TLS with a Content-Length header field , followed by sending a  ， packet over TLS with its associated SIP message body. By setting the  ， Content-Length field to a value that is lower than the length of the SIP  ， message body which followed , a malicious user could trigger a heap buffer  ， overflow.  ， The bug did not appear to be reproducible using TCP instead of TLS even when  ， the TCP packets were sent with delays between them.  ， TEST CODE  ， The following Python script can be used to test the vulnerability of both  ， server and client software based on reSIProcate.  ，  #  ! /usr/bin/python3  ，  # reSIProcate through 1.10.2 SIP over TLS heap overflow bug test code  ，  # Written by Joachim De Zutter ( 2018 ) ",
    "time": "Aug 8, 2018"
}