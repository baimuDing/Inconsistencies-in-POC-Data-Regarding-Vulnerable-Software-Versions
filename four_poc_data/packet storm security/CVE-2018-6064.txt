{
    "text": "title : Chrome V8 ElementsAccessorBase : CollectValuesOrEntriesImpl Type Confusion  ， detail : Chrome V8 suffers from a type confusion vulnerability in ElementsAccessorBase : CollectValuesOrEntriesImpl.  ， cve : advisories | CVE-2018-6064  ，  ， desc : Chrome : V8 : Type confusion in ElementsAccessorBase : CollectValuesOrEntriesImpl  ， CVE-2018-6064  ， Here's a snippet of the method.  ， <a href=\"https : /cs.chromium.org/chromium/src/v8/src/elements.cc?rcl=3cbf26e8a21aa76703d2c3c51adb9c96119500da&l=1051\" title=\" class=\" rel=\"nofollow\">https : /cs.chromium.org/chromium/src/v8/src/elements.cc?rcl=3cbf26e8a21aa76703d2c3c51adb9c96119500da&l=1051</a>  ， static Maybe<bool> CollectValuesOrEntriesImpl (   ， Isolate * isolate , Handle<JSObject> object ,   ， Handle<FixedArray> values_or_entries , bool get_entries , int * nof_items ,   ， PropertyFilter filter ) {  ， .  ，  ， Handle<Object> key ( keys->get ( i )  , isolate )  ;   ， Handle<Object> value ;   ， uint32_t index ;   ，  ， uint32_t entry = Subclass : GetEntryForIndexImpl (   ， isolate ,  * object , object->elements (  )  , index , filter )  ;   ，  ， PropertyDetails details = Subclass : GetDetailsImpl (  * object , entry )  ;   ，  ， value = Subclass : GetImpl ( isolate , object->elements (  )  , entry )  ;   ， } else {  ， LookupIterator it ( isolate , object , index , LookupIterator : OWN )  ;   ， ASSIGN_RETURN_ON_EXCEPTION_VALUE (   ， isolate , value , Object : GetProperty ( &it )  , Nothing<bool> (  )  ; <- ( a )   ， }  ，  ， value = MakeEntryPair ( isolate , index , value )  ;   ， }  ， values_or_entries->set ( count+ ,  * value )  ;   ， }  ，  * nof_items = count ;   ，  ， }  ， At ( a )  , the elements kind can be changed by getters. This will lead to type confusion in GetEntryForIndexImpl.",
    "time": "Apr 3, 2018"
}