{
    "text": "Date: Tue, 22 Sep 2020 13:37:16 +0000 ， From: Xen.org security team <security@.org> ， To: xen-announce@.ts.xen.org, xen-devel@.ts.xen.org, ， xen-users@.ts.xen.org, oss-security@.ts.openwall.com ， CC: Xen.org security team <security-team-members@.org> ， Subject: Xen Security Advisory 338 v4 (CVE-2020-25597) - once valid event ， channels may not turn invalid ， -BEGIN PGP SIGNED MESSAGE- ， Hash: SHA256 ， Xen Security Advisory CVE-2020-25597 / XSA-338 ， version 4 ， once valid event channels may not turn invalid ， UPDATES IN VERSION 4 ， Public release. ， ISSUE DESCRIPTION ， Logic in the handling of event channel operations in Xen assumes that an ， event channel, once valid, will not become invalid over the life time of ， a guest. However, operations like the resetting of all event channels ， may involve decreasing one of the bounds checked when determining ， validity. This may lead to bug checks triggering, crashing the host. ， IMPACT ， An unprivileged guest may be able to crash Xen, leading to a Denial of ， Service (DoS) for the entire system. ， VULNERABLE SYSTEMS ， All Xen versions from 4.4 onwards are vulnerable. Xen versions 4.3 and ， earlier are not vulnerable. ， Only systems with untrusted guests permitted to create more than the ， default number of event channels are vulnerable. This number depends ， on the architecture and type of guest. For 32-bit x86 PV guests, this ， is 1023; for 64-bit x86 PV guests, and for all ARM guests, this number ， is 4095. Systems where untrusted guests are limited to fewer than ， this number are not vulnerable. ， Note that xl and libxl limit max_event_channels to 1023 by default, so ， systems using exlusively xl, libvirt+libxl, or their own toolstack ， based on libxl, and not explicitly setting max_event_channels, are not ， vulnerable."
}