{
    "text": "Date: Tue, 27 Nov 2012 18:16:51 -0500 (EST) ， From: \"Steven M. Christey\" <coley@.-smtp.mitre.org> ， To: oss-security@.ts.openwall.com ， cc: Jan Lieskovsky <jlieskov@.hat.com> ， Subject: Re: [oCERT-2012-001] multiple implementations ， denial-of-service via MurmurHash algorithm collision ， Fortunately, CVE-2011-5370 through CVE-2011-5373 don't even exist, so I ， will REJECT these 2011 typos. ， - Steve ， On Tue, 27 Nov 2012, Andrea Barisani wrote: ， > On Tue, Nov 27, 2012 at 10:00:55AM -0500, Jan Lieskovsky wrote: ， > Hello Andrea, ， > Hello, ， > thank you for the notification. Just quick check - ， > could you confirm the correct CVE id for JRuby Murmur flaw ， > should be CVE-2012-5370, and not CVE-2011-5370? ， > Asking, because while oCERT-2012-001 page mentions CVE-2012-5370, ， > it actually links against: ， > http:/cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-5370 ， > (so some of them is typo), and CVE-2011-5370 would also make ， > sense in the order for other Murmur hash algorithm implementations ， > for other languages. ， > You are quite correct, unfortunately there were typos in the other CVEs as ， > well which slipped during the advisory review. ， > I just corrected the advisory. The correct CVEs are the following: ， > CVE-2012-5370 (JRuby), CVE-2012-5371 (Ruby), CVE-2012-5372 (Rubinius), ， > CVE-2012-5373 (Oracle JDK, OpenJDK) ， > I apologize for the error. ， > Cheers ， > Thank you & Regards, Jan. ， > Jan iankko Lieskovsky / Red Hat Security Response Team ， > - Original Message - ， > #2012-001 multiple implementations denial-of-service via MurmurHash algorithm ， > collision ， > Description: ， > A variety of programming languages suffer from a denial-of-service (DoS) ， > condition against storage functions of key/value pairs in hash data ， > structures, the condition can be leveraged by exploiting predictable ， > collisions in the underlying hashing algorithms. ， > The issue is similar to the one reported in oCERT-2011-003 and concerns the ， > MurmurHash algorithm family. The condition for predictable collisions in the ， > hashing functions has been reported for the following language ， > implementations: JRuby (MurmurHash2), Ruby (MurmurHash2), Rubinius ， > (MurmurHash3), Oracle JDK (MurmurHash), OpenJDK (MurmurHash). In the case of ， > Java OpenJDK the hash function affected by the reported issue is not enabled ， > by default, the default function is however reported vulnerable to ， > oCERT-2011-003. ， > Affected version: ， > Ruby < 1.9.3-p327 ， > JRuby all versions ， > Rubinius, all versions ， > Oracle JDK <= 7 ， > OpenJDK <= 7 ， > Fixed version: ， > Ruby >= 1.9.3-p327 ， > JRuby, N/A ， > Rubinius, N/A ， > Oracle JDK, N/A ， > OpenJDK, N/A"
}