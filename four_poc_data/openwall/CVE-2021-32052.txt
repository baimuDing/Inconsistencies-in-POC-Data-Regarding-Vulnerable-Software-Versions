{
    "text": "Subject : Django : CVE-2021-32052 : Header injection possibility since ， URLValidator accepted newlines in input on Python 3.9.5+ ， https : /www.djangoproject.com/weblog/2021/may/06/security-releases/ ， In accordance with `our security release policy ， <https : /docs.djangoproject.com/en/dev/internals/security/>`_ , the ， Django team ， is issuing ， `Django 3.2.2 <https : /docs.djangoproject.com/en/dev/releases/3.2.2/>`_ ,  ， `Django 3.1.10 ， <https : /docs.djangoproject.com/en/dev/releases/3.1.10/>`_ , and ， `Django 2.2.22 <https : /docs.djangoproject.com/en/dev/releases/2.2.22/>`_. ， These releases address the security issue with severity \"moderate\" ， detailed below. We encourage all users of Django to upgrade as soon as ， possible. ， CVE-2021-32052 : Header injection possibility since `URLValidator` ， accepted newlines in input on Python 3.9.5+ ， On Python 3.9.5+ , `URLValidator` didn't prohibit ， newlines and tabs. If you used values with newlines in HTTP response ,  ， you could ， suffer from header injection attacks. Django itself wasn't vulnerable ， because ， `HttpResponse` prohibits newlines in HTTP headers. ， Moreover , the `URLField` form field which uses `URLValidator` silently ， removes newlines and tabs on Python 3.9.5+ , so the possibility of newlines ， entering your data only existed if you are using this validator outside ， of the ， form fields. ， This issue was introduced by the `bpo-43882 ， <https : /bugs.python.org/issue43882>`_ fix. ， Affected supported versions ，  * Django main branch ，  * Django 3.2 ，  * Django 3.1 ，  * Django 2.2",
    "time": "Thu, 6 May 2021 09:50:26 +0200"
}