{
    "text": "Date: Tue, 15 Dec 2020 12:20:19 +0000 ， From: Xen.org security team <security@.org> ， To: xen-announce@.ts.xen.org, xen-devel@.ts.xen.org, ， xen-users@.ts.xen.org, oss-security@.ts.openwall.com ， CC: Xen.org security team <security-team-members@.org> ， Subject: Xen Security Advisory 325 v3 (CVE-2020-29483) - Xenstore: guests ， can disturb domain cleanup ， -BEGIN PGP SIGNED MESSAGE- ， Hash: SHA256 ， Xen Security Advisory CVE-2020-29483 / XSA-325 ， version 3 ， Xenstore: guests can disturb domain cleanup ， UPDATES IN VERSION 3 ， Public release. ， ISSUE DESCRIPTION ， Xenstored and guests communicate via a shared memory page using a ， specific protocol. When a guest violates this protocol, xenstored will ， drop the connection to that guest. ， Unfortunately this is done by just removing the guest from xenstored's ， internal management, resulting in the same actions as if the guest had ， been destroyed, including sending an @releaseDomain event. ， @releaseDomain events do not say guest has been removed. All watchers ， of this event must look at the states of all guests to find the guest ， which has been removed. When an @releaseDomain is generated due to ， domain xenstored protocol violation, As the guest is still running, so ， the watchers will not react. ， Later, when the guest is actually destroyed, xenstored will no longer ， have it stored in its internal data base, so no further @releaseDomain ， event will be sent. This can lead to a zombie domain; memory mappings ， of that guest's memory will not be removed, due to the missing ， event. This zombie domain will be cleaned up only after another domain ， is destroyed, as that will trigger another @releaseDomain event. ， If the device model of the guest which violated the Xenstore protocol ， is running in a stub-domain, a use-after-free case could happen in ， xenstored, after having removed the guest from its internal data base, ， possibly resulting in a crash of xenstored. ， IMPACT ， A malicious guest can block resources of the host for a period after ， its own death. ， Guests with a stub domain device model can eventually crash xenstored, ， resulting in a more serious denial of service (the prevention of any ， further domain management operations). ， VULNERABLE SYSTEMS ， All versions of Xen are affected. ， Only the C variant of Xenstore is affected, the Ocaml variant is not ， affected. ， Only HVM guests with a stubdom device model can cause a serious DoS."
}