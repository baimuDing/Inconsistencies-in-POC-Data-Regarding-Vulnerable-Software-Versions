{
    "text": "Subject : Django : CVE-2022-34265 : Potential SQL injection via Trunc ( kind ) and ， Extract ( lookup_name ) arguments. ， https : /www.djangoproject.com/weblog/2022/jul/04/security-releases/ ， In accordance with `our security release policy ， <https : /docs.djangoproject.com/en/dev/internals/security/>`_ , the ， Django team ， is issuing ， `Django 4.0.6 <https : /docs.djangoproject.com/en/dev/releases/4.0.6/>`_ and ， `Django 3.2.14 <https : /docs.djangoproject.com/en/dev/releases/3.2.14/>`_. ， These release addresses the security issue detailed below. We encourage all ， users of Django to upgrade as soon as possible. ， CVE-2022-34265 : Potential SQL injection via `Trunc ( kind ) ` and ， `Extract ( lookup_name ) ` arguments ， `Trunc (  ) ` and `Extract (  ) ` database functions were ， subject to SQL injection if untrusted data was used as a ， `kind`/`lookup_name` value. ， Applications that constrain the lookup name and kind choice to a known safe ， list are unaffected. ， This security release mitigates the issue , but we have identified ， improvements ， to the Database API methods related to date extract and truncate that ， would be ， beneficial to add to Django 4.1 before it's final release. This will ， impact 3rd ， party database backends using Django 4.1 release candidate 1 or newer ,  ， until they ， are able to update to the API changes. We apologize for the inconvenience. ， Thanks Takuto Yoshikai ( Aeye Security Lab ) for the report. ， This issue has severity \"high\" according to the Django security policy. ， Affected supported versions ，  * Django main branch ，  * Django 4.1 ( currently at beta status )  ，  * Django 4.0 ，  * Django 3.2",
    "time": "Mon, 4 Jul 2022 10:13:32 +0200"
}