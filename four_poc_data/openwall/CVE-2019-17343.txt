{
    "text": "Date: Fri, 25 Oct 2019 11:11:15 +0000 ， From: Xen.org security team <security@.org> ， To: xen-announce@.ts.xen.org, xen-devel@.ts.xen.org, ， xen-users@.ts.xen.org, oss-security@.ts.openwall.com ， CC: Xen.org security team <security-team-members@.org> ， Subject: Xen Security Advisory 288 v3 (CVE-2019-17343) - x86: Inconsistent ， PV IOMMU discipline ， -BEGIN PGP SIGNED MESSAGE- ， Hash: SHA256 ， Xen Security Advisory CVE-2019-17343 / XSA-288 ， version 3 ， x86: Inconsistent PV IOMMU discipline ， UPDATES IN VERSION 3 ， CVE assigned. ， ISSUE DESCRIPTION ， In order for a PV domain to set up DMA from a passed-through device to ， one of its pages, the page must be mapped in the IOMMU. On the other ， hand, before a PV page may be used as a \"special\" page type (such as a ， pagetable or descriptor table), it _must not_ be writable in the IOMMU ， (otherwise a malicious guest could DMA arbitrary page tables into the ， memory, bypassing Xen's safety checks); and Xen's current rule is to ， have such pages not in the IOMMU at all. ， Until now, in order to accomplish this, the code has borrowed HVM ， domain's \"physmap\" concept: When a page is assigned to a guest, ， guess_physmap_add_entry() is called, which for PV guests, will create ， a writable IOMMU mapping; and when a page is removed, ， guest_physmap_remove_entry() is called, which will remove the mapping. ， Additionally, when a page gains the PGT_writable page type, the page ， will be added into the IOMMU; and when the page changes away from a ， PGT_writable type, the page will be removed from the IOMMU. ， Unfortunately, borrowing the \"physmap\" concept from HVM domains is ， problematic. HVM domains have a lock on their p2m tables, ensuring ， synchronization between modifications to the p2m; and all hypercall ， parameters must first be translated through the p2m before being used. ， Trying to mix this locked-and-gated approach with PV's lock-free ， approach leads to several races and inconsistencies. ， IMPACT ， An untrusted PV domain with access to a physical device can DMA into ， its own pagetables, leading to privilege escalation. ， VULNERABLE SYSTEMS ， Only x86 systems are vulnerable. ARM systems are not vulnerable. ， Only systems where PV guests are given direct access to physical ， devices (PCI pass-through) are vulnerable. Systems with only HVM ， guests, or systems which do not use PCI pass-through, are not ， vulnerable."
}