{
    "text": "Subject : Django security releases issued : Multiple CVEs ， Permalink : https : /www.djangoproject.com/weblog/2019/aug/01/security-releases/ ， In accordance with `our security release policy <https : /docs.djangoproject.com/en/dev/internals/security/>`_ , the Django team is issuing `Django 1.11.23 <https : /docs.djangoproject.com/en/dev/releases/1.11.23/>`_ , `Django 2.1.11 <https : /docs.djangoproject.com/en/dev/releases/2.1.11/>`_ , and `Django 2.2.4 <https : /docs.djangoproject.com/en/dev/releases/2.2.4/>`_. These releases addresses the security issues detailed below. We encourage all users of Django to upgrade as soon as possible. ， Thanks Guido Vranken and Sage M. Abdullah for reporting these issues. ， CVE-2019-14232 : Denial-of-service possibility in `django.utils.text.Truncator` ， If `django.utils.text.Truncator`'s `chars (  ) ` and `words (  ) ` methods ， were passed the `html=True` argument , they were extremely slow to evaluate ， certain inputs due to a catastrophic backtracking vulnerability in a regular ， expression. The `chars (  ) ` and `words (  ) ` methods are used to implement the ， `truncatechars_html` and `truncatewords_html` template ， filters , which were thus vulnerable. ， The regular expressions used by `Truncator` have been simplified in order to ， avoid potential backtracking issues. As a consequence , trailing punctuation may ， now at times be included in the truncated output. ， CVE-2019-14233 : Denial-of-service possibility in `strip_tags (  ) ` ， Due to the behavior of the underlying `HTMLParser` ,  ， `django.utils.html.strip_tags (  ) ` would be extremely slow to evaluate ， certain inputs containing large sequences of nested incomplete HTML entities. ， The `strip_tags (  ) ` method is used to implement the corresponding ， `striptags` template filter , which was thus also vulnerable. ， `strip_tags (  ) ` now avoids recursive calls to `HTMLParser` when progress ， removing tags , but necessarily incomplete HTML entities , stops being made. ， Remember that absolutely NO guarantee is provided about the results of ， `strip_tags (  ) ` being HTML safe. So NEVER mark safe the result of a ， `strip_tags (  ) ` call without escaping it first , for example with ， `django.utils.html.escape (  ) `. ， CVE-2019-14234 : SQL injection possibility in key and index lookups for `JSONField`/`HStoreField` ， Key and index lookups for ， `django.contrib.postgres.fields.JSONField` and key lookups for `django.contrib.postgres.fields.HStoreField` ， were subject to SQL injection , using a suitably crafted dictionary , with ， dictionary expansion , as the ` * kwargs` passed to `QuerySet.filter (  ) `. ， CVE-2019-14235 : Potential memory exhaustion in `django.utils.encoding.uri_to_iri (  ) ` ， If passed certain inputs , `django.utils.encoding.uri_to_iri` could lead ， to significant memory usage due to excessive recursion when re-percent-encoding ， invalid UTF-8 octet sequences. ， `uri_to_iri (  ) ` now avoids recursion when re-percent-encoding invalid UTF-8 ， octet sequences. ， Affected supported versions ，  * Django master development branch ，  * Django 2.2 before version 2.2.4 ，  * Django 2.1 before version 2.1.11 ，  * Django 1.11 before version 1.11.23",
    "time": "Thu, 1 Aug 2019 11:28:22 +0200"
}