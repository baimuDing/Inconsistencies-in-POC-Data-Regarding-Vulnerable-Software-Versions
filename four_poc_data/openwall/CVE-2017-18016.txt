{
    "text": "Subject : CVE-2017-18016 - Paritytech Parity Ethereum built-in Dapp Browser <= v1.6.10 webproxy token reuse same-origin policy bypass ， VuNote ， Author : <github.com/tintinweb> ， Ref : https : /github.com/tintinweb/pub/tree/master/pocs/cve-2017-18016 ，  [ 5 ]  ， Version : 0.3 ， Tag : parity same origin policy bypass webproxy token reuse ， Overview ， Name : parity ， Vendor : paritytech ， References :  * https : /parity.io/ [ 1 ]  ， Version : 1.6.8 ， Latest Version : 1.7.12 ( stable ) - fixed ， 1.8.5 ( beta ) - fixed ， Other Versions : <= 1.6.10 ( stable ) - vulnerable ， Platform ( s )  : cross ， Technology : rust js ， Vuln Classes : CWE-346 ， Origin : local ( remote website , malicious dapp )  ， Min. Privs. : - ， CVE : CVE-2017-18016 ， Description ， quote website [ 1 ]  ， >Parity Technologies is proud to present our powerful new Parity Browser. ， Integrated directly into your Web browser , Parity is the fastest and most ， secure way of interacting with the Ethereum network. ， Summary ， PoC : https : /tintinweb.github.io/pub/pocs/cve-2017-18016/ [ 4 ]  ， > Parity Browser <= 1.6.8 allows remote attackers to bypass the Same Origin ， Policy and obtain sensitive information by requesting other websites via the ， Parity web proxy engine ( reusing the current website's token , which is not ， bound to an origin ) . ，  !  [ parity cookie ]  ( sop_cookie.gif )  ，  *  ( A )  * Ethereum Parity's built-in dapp/web-browsing functionality is ， rendering browser same-origin policy ( SOP ) ineffective by proxying ， requests with the parity main process. As a result , any website ， navigated to ends up being origin http : /localhost : 8080. This also means ， that all websites navigated to share the same origin and thus are not ， protected by the browser SOP allowing any proxied website/dapp to access ， another proxied website/dapp's resources ( Cookies , . ) . ， /see attached PoC - index.html /",
    "time": "Wed, 10 Jan 2018 00:56:27 +0100"
}